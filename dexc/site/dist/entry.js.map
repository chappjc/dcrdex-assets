{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"\\\"c9c24aabb90e3c10b215877e22d9328729b65a64\\\"\"","webpack:///./src/js/doc.js","webpack:///./src/js/state.js","webpack:///./src/js/forms.js","webpack:///./src/js/basepage.js","webpack:///./src/js/http.js","webpack:///./src/js/register.js","webpack:///./src/js/login.js","webpack:///./src/js/notifications.js","webpack:///./src/js/wallets.js","webpack:///./src/js/settings.js","webpack:///./src/js/orderbook.js","webpack:///./src/js/charts.js","webpack:///./src/js/orderutil.js","webpack:///./src/js/ws.js","webpack:///./src/js/markets.js","webpack:///./src/js/orders.js","webpack:///./src/js/order.js","webpack:///./src/js/app.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","parser","window","DOMParser","BipSymbols","values","0","42","2","22","28","3","fullPrecisionSpecs","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","Doc","el","id","querySelector","ev","f","addEventListener","removeEventListener","html","parseFromString","e","rect","getBoundingClientRect","pageX","left","right","pageY","top","bottom","box","docEl","document","documentElement","scrollTop","scrollLeft","w","offsetWidth","h","offsetHeight","bodyTop","bodyLeft","width","height","centerX","centerY","firstChild","removeChild","els","classList","add","remove","contains","duration","easingAlgo","easer","Easing","linear","start","Date","getTime","end","range","now","sleep","main","ids","page","forEach","idel","x","toLocaleString","split","whole","frac","substring","replace","symbol","indexOf","ancestor","y","mo","seconds","Math","floor","result","count","timeMod","aYear","aMonth","aDay","anHour","aMinute","inputFields","inputField","preventDefault","easeIn","easeOut","easeInHard","easeOutHard","WalletIcons","stateElement","this","icons","sleeping","locked","unlocked","nowallet","syncing","status","hide","show","textContent","wallet","icon","running","synced","dataset","tooltip","syncProgress","toFixed","setSyncing","open","console","error","ms","Promise","resolve","setTimeout","dur","State","cname","cvalue","setTime","expires","toUTCString","cookie","k","v","trim","dark","setCookie","body","filter","item","includes","length","localStorage","setItem","JSON","stringify","clear","getItem","parse","getCookie","app","BasePage","note","notifiers","type","requestJSON","method","addr","reqBody","response","fetch","headers","Headers","obj","json","requestSuccessful","msg","text","postJSON","data","NewWalletForm","application","form","success","currentAsset","fields","parsePage","subform","WalletConfigForm","walletSettings","submitAdd","nwAppPass","newWalletErr","createForm","assetID","parseInt","pass","newWalletPass","config","map","appPass","loading","res","loaded","checkResponse","setError","asset","nwAssetLogo","src","logoPath","nwAssetName","info","update","errMsg","setLoadedConfig","sectionize","configElements","configOpts","allSettings","tmplElement","dynamicOpts","textInputTmpl","checkboxTmpl","fileSelector","fileInput","showOther","showIcon","hideIcon","showHideMsg","otherSettings","loadedSettingsMsg","loadedSettings","defaultSettingsMsg","defaultSettings","click","fileInputChanged","setOtherSettingsViz","files","configtext","keys","append","setConfig","reorder","children","loadedOpts","defaultOpts","walletInfo","configopts","empty","defaultedOpts","addOpt","opt","elID","isboolean","cloneNode","input","configOpt","label","htmlFor","prepend","displayname","appendChild","noecho","description","checked","push","bindTooltips","visible","cfg","finds","querySelectorAll","isTruthyString","toLowerCase","bindOpenWallet","setAsset","uwAssetLogo","uwAssetName","uwAppPass","submitUnlock","unlockErr","submitBttn","handler","wrapper","RegistrationPage","bindForm","appPWForm","appPWSubmit","setAppPass","walletForm","newWalletForm","changeForm","dexAddrForm","assets","unlockWalletForm","defaultTLSText","selectedCert","certFile","readCert","removeCert","resetCert","addCert","submitDEXAddr","checkDEX","dexShowMore","dexCertBox","confirmRegForm","submitConfirm","registerDEX","loadDefaults","form1","form2","shift","animate","progress","style","focus","appPWErrMsg","pw","appPW","pwAgain","appPWAgain","setNotes","appErrMsg","user","authed","updateMenuItemsDisplay","dexAddrErr","dexAddr","cert","fee","feeDisplay","formatCoinValue","dexNeedCert","regErr","registration","fetchUser","loadPage","LoginPage","forms","loginForm","submit","login","notes","reverse","make","subject","details","severity","stamp","WalletsPage","firstRow","getAction","row","rowInfos","walletTable","tr","rowInfo","stateIcons","actions","connect","unlock","withdraw","deposit","lock","settings","dexTitle","removeAttribute","oneMarket","markets","displayed","animation","openAsset","walletAsset","reconfigAsset","createWalletSuccess","walletReconfig","reconfigInputs","openForm","openWalletSuccess","withdrawForm","submitWithdraw","submitReconfig","reconfig","showMarkets","rightBox","lastFormAsset","a","run","stopPropagation","doConnect","showWithdraw","showDeposit","showNewWallet","showOpen","showReconfig","entries","newDepAddrBttn","newDepositAddress","withdrawAvail","withdrawAmt","changePW","showChangePW","walletRepw","submitRepw","submitChangePW","balance","handleBalanceNote","walletstate","handleWalletStateNote","walletconfig","focuser","opacity","marketsBox","card","marketsCard","hideBox","marketsFor","exchanges","host","xc","market","baseid","quoteid","header","mBox","prettyMarketName","counterSymbol","basesymbol","quotesymbol","pageData","base","quote","showBox","walletPass","reconfigErr","recfgAssetLogo","recfgAssetName","repwErr","repwAssetLogo","repwAssetName","repwAppPw","newPW","repwNewPw","depositErr","depositLogo","walletMap","depositAsset","depositName","depositAddress","address","notify","ntfn","withdrawAddr","available","withdrawLogo","withdrawName","encrypted","withdrawErr","round","withdrawPW","reconfigPW","readWallet","toUpperCase","SettingsPage","darkMode","showPokes","showPopups","commitHash","addADex","showForm","onCertFileChange","clearCertFile","verifyDEX","closePopups","mouseInElement","currentForm","OrderBook","mktBook","baseSymbol","quoteSymbol","buys","book","sells","ord","side","sell","splice","findIdx","rate","less","token","removeFromSide","findOrder","qty","updateRemainingSide","epochIdx","approve","undefined","epoch","best","bestGapOrder","unbind","PIPI","PI","plusChar","String","fromCharCode","minusChar","darkTheme","axisLabel","gridBorder","gridLines","gapLine","zoom","zoomHover","sellLine","buyLine","sellFill","buyFill","crosshairs","legendFill","legendText","lightTheme","DepthChart","parent","reporters","theme","isDark","canvas","createElement","ctx","getContext","textAlign","textBaseline","dataExtents","zoomLevel","lotSize","rateStep","mousePos","clientX","clientY","draw","wheelLimiter","wheeled","wheel","resize","resize_","clientWidth","clientHeight","plotExtents","Extents","xLblExtents","yLblExtents","plotRegion","Region","xRegion","yRegion","zoomInBttn","zoomOutBttn","deltaY","bigger","clamp","min","max","translator","price","unx","clearRect","baseTicker","quoteTicker","gap","midGap","gapWidth","minZoom","halfWindow","high","low","buyDepth","buyEpoch","sellDepth","sellEpoch","sum","epochSum","pt","buySum","last","epochBuySum","sellSum","epochSellSum","maxY","font","fillStyle","yLabels","makeLabels","newWidth","widest","extents","legendData","xLabels","lineWidth","plot","tools","strokeStyle","extX","extY","beginPath","dataCoords","moveTo","lineTo","stroke","lbls","lbl","line","val","fillText","formatLabelValue","topCenterX","midX","topCenterY","zoomPct","xRange","zoomText","measureText","bttnLeft","bttnTop","bttnSize","setExtents","hover","midY","dataX","evalSide","trigger","ptX","dotColor","bestDepth","setLineDash","depth","lastY","unitCenter","txt","lastX","drawDepth","topLeft","textMetrics","halfWidth","topCenter","globalAlpha","fillRect","fontSize","lineY","screenX","dot","color","radius","arc","fill","volume","boxWidth","wide","texts","rectTop","rectH","firstPt","closePath","bestGapBuy","bestGapSell","b","xMin","xMax","yMin","yMax","context","yRange","ext","region","screenMinX","screenW","screenMaxY","screenH","xFactor","yFactor","uny","drawFunc","skipMask","save","clip","tx","ty","setTransform","transform","restore","spacingGuess","step","unit","tickGuess","tick","absMax","abs","sigFigs","log10","pts","Number","toPrecision","unitW","arr","x0","y0","x1","y1","skipStroke","labelSpecs","sellString","typeString","tif","isMarketBuy","statusString","order","isLive","hasLiveMatches","matches","match","revoked","cancelling","settled","reduce","isCancel","forward","route","payload","handlers","err","code","message","ws","uri","connection","queue","maxQlength","readyState","WebSocket","OPEN","log","send","reason","close","reloader","retrys","go","conn","timeout","onmessage","evt","onclose","clearTimeout","delay","pow","onopen","request","onerror","check","MarketsPage","parentElement","registrationStatus","openFunc","currentCreate","cancelData","metaOrders","reportPrice","chart","marketChart","wgt","balanceWgt","BalanceWidget","balanceTable","baseIcons","quoteIcons","walletUnlocked","expired","newWalletBttn","showCreate","cleanTemplates","rowTemplate","liveTemplate","marketList","MarketList","xcSections","marketRows","mkt","setMarket","baseID","quoteID","quoteUnits","baseUnits","buyBttn","swapBttns","sellBttn","setOrderBttnText","setOrderVisibility","limitBttn","marketBttn","setMarketBuyOrderEstimate","disableMouseWheel","rateField","lotField","qtyField","mktBuyField","registerRoute","handleBookRoute","handleBookOrderRoute","handleUnbookOrderRoute","handleUpdateRemainingRoute","handleEpochOrderRoute","createWallet","orderForm","stepSubmit","verifyForm","vSubmit","submitOrder","cancelForm","cancelSubmit","submitCancel","vPass","cancelPass","lotChanged","quantityChanged","marketBuyChanged","rateFieldChanged","previewOrder","marketSearch","filterMarkets","selected","setChartRatio","chartDivRatio","chartResizer","button","chartRatio","trackMouse","ee","rightSide","store","handleOrderNote","handleEpochNote","setConnectionStatus","feepayment","handleFeePayment","makeMarket","exists","first","secondTicker","setInterval","metaOrder","timeSince","setRegistrationStatusVisibility","dex","confs","confsrequired","isLimit","priceBox","tifBox","qtyBox","mktBuyBox","isSell","feePaid","hasFeePending","assetsAreSupported","hasWallets","loaderMsg","baseCfg","quoteCfg","titleContent","confStatusMsg","titleClass","regStatusTitle","regStatusConfsDisplay","confirmationsRequired","confirmations","confReq","regStatusDex","setRegistrationStatusView","feePending","updateRegistrationStatusView","toggle","resolveOrderFormVisibility","isHidden","sid","marketID","marketLoader","setLoaderMsgVisibility","limit","asAtoms","tifnow","tifNow","parseOrder","orderErr","quoteAsset","total","orderPreview","q","loadTable","addTableOrder","buyRows","sellRows","set","buffer","buybuffer","minMktBuy","oid","orders","liveList","updateUserOrderRow","showCancel","href","bindInternalNavigation","handleBook","select","setWallets","refreshActiveOrders","removeTableOrder","updateRemaining","updateTableOrder","baseAsset","fromAsset","toAsset","verifyLimit","verifyMarket","vRate","vQty","vBase","vQuote","vSide","vTotal","received","lots","vmTotal","vmAsset","vmLots","req","orderID","bttn","remaining","filled","cancelRemain","Order","cancelUnit","validateOrder","baseWallet","quoteWallet","showVerify","setEpoch","clearOrderTableEpochs","alreadyMatched","statusTD","updateAsset","finalize","adjusted","mktBuyLots","mktBuyScore","loadTableSide","bookSide","tbody","cssClass","orderTableRow","insertBefore","addQty","nextSibling","Array","from","innerText","newEpoch","clearOrderTableEpochSide","qtyTD","td","filterTxt","setFilter","deregisterRoute","unattach","clearInterval","div","xcTmpl","ExchangeSection","sortedSections","sort","xcSection","firstXC","firstMkt","marketRow","setConnected","connected","tmpl","disconnectedIcon","rows","rowTmpl","MarketRow","sortedMarkets","isConnected","table","logo","baseImg","avail","baseAvail","newWalletRow","baseNewWalletRow","baseNewButton","baseLocked","immature","baseImmature","unsupported","baseUnsupported","baseExpired","baseConnect","spinner","baseSpinner","iconBox","baseWalletState","quoteImg","quoteAvail","quoteNewWalletRow","quoteNewButton","quoteLocked","quoteImmature","quoteUnsupported","quoteExpired","quoteConnect","quoteSpinner","quoteWalletState","updateWallet","bal","fetchBalance","contractlocked","parseFloat","before","updateDataCol","col","tmpls","OrdersPage","offset","orderTmpl","filterState","hosts","statuses","search","URLSearchParams","location","readFilter","filterKey","subFilter","hostFilter","assetFilter","statusFilter","applyButtons","monitorFilter","applyBttn","submitFilter","compareSubFilter","filter1","filter2","entry","parseSubFilter","ordersTable","nextPage","tableBody","appendOrders","tmplID","mktID","toQty","to","fromQty","rateString","dateTime","url","URL","setQuery","join","toString","history","replaceState","setOrders","fetchOrders","currentFilter","orderLoader","OrderPage","stampers","net","fetchOrder","cancelBttn","link","assetExplorer","CoinExplorers","explorerId","formatter","explorerCoin","setStamp","span","cid","txid","vout","constructors","register","wallets","Application","pokes","accounts","loggers","enableLogger","loggerID","state","recorderKeys","recorders","recordLogger","on","dumpLogger","record","btoa","download","handlerFromPath","pathname","attachHeader","attachCommon","attach","getSocketURI","protocol","reconnected","reload","getJSON","skipPush","noteBox","profileBox","origin","requestedHandler","ok","doc","noderize","delivered","path","pushState","title","replaceWith","handlerID","loadedPage","unload","constructor","lyt","layoutMetrics","popupNotes","popupTmpl","pg","noteTmpl","pokeTmpl","loader","backgroundColor","noteMenuEntry","pokeList","noteList","ackNotes","noteCat","pokeCat","showDropdown","noteIndicator","acked","setNoteTimes","storeNotes","profileMenuEntry","innerNoteIcon","innerProfileIcon","profileSignout","signOut","dialog","ico","innerWidth","isDisplayed","acks","pageURL","params","searchParams","walletsMenuEntry","marketsMenuEntry","node","isPaid","updateExchangeRegistration","prependNoteElement","handleFeePaymentNote","indicator","setSeverityClass","pn","prependPokeElement","nowString","time","makePoke","prependListElement","skipSave","makeNote","unacked","ni","noteCacheSize","lastChild","cls","toLocaleDateString","toLocaleTimeString","resp","skipNote","inited","clearAllStore","removeAuthCK","severityClassMap","getHours","padStart","getMinutes","getSeconds","getMilliseconds"],"mappings":"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","file":"entry.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = \"c9c24aabb90e3c10b215877e22d9328729b65a64\";","const parser = new window.DOMParser()\n\nconst FPS = 30\n\nconst BipIDs = {\n  0: 'btc',\n  42: 'dcr',\n  2: 'ltc',\n  22: 'mona',\n  28: 'vtc',\n  3: 'doge'\n}\n\nconst BipSymbols = Object.values(BipIDs)\n\n// Parameters for printing asset values.\nconst fullPrecisionSpecs = {\n  minimumSignificantDigits: 4,\n  maximumSignificantDigits: 8,\n  minimumFractionDigits: 8,\n  maximumFractionDigits: 8\n}\n\n// Helpers for working with the DOM.\nexport default class Doc {\n  /*\n   * idel is the element with the specified id that is the descendent of the\n   * specified node.\n   */\n  static idel (el, id) {\n    return el.querySelector(`#${id}`)\n  }\n\n  /* bind binds the function to the event for the element. */\n  static bind (el, ev, f) {\n    el.addEventListener(ev, f)\n  }\n\n  /* unbind removes the handler for the event from the element. */\n  static unbind (el, ev, f) {\n    el.removeEventListener(ev, f)\n  }\n\n  /* noderize creates a Document object from a string of HTML. */\n  static noderize (html) {\n    return parser.parseFromString(html, 'text/html')\n  }\n\n  /*\n   * mouseInElement returns true if the position of mouse event, e, is within\n   * the bounds of the specified element.\n   */\n  static mouseInElement (e, el) {\n    const rect = el.getBoundingClientRect()\n    return e.pageX >= rect.left && e.pageX <= rect.right &&\n      e.pageY >= rect.top && e.pageY <= rect.bottom\n  }\n\n  /*\n   * layoutMetrics gets information about the elements position on the page.\n   */\n  static layoutMetrics (el) {\n    var box = el.getBoundingClientRect()\n    var docEl = document.documentElement\n    const top = box.top + docEl.scrollTop\n    const left = box.left + docEl.scrollLeft\n    const w = el.offsetWidth\n    const h = el.offsetHeight\n    return {\n      bodyTop: top,\n      bodyLeft: left,\n      width: w,\n      height: h,\n      centerX: left + w / 2,\n      centerY: top + h / 2\n    }\n  }\n\n  /* empty removes all child nodes from the specified element. */\n  static empty (el) {\n    while (el.firstChild) el.removeChild(el.firstChild)\n  }\n\n  /*\n   * hide hides the specified elements. This is accomplished by adding the\n   * bootstrap d-hide class to the element. Use Doc.show to undo.\n   */\n  static hide (...els) {\n    for (const el of els) el.classList.add('d-hide')\n  }\n\n  /*\n   * show shows the specified elements. This is accomplished by removing the\n   * bootstrap d-hide class as added with Doc.hide.\n   */\n  static show (...els) {\n    for (const el of els) el.classList.remove('d-hide')\n  }\n\n  /* isHidden returns true if the specified element is hidden */\n  static isHidden (el) {\n    return el.classList.contains('d-hide')\n  }\n\n  /* isDisplayed returns true if the specified element is not hidden */\n  static isDisplayed (el) {\n    return !el.classList.contains('d-hide')\n  }\n\n  /*\n   * animate runs the supplied function, which should be a \"progress\" function\n   * accepting one argument. The progress function will be called repeatedly\n   * with the argument varying from 0.0 to 1.0. The exact path that animate\n   * takes from 0.0 to 1.0 will vary depending on the choice of easing\n   * algorithm. See the Easing object for the available easing algo choices. The\n   * default easing algorithm is linear.\n   */\n  static async animate (duration, f, easingAlgo) {\n    const easer = easingAlgo ? Easing[easingAlgo] : Easing.linear\n    const start = new Date().getTime()\n    const end = start + duration\n    const range = end - start\n    const frameDuration = 1000 / FPS\n    var now = start\n    while (now < end) {\n      f(easer((now - start) / range))\n      await sleep(frameDuration)\n      now = new Date().getTime()\n    }\n    f(1)\n  }\n\n  /*\n   * parsePage constructs a page object from the supplied list of id strings.\n   * The properties of the returned object have names matching the supplied\n   * id strings, with the corresponding value being the Element object. It is\n   * not an error if an element does not exist for an id in the list.\n   */\n  static parsePage (main, ids) {\n    const get = s => Doc.idel(main, s)\n    const page = {}\n    ids.forEach(id => { page[id] = get(id) })\n    return page\n  }\n\n  // formatCoinValue formats the asset value to a string.\n  static formatCoinValue (x) {\n    var [whole, frac] = x.toLocaleString('en-us', fullPrecisionSpecs).split('.')\n    // toLocalString gives precedence to minimumSignificantDigits, so the result\n    // can have no fractional part, despite the minimumFractionDigits setting.\n    if (!frac) return whole\n    // ... or it can have more than 8 fractional digits, despite of the\n    // maximumFractionDigits setting.\n    frac = frac.substring(0, 8)\n    if (frac === '00000000') return whole\n    // Trim trailing zeros.\n    return `${whole}.${frac.replace(/,+$/, '')}`\n  }\n\n  /*\n   * logoPath creates a path to a png logo for the specified ticker symbol. If\n   * the symbol is not a supported asset, the generic letter logo will be\n   * requested instead.\n   */\n  static logoPath (symbol) {\n    if (BipSymbols.indexOf(symbol) === -1) symbol = symbol.substring(0, 1)\n    return `/img/coins/${symbol}.png`\n  }\n\n  /*\n  * tmplElement is a helper function for grabbing sub-elements of the market list\n  * template.\n  */\n  static tmplElement (ancestor, s) {\n    return ancestor.querySelector(`[data-tmpl=\"${s}\"]`)\n  }\n\n  /*\n   * timeSince returns a string representation of the duration since the specified\n   * unix timestamp.\n   */\n  static timeSince (t) {\n    var seconds = Math.floor(((new Date().getTime()) - t))\n    var result = ''\n    var count = 0\n    const add = (n, s) => {\n      if (n > 0 || count > 0) count++\n      if (n > 0) result += `${n} ${s} `\n      return count >= 2\n    }\n    var y, mo, d, h, m, s\n    [y, seconds] = timeMod(seconds, aYear)\n    if (add(y, 'y')) { return result }\n    [mo, seconds] = timeMod(seconds, aMonth)\n    if (add(mo, 'mo')) { return result }\n    [d, seconds] = timeMod(seconds, aDay)\n    if (add(d, 'd')) { return result }\n    [h, seconds] = timeMod(seconds, anHour)\n    if (add(h, 'h')) { return result }\n    [m, seconds] = timeMod(seconds, aMinute)\n    if (add(m, 'm')) { return result }\n    [s, seconds] = timeMod(seconds, 1000)\n    add(s, 's')\n    return result || '0 s'\n  }\n\n  /*\n   * disableMouseWheel can be used to disable the mouse wheel for any\n   * input. It is very easy to unknowingly scroll up on a number input\n   * and then submit an unexpected value. This function prevents the\n   * scroll increment/decrement behavior for a wheel action on a\n   * number input.\n   */\n  static disableMouseWheel (...inputFields) {\n    for (const inputField of inputFields) {\n      inputField.addEventListener('wheel', (ev) => {\n        ev.preventDefault()\n      })\n    }\n  }\n}\n\n/* Easing algorithms for animations. */\nvar Easing = {\n  linear: t => t,\n  easeIn: t => t * t,\n  easeOut: t => t * (2 - t),\n  easeInHard: t => t * t * t,\n  easeOutHard: t => (--t) * t * t + 1\n}\n\n/* WalletIcons are used for controlling wallets in various places. */\nexport class WalletIcons {\n  constructor (box) {\n    const stateElement = (name) => box.querySelector(`[data-state=${name}]`)\n    this.icons = {}\n    this.icons.sleeping = stateElement('sleeping')\n    this.icons.locked = stateElement('locked')\n    this.icons.unlocked = stateElement('unlocked')\n    this.icons.nowallet = stateElement('nowallet')\n    this.icons.syncing = stateElement('syncing')\n    this.status = stateElement('status')\n  }\n\n  /* sleeping sets the icons to indicate that the wallet is not connected. */\n  sleeping () {\n    const i = this.icons\n    Doc.hide(i.locked, i.unlocked, i.nowallet, i.syncing)\n    Doc.show(i.sleeping)\n    if (this.status) this.status.textContent = 'off'\n  }\n\n  /*\n   * locked sets the icons to indicate that the wallet is connected, but locked.\n   */\n  locked () {\n    const i = this.icons\n    Doc.hide(i.unlocked, i.nowallet, i.sleeping)\n    Doc.show(i.locked)\n    if (this.status) this.status.textContent = 'locked'\n  }\n\n  /*\n   * unlocked sets the icons to indicate that the wallet is connected and\n   * unlocked.\n   */\n  unlocked () {\n    const i = this.icons\n    Doc.hide(i.locked, i.nowallet, i.sleeping)\n    Doc.show(i.unlocked)\n    if (this.status) this.status.textContent = 'ready'\n  }\n\n  /* sleeping sets the icons to indicate that no wallet exists. */\n  nowallet () {\n    const i = this.icons\n    Doc.hide(i.locked, i.unlocked, i.sleeping, i.syncing)\n    Doc.show(i.nowallet)\n    if (this.status) this.status.textContent = 'no wallet'\n  }\n\n  setSyncing (wallet) {\n    const icon = this.icons.syncing\n    if (!wallet || !wallet.running) {\n      Doc.hide(icon)\n      return\n    }\n    if (!wallet.synced) {\n      Doc.show(icon)\n      icon.dataset.tooltip = `wallet is ${(wallet.syncProgress * 100).toFixed(1)}% synced`\n    } else Doc.hide(icon)\n  }\n\n  /* reads the core.Wallet state and sets the icon visibility. */\n  readWallet (wallet) {\n    this.setSyncing(wallet)\n    switch (true) {\n      case (!wallet):\n        this.nowallet()\n        break\n      case (!wallet.running):\n        this.sleeping()\n        break\n      case (!wallet.open):\n        this.locked()\n        break\n      case (wallet.open):\n        this.unlocked()\n        break\n      default:\n        console.error('wallet in unknown state', wallet)\n    }\n  }\n}\n\n/* sleep can be used by async functions to pause for a specified period. */\nfunction sleep (ms) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nconst aYear = 31536000000\nconst aMonth = 2592000000\nconst aDay = 86400000\nconst anHour = 3600000\nconst aMinute = 60000\n\n/* timeMod returns the quotient and remainder of t / dur. */\nfunction timeMod (t, dur) {\n  const n = Math.floor(t / dur)\n  return [n, t - n * dur]\n}\n","const darkModeCK = 'darkMode'\nconst authCK = 'dexauth'\nconst popupsCK = 'popups'\n\n// State is a set of static methods for working with the user state. It has\n// utilities for setting and retrieving cookies and storing user configuration\n// to localStorage.\nexport default class State {\n  static setCookie (cname, cvalue) {\n    var d = new Date()\n    // Set cookie to expire in ten years.\n    d.setTime(d.getTime() + (86400 * 365 * 10 * 1000))\n    var expires = 'expires=' + d.toUTCString()\n    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/'\n  }\n\n  /*\n   * getCookie returns the value at the specified cookie name, otherwise null.\n   */\n  static getCookie (cname) {\n    for (const cstr of document.cookie.split(';')) {\n      const [k, v] = cstr.split('=')\n      if (k.trim() === cname) return v\n    }\n    return null\n  }\n\n  /* dark sets the dark-mode cookie. */\n  static dark (dark) {\n    this.setCookie(darkModeCK, dark ? '1' : '0')\n    if (dark) {\n      document.body.classList.add('dark')\n    } else {\n      document.body.classList.remove('dark')\n    }\n  }\n\n  /*\n   * isDark returns true if the dark-mode cookie is currently set to '1' = true.\n   */\n  static isDark () {\n    return document.cookie.split(';').filter((item) => item.includes(`${darkModeCK}=1`)).length\n  }\n\n  /* store puts the key-value pair into Window.localStorage. */\n  static store (k, v) {\n    window.localStorage.setItem(k, JSON.stringify(v))\n  }\n\n  /* clearAllStore remove all the key-value pair in Window.localStorage. */\n  static clearAllStore () {\n    window.localStorage.clear()\n  }\n\n  static removeAuthCK () {\n    document.cookie = `${authCK}=;expires=Thu, 01 Jan 1970 00:00:01 GMT;`\n  }\n\n  /*\n  * fetch fetches the value associated with the key in Window.localStorage, or\n  * null if the no value exists for the key.\n  */\n  static fetch (k) {\n    const v = window.localStorage.getItem(k)\n    if (v !== null) {\n      return JSON.parse(v)\n    }\n    return null\n  }\n}\n\n// If the dark-mode cookie is not set, set it to dark mode on.\nif (State.getCookie(darkModeCK) === null) State.setCookie(darkModeCK, '1')\nif (State.getCookie(popupsCK) === null) State.setCookie(popupsCK, '1')\n","import Doc from './doc'\nimport { postJSON } from './http'\n\nvar app\n\n/*\n * bindNewWallet should be used with the \"newWalletForm\" template. The enclosing\n * <form> element should be the second argument.\n */\nexport class NewWalletForm {\n  constructor (application, form, success) {\n    this.form = form\n    this.currentAsset = null\n    const fields = this.fields = Doc.parsePage(form, [\n      'nwAssetLogo', 'nwAssetName', 'newWalletPass', 'nwAppPass',\n      'walletSettings', 'selectCfgFile', 'cfgFile', 'submitAdd', 'newWalletErr'\n    ])\n\n    // WalletConfigForm will set the global app variable.\n    this.subform = new WalletConfigForm(application, fields.walletSettings, true)\n\n    bind(form, fields.submitAdd, async () => {\n      if (fields.nwAppPass.value === '') {\n        fields.newWalletErr.textContent = 'app password cannot be empty'\n        Doc.show(fields.newWalletErr)\n        return\n      }\n      Doc.hide(fields.newWalletErr)\n\n      const createForm = {\n        assetID: parseInt(this.currentAsset.id),\n        pass: fields.newWalletPass.value || '',\n        config: this.subform.map(),\n        appPass: fields.nwAppPass.value\n      }\n      fields.nwAppPass.value = ''\n      app.loading(form)\n      var res = await postJSON('/api/newwallet', createForm)\n      app.loaded()\n      if (!app.checkResponse(res)) {\n        this.setError(res.msg)\n        return\n      }\n      fields.newWalletPass.value = ''\n      success()\n    })\n  }\n\n  async setAsset (asset) {\n    const fields = this.fields\n    if (this.currentAsset && this.currentAsset.id === asset.id) return\n    this.currentAsset = asset\n    fields.nwAssetLogo.src = Doc.logoPath(asset.symbol)\n    fields.nwAssetName.textContent = asset.info.name\n    fields.newWalletPass.value = ''\n    this.subform.update(asset.info)\n    Doc.hide(fields.newWalletErr)\n  }\n\n  /* setError sets and shows the in-form error message. */\n  async setError (errMsg) {\n    this.fields.newWalletErr.textContent = errMsg\n    Doc.show(this.fields.newWalletErr)\n  }\n\n  /*\n   * loadDefaults attempts to load the ExchangeWallet configuration from the\n   * default wallet config path on the server and will auto-fill the fields on\n   * the subform if settings are found.\n   */\n  async loadDefaults () {\n    app.loading(this.form)\n    var res = await postJSON('/api/defaultwalletcfg', { assetID: this.currentAsset.id })\n    app.loaded()\n    if (!app.checkResponse(res)) {\n      this.setError(res.msg)\n      return\n    }\n    this.subform.setLoadedConfig(res.config)\n  }\n}\n\n/*\n * WalletConfigForm is a dynamically generated sub-form for setting\n * asset-specific wallet configuration options.\n*/\nexport class WalletConfigForm {\n  constructor (application, form, sectionize) {\n    app = application\n    this.form = form\n    // A configElement is a div containing an input and its label.\n    this.configElements = {}\n    // configOpts is the wallet options provided by core.\n    this.configOpts = []\n    this.sectionize = sectionize\n\n    // Get template elements\n    this.allSettings = Doc.tmplElement(form, 'allSettings')\n    this.dynamicOpts = Doc.tmplElement(form, 'dynamicOpts')\n    this.textInputTmpl = Doc.tmplElement(form, 'textInput')\n    this.textInputTmpl.remove()\n    this.checkboxTmpl = Doc.tmplElement(form, 'checkbox')\n    this.checkboxTmpl.remove()\n    this.fileSelector = Doc.tmplElement(form, 'fileSelector')\n    this.fileInput = Doc.tmplElement(form, 'fileInput')\n    this.errMsg = Doc.tmplElement(form, 'errMsg')\n    this.showOther = Doc.tmplElement(form, 'showOther')\n    this.showIcon = Doc.tmplElement(form, 'showIcon')\n    this.hideIcon = Doc.tmplElement(form, 'hideIcon')\n    this.showHideMsg = Doc.tmplElement(form, 'showHideMsg')\n    this.otherSettings = Doc.tmplElement(form, 'otherSettings')\n    this.loadedSettingsMsg = Doc.tmplElement(form, 'loadedSettingsMsg')\n    this.loadedSettings = Doc.tmplElement(form, 'loadedSettings')\n    this.defaultSettingsMsg = Doc.tmplElement(form, 'defaultSettingsMsg')\n    this.defaultSettings = Doc.tmplElement(form, 'defaultSettings')\n\n    if (!sectionize) Doc.hide(this.showOther)\n\n    Doc.bind(this.fileSelector, 'click', () => this.fileInput.click())\n\n    // config file upload\n    Doc.bind(this.fileInput, 'change', async () => this.fileInputChanged())\n\n    Doc.bind(this.showOther, 'click', () => {\n      this.setOtherSettingsViz(this.hideIcon.classList.contains('d-hide'))\n    })\n  }\n\n  /*\n   * fileInputChanged will read the selected file and attempt to load the\n   * configuration settings. All loaded settings will be made visible for\n   * inspection by the user.\n   */\n  async fileInputChanged () {\n    if (!this.fileInput.value) return\n    app.loading(this.form)\n    const config = await this.fileInput.files[0].text()\n    if (!config) return\n    const res = await postJSON('/api/parseconfig', {\n      configtext: config\n    })\n    app.loaded()\n    if (!app.checkResponse(res)) {\n      this.errMsg.textContent = res.msg\n      Doc.show(this.errMsg)\n      return\n    }\n    if (Object.keys(res.map).length === 0) return\n    this.dynamicOpts.append(...this.setConfig(res.map))\n    this.reorder(this.dynamicOpts)\n    const [loadedOpts, defaultOpts] = [this.loadedSettings.children.length, this.defaultSettings.children.length]\n    if (loadedOpts === 0) Doc.hide(this.loadedSettings, this.loadedSettingsMsg)\n    if (defaultOpts === 0) Doc.hide(this.defaultSettings, this.defaultSettingsMsg)\n    if (loadedOpts + defaultOpts === 0) Doc.hide(this.showOther, this.otherSettings)\n  }\n\n  /*\n   * update creates the dynamic form.\n   */\n  update (walletInfo) {\n    this.configElements = {}\n    this.configOpts = walletInfo.configopts\n    Doc.empty(this.dynamicOpts, this.otherSettings)\n    this.setOtherSettingsViz(false)\n    Doc.hide(\n      this.loadedSettingsMsg, this.loadedSettings,\n      this.defaultSettingsMsg, this.defaultSettings,\n      this.errMsg\n    )\n    const defaultedOpts = []\n    const addOpt = (box, opt) => {\n      const elID = 'wcfg-' + opt.key\n      const el = opt.isboolean ? this.checkboxTmpl.cloneNode(true) : this.textInputTmpl.cloneNode(true)\n      this.configElements[opt.key] = el\n      const input = el.querySelector('input')\n      input.id = elID\n      input.configOpt = opt\n      const label = el.querySelector('label')\n      label.htmlFor = elID // 'for' attribute, but 'for' is a keyword\n      label.prepend(opt.displayname)\n      box.appendChild(el)\n      if (opt.noecho) input.type = 'password'\n      if (opt.description) label.dataset.tooltip = opt.description\n      if (opt.isboolean) input.checked = opt.default\n      else input.value = opt.default !== null ? opt.default : ''\n    }\n    for (const opt of this.configOpts) {\n      if (this.sectionize && opt.default !== null) defaultedOpts.push(opt)\n      else addOpt(this.dynamicOpts, opt)\n    }\n    if (defaultedOpts.length) {\n      for (const opt of defaultedOpts) addOpt(this.defaultSettings, opt)\n      Doc.show(this.showOther, this.defaultSettingsMsg, this.defaultSettings)\n    } else {\n      Doc.hide(this.showOther)\n    }\n    app.bindTooltips(this.allSettings)\n  }\n\n  /*\n   * setOtherSettingsViz sets the visibility of the additional settings section.\n   */\n  setOtherSettingsViz (visible) {\n    if (visible) {\n      Doc.hide(this.showIcon)\n      Doc.show(this.hideIcon, this.otherSettings)\n      this.showHideMsg.textContent = 'hide additional settings'\n      return\n    }\n    Doc.hide(this.hideIcon, this.otherSettings)\n    Doc.show(this.showIcon)\n    this.showHideMsg.textContent = 'show additional settings'\n  }\n\n  /*\n   * setConfig looks for inputs with configOpt keys matching the cfg object, and\n   * sets the inputs value to the corresponding cfg value. A list of matching\n   * configElements is returned.\n   */\n  setConfig (cfg) {\n    const finds = []\n    this.allSettings.querySelectorAll('input').forEach(input => {\n      const k = input.configOpt.key\n      const v = cfg[k]\n      if (typeof v === 'undefined') return\n      finds.push(this.configElements[k])\n      if (input.configOpt.isboolean) input.checked = isTruthyString(v)\n      else input.value = v\n    })\n    return finds\n  }\n\n  /*\n   * setLoadedConfig sets the input values for the entries in cfg, and moves\n   * them to the loadedSettings box.\n   */\n  setLoadedConfig (cfg) {\n    const finds = this.setConfig(cfg)\n    if (!this.sectionize || finds.length === 0) return\n    this.loadedSettings.append(...finds)\n    this.reorder(this.loadedSettings)\n    Doc.show(this.loadedSettings, this.loadedSettingsMsg)\n    if (this.defaultSettings.children.length === 0) Doc.hide(this.defaultSettings, this.defaultSettingsMsg)\n  }\n\n  /*\n   * map reads all inputs and constructs an object from the configOpt keys and\n   * values.\n   */\n  map () {\n    const config = {}\n    this.allSettings.querySelectorAll('input').forEach(input => {\n      if (input.configOpt.isboolean && input.configOpt.key) config[input.configOpt.key] = input.checked ? '1' : '0'\n      else if (input.value) config[input.configOpt.key] = input.value\n    })\n\n    return config\n  }\n\n  /*\n   * reorder sorts the configElements in the box by the order of the\n   * server-provided configOpts array.\n   */\n  reorder (box) {\n    const els = {}\n    box.querySelectorAll('input').forEach(el => {\n      const k = el.configOpt.key\n      els[k] = this.configElements[k]\n    })\n    for (const opt of this.configOpts) {\n      const el = els[opt.key]\n      if (el) box.append(el)\n    }\n  }\n}\n/*\n * bindOpenWallet should be used with the \"unlockWalletForm\" template. The\n * enclosing <form> element should be second argument.\n */\nexport function bindOpenWallet (app, form, success) {\n  const fields = Doc.parsePage(form, [\n    'uwAssetLogo', 'uwAssetName',\n    'uwAppPass', 'submitUnlock', 'unlockErr'\n  ])\n  var currentAsset\n  form.setAsset = asset => {\n    currentAsset = asset\n    fields.uwAssetLogo.src = Doc.logoPath(asset.symbol)\n    fields.uwAssetName.textContent = asset.info.name\n    fields.uwAppPass.value = ''\n  }\n  bind(form, fields.submitUnlock, async () => {\n    if (fields.uwAppPass.value === '') {\n      fields.unlockErr.textContent = 'app password cannot be empty'\n      Doc.show(fields.unlockErr)\n      return\n    }\n    Doc.hide(fields.unlockErr)\n    const open = {\n      assetID: parseInt(currentAsset.id),\n      pass: fields.uwAppPass.value\n    }\n    fields.uwAppPass.value = ''\n    app.loading(form)\n    var res = await postJSON('/api/openwallet', open)\n    app.loaded()\n    if (!app.checkResponse(res)) {\n      fields.unlockErr.textContent = res.msg\n      Doc.show(fields.unlockErr)\n      return\n    }\n    success()\n  })\n}\n\n/*\n * bind binds the click and submit events and prevents page reloading on\n * submission.\n */\nexport function bind (form, submitBttn, handler) {\n  const wrapper = e => {\n    if (e.preventDefault) e.preventDefault()\n    handler(e)\n  }\n  Doc.bind(submitBttn, 'click', wrapper)\n  Doc.bind(form, 'submit', wrapper)\n}\n\n// isTruthyString will be true if the provided string is recognized as a\n// value representing true.\nfunction isTruthyString (s) {\n  return s === '1' || s.toLowerCase() === 'true'\n}\n","export default class BasePage {\n  /* notify is called when a notification is received by the app. */\n  notify (note) {\n    if (!this.notifiers || !this.notifiers[note.type]) return\n    this.notifiers[note.type](note)\n  }\n\n  /* unload is called when the user navigates away from the page. */\n  unload () {}\n}\n","/*\n * requestJSON encodes the object and sends the JSON to the specified address.\n */\nexport async function requestJSON (method, addr, reqBody) {\n  try {\n    const response = await window.fetch(addr, {\n      method: method,\n      headers: new window.Headers({ 'content-type': 'application/json' }),\n      body: reqBody\n    })\n    if (response.status !== 200) { throw response }\n    const obj = await response.json()\n    obj.requestSuccessful = true\n    return obj\n  } catch (response) {\n    response.requestSuccessful = false\n    response.msg = await response.text()\n    return response\n  }\n}\n\n/*\n * postJSON sends a POST request with JSON-formatted data and returns the\n * response.\n */\nexport async function postJSON (addr, data) {\n  return requestJSON('POST', addr, JSON.stringify(data))\n}\n\n/*\n * getJSON sends a GET request and returns the response.\n */\nexport async function getJSON (addr) {\n  return requestJSON('GET', addr)\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport { postJSON } from './http'\nimport { NewWalletForm, bindOpenWallet, bind as bindForm } from './forms'\n\nconst DCR_ID = 42\nconst animationLength = 300\n\nvar app\n\nexport default class RegistrationPage extends BasePage {\n  constructor (application, body) {\n    super()\n    app = application\n    this.body = body\n    this.notifiers = {}\n    const page = this.page = Doc.parsePage(body, [\n      // Form 1: Set the application password\n      'appPWForm', 'appPW', 'appPWAgain', 'appPWSubmit', 'appPWErrMsg',\n      // Form 2: Create Decred wallet\n      'newWalletForm',\n      // Form 3: Unlock Decred wallet\n      'unlockWalletForm',\n      // Form 4: Configure DEX server\n      'dexAddrForm', 'dexAddr', 'certFile', 'selectedCert', 'removeCert',\n      'addCert', 'submitDEXAddr', 'dexAddrErr', 'dexCertFile', 'dexNeedCert',\n      'dexShowMore',\n      // Form 5: Confirm DEX registration and pay fee\n      'confirmRegForm', 'feeDisplay', 'appPass', 'submitConfirm', 'regErr',\n      'dexCertBox'\n    ])\n\n    // Hide the form closers for the registration process.\n    body.querySelectorAll('.form-closer').forEach(el => Doc.hide(el))\n\n    // SET APP PASSWORD\n    bindForm(page.appPWForm, page.appPWSubmit, () => { this.setAppPass() })\n\n    // NEW DCR WALLET\n    // This form is only shown if there is no DCR wallet yet.\n    this.walletForm = new NewWalletForm(app, page.newWalletForm, () => {\n      this.changeForm(page.newWalletForm, page.dexAddrForm)\n    })\n    this.walletForm.setAsset(app.assets[DCR_ID])\n\n    // OPEN DCR WALLET\n    // This form is only shown if there is a wallet, but it's not open.\n    bindOpenWallet(app, page.unlockWalletForm, () => {\n      this.changeForm(page.unlockWalletForm, page.dexAddrForm)\n    })\n    page.unlockWalletForm.setAsset(app.assets[DCR_ID])\n\n    // ADD DEX\n    // tls certificate upload\n    this.defaultTLSText = 'none selected'\n    page.selectedCert.textContent = this.defaultTLSText\n    Doc.bind(page.certFile, 'change', () => this.readCert())\n    Doc.bind(page.removeCert, 'click', () => this.resetCert())\n    Doc.bind(page.addCert, 'click', () => page.certFile.click())\n    bindForm(page.dexAddrForm, page.submitDEXAddr, () => { this.checkDEX() })\n    Doc.bind(page.dexShowMore, 'click', () => {\n      Doc.hide(page.dexShowMore)\n      Doc.show(page.dexCertBox)\n    })\n\n    // SUBMIT DEX REGISTRATION\n    bindForm(page.confirmRegForm, page.submitConfirm, () => { this.registerDEX() })\n\n    // Attempt to load the dcrwallet configuration from the default location.\n    this.walletForm.loadDefaults()\n  }\n\n  /* Swap this currently displayed form1 for form2 with an animation. */\n  async changeForm (form1, form2) {\n    const shift = this.body.offsetWidth / 2\n    await Doc.animate(animationLength, progress => {\n      form1.style.right = `${progress * shift}px`\n    }, 'easeInHard')\n    Doc.hide(form1)\n    form1.style.right = '0px'\n    form2.style.right = -shift\n    Doc.show(form2)\n    form2.querySelector('input').focus()\n    await Doc.animate(animationLength, progress => {\n      form2.style.right = `${-shift + progress * shift}px`\n    }, 'easeOutHard')\n    form2.style.right = '0px'\n  }\n\n  /* Set the application password. Attached to form submission. */\n  async setAppPass () {\n    const page = this.page\n    Doc.hide(page.appPWErrMsg)\n    const pw = page.appPW.value\n    const pwAgain = page.appPWAgain.value\n    if (pw === '') {\n      page.appPWErrMsg.textContent = 'password cannot be empty'\n      Doc.show(page.appPWErrMsg)\n      return\n    }\n    if (pw !== pwAgain) {\n      page.appPWErrMsg.textContent = 'passwords do not match'\n      Doc.show(page.appPWErrMsg)\n      return\n    }\n    // Clear the notification cache. Useful for development purposes, since\n    // the Application will only clear them on login, which would leave old\n    // browser-cached notifications in place after registering even if the\n    // client db is wiped.\n    app.setNotes([])\n    page.appPW.value = ''\n    page.appPWAgain.value = ''\n    app.loading(page.appPWForm)\n    var res = await postJSON('/api/init', { pass: pw })\n    app.loaded()\n    if (!app.checkResponse(res)) {\n      page.appErrMsg.textContent = res.msg\n      Doc.show(page.appErrMsg)\n      return\n    }\n    app.user.authed = true // no need to call app.fetchUser(), much hasn't changed.\n    app.updateMenuItemsDisplay()\n    this.changeForm(page.appPWForm, page.newWalletForm)\n  }\n\n  /* Get the reg fees for the DEX. */\n  async checkDEX () {\n    const page = this.page\n    Doc.hide(page.dexAddrErr)\n    const addr = page.dexAddr.value\n    if (addr === '') {\n      page.dexAddrErr.textContent = 'DEX address cannot be empty'\n      Doc.show(page.dexAddrErr)\n      return\n    }\n\n    var cert = ''\n    if (page.certFile.value) {\n      cert = await page.certFile.files[0].text()\n    }\n\n    app.loading(page.dexAddrForm)\n    var res = await postJSON('/api/getfee', {\n      addr: addr,\n      cert: cert\n    })\n    app.loaded()\n    if (!app.checkResponse(res, true)) {\n      if (res.msg === 'certificate required') {\n        Doc.hide(page.dexShowMore)\n        Doc.show(page.dexCertBox, page.dexNeedCert)\n      } else {\n        page.regErr.textContent = res.msg\n        Doc.show(page.regErr)\n      }\n\n      return\n    }\n    this.fee = res.fee\n\n    page.feeDisplay.textContent = Doc.formatCoinValue(res.fee / 1e8)\n    await this.changeForm(page.dexAddrForm, page.confirmRegForm)\n  }\n\n  /* Authorize DEX registration. */\n  async registerDEX () {\n    const page = this.page\n    Doc.hide(page.regErr)\n    var cert = ''\n    if (page.certFile.value) {\n      cert = await page.certFile.files[0].text()\n    }\n    const registration = {\n      addr: page.dexAddr.value,\n      pass: page.appPass.value,\n      fee: this.fee,\n      cert: cert\n    }\n    page.appPass.value = ''\n    app.loading(page.confirmRegForm)\n    var res = await postJSON('/api/register', registration)\n    app.loaded()\n    if (!app.checkResponse(res)) {\n      page.regErr.textContent = res.msg\n      Doc.show(page.regErr)\n      return\n    }\n    // Need to get a fresh market list. May consider handling this with a\n    // websocket update instead.\n    await app.fetchUser()\n    app.loadPage('markets')\n  }\n\n  async readCert () {\n    const page = this.page\n    const files = page.certFile.files\n    if (!files.length) return\n    page.selectedCert.textContent = files[0].name\n    Doc.show(page.removeCert)\n    Doc.hide(page.addCert)\n  }\n\n  resetCert () {\n    const page = this.page\n    page.certFile.value = ''\n    page.selectedCert.textContent = this.defaultTLSText\n    Doc.hide(page.removeCert)\n    Doc.show(page.addCert)\n  }\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport { postJSON } from './http'\nimport * as forms from './forms'\n\nvar app\n\nexport default class LoginPage extends BasePage {\n  constructor (application, body) {\n    super()\n    app = application\n    const page = this.page = Doc.parsePage(body, [\n      'submit', 'errMsg', 'loginForm', 'pw'\n    ])\n    forms.bind(page.loginForm, page.submit, () => { this.login() })\n    page.pw.focus()\n  }\n\n  /* login submits the sign-in form and parses the result. */\n  async login (e) {\n    const page = this.page\n    Doc.hide(page.errMsg)\n    const pw = page.pw.value\n    page.pw.value = ''\n    if (pw === '') {\n      page.errMsg.textContent = 'password cannot be empty'\n      Doc.show(page.errMsg)\n      return\n    }\n    app.loading(page.loginForm)\n    var res = await postJSON('/api/login', { pass: pw })\n    app.loaded()\n    if (!app.checkResponse(res)) {\n      page.errMsg.textContent = res.msg\n      Doc.show(page.errMsg)\n      return\n    }\n    if (res.notes) {\n      res.notes.reverse()\n    }\n    app.setNotes(res.notes || [])\n    await app.fetchUser()\n    app.loadPage('markets')\n  }\n}\n","export const IGNORE = 0\nexport const DATA = 1\nexport const POKE = 2\nexport const SUCCESS = 3\nexport const WARNING = 4\nexport const ERROR = 5\n\n/*\n * make constructs a new notification. The notification structure is a mirror of\n * the structure of notifications sent from the web server.\n * NOTE: I'm hoping to make this function obsolete, since errors generated in\n * javascript should usually be displayed/cached somewhere better. For example,\n * if the error is generated during submission of a form, the error should be\n * displayed on or near the form itself, not in the notifications.\n */\nexport function make (subject, details, severity) {\n  return {\n    subject: subject,\n    details: details,\n    severity: severity,\n    stamp: new Date().getTime()\n  }\n}\n","import Doc, { WalletIcons } from './doc'\nimport BasePage from './basepage'\nimport { postJSON } from './http'\nimport { NewWalletForm, WalletConfigForm, bindOpenWallet, bind as bindForm } from './forms'\nimport * as ntfn from './notifications'\n\nconst bind = Doc.bind\nconst animationLength = 300\nvar app\n\nexport default class WalletsPage extends BasePage {\n  constructor (application, body) {\n    super()\n    app = application\n    this.body = body\n    const page = this.page = Doc.parsePage(body, [\n      'rightBox',\n      // Table Rows\n      'assetArrow', 'balanceArrow', 'statusArrow', 'walletTable',\n      // Available markets\n      'markets', 'dexTitle', 'marketsBox', 'oneMarket', 'marketsFor',\n      'marketsCard',\n      // New wallet, unlock wallet, wallet settings\n      'walletForm', 'openForm',\n      // Wallet configuration\n      'walletReconfig', 'recfgAssetLogo', 'recfgAssetName', 'reconfigInputs',\n      'submitReconfig', 'reconfigErr', 'reconfigPW', 'changePW',\n      // Wallet password change\n      'walletRepw', 'repwAssetLogo', 'repwAssetName', 'repwNewPw', 'repwAppPw',\n      'submitRepw', 'repwErr',\n      // Deposit\n      'deposit', 'depositName', 'depositAddress', 'newDepAddrBttn',\n      'depositErr', 'depositLogo',\n      // Withdraw\n      'withdrawForm', 'withdrawLogo', 'withdrawName', 'withdrawAddr',\n      'withdrawAmt', 'withdrawAvail', 'submitWithdraw', // 'withdrawFee',\n      'withdrawUnit', 'withdrawPW', 'withdrawErr'\n    ])\n\n    // Read the document, storing some info about each asset's row.\n    const getAction = (row, name) => row.querySelector(`[data-action=${name}]`)\n    const rowInfos = this.rowInfos = {}\n    const rows = page.walletTable.querySelectorAll('tr')\n    var firstRow\n    for (const tr of rows) {\n      const assetID = parseInt(tr.dataset.assetID)\n      const rowInfo = rowInfos[assetID] = {}\n      if (!firstRow) firstRow = rowInfo\n      rowInfo.assetID = assetID\n      rowInfo.tr = tr\n      rowInfo.symbol = tr.dataset.symbol\n      rowInfo.name = tr.dataset.name\n      rowInfo.stateIcons = new WalletIcons(tr)\n      rowInfo.actions = {\n        connect: getAction(tr, 'connect'),\n        unlock: getAction(tr, 'unlock'),\n        withdraw: getAction(tr, 'withdraw'),\n        deposit: getAction(tr, 'deposit'),\n        create: getAction(tr, 'create'),\n        lock: getAction(tr, 'lock'),\n        settings: getAction(tr, 'settings')\n      }\n    }\n\n    // Prepare templates\n    page.dexTitle.removeAttribute('id')\n    page.dexTitle.remove()\n    page.oneMarket.removeAttribute('id')\n    page.oneMarket.remove()\n    page.markets.removeAttribute('id')\n    page.markets.remove()\n\n    // Methods to switch the item displayed on the right side, with a little\n    // fade-in animation.\n    this.displayed = null // The currently displayed right-side element.\n    this.animation = null // Store Promise of currently running animation.\n\n    this.openAsset = null\n    this.walletAsset = null\n    this.reconfigAsset = null\n\n    // Bind the new wallet form.\n    this.walletForm = new NewWalletForm(app, page.walletForm, () => { this.createWalletSuccess() })\n\n    // Bind the wallet reconfig form.\n    this.walletReconfig = new WalletConfigForm(app, page.reconfigInputs, false)\n\n    // Bind the wallet unlock form.\n    bindOpenWallet(app, page.openForm, () => { this.openWalletSuccess() })\n\n    // Bind the withdraw form.\n    bindForm(page.withdrawForm, page.submitWithdraw, () => { this.withdraw() })\n\n    // Bind the wallet reconfiguration submission.\n    bindForm(page.walletReconfig, page.submitReconfig, () => this.reconfig())\n\n    // Bind the row clicks, which shows the available markets for the asset.\n    for (const rowInfo of Object.values(rowInfos)) {\n      bind(rowInfo.tr, 'click', () => {\n        this.showMarkets(rowInfo.assetID)\n      })\n    }\n\n    page.rightBox.querySelectorAll('.form-closer').forEach(el => {\n      Doc.bind(el, 'click', () => {\n        this.showMarkets(this.lastFormAsset)\n      })\n    })\n\n    // Bind buttons\n    for (const [k, asset] of Object.entries(rowInfos)) {\n      const assetID = parseInt(k) // keys are string asset ID.\n      const a = asset.actions\n      const run = (e, f) => {\n        e.stopPropagation()\n        f(assetID, asset)\n      }\n      bind(a.connect, 'click', e => { run(e, this.doConnect.bind(this)) })\n      bind(a.withdraw, 'click', e => { run(e, this.showWithdraw.bind(this)) })\n      bind(a.deposit, 'click', e => { run(e, this.showDeposit.bind(this)) })\n      bind(a.create, 'click', e => { run(e, this.showNewWallet.bind(this)) })\n      bind(a.unlock, 'click', e => { run(e, this.showOpen.bind(this)) })\n      bind(a.lock, 'click', async e => { run(e, this.lock.bind(this)) })\n      bind(a.settings, 'click', e => { run(e, this.showReconfig.bind(this)) })\n    }\n\n    // New deposit address button.\n    bind(page.newDepAddrBttn, 'click', async () => { this.newDepositAddress() })\n\n    // Clicking on the available amount on the withdraw form populates the\n    // amount field.\n    bind(page.withdrawAvail, 'click', () => {\n      page.withdrawAmt.value = page.withdrawAvail.textContent\n    })\n\n    // A link on the wallet reconfiguration form to show the password change\n    // form.\n    bind(page.changePW, 'click', () => { this.showChangePW() })\n\n    // Submit the password change form.\n    bindForm(page.walletRepw, page.submitRepw, () => { this.submitChangePW() })\n\n    if (!firstRow) return\n    this.showMarkets(firstRow.assetID)\n\n    this.notifiers = {\n      balance: note => { this.handleBalanceNote(note) },\n      walletstate: note => { this.handleWalletStateNote(note) },\n      walletconfig: note => { this.handleWalletStateNote(note) }\n    }\n  }\n\n  /*\n   * hideBox hides the displayed box after waiting for the currently running\n   * animation to complete.\n   */\n  async hideBox () {\n    if (this.animation) await this.animation\n    if (!this.displayed) return\n    Doc.hide(this.displayed)\n  }\n\n  /*\n   * showBox shows the box with a fade-in animation.\n   */\n  async showBox (box, focuser) {\n    box.style.opacity = '0'\n    Doc.show(box)\n    if (focuser) focuser.focus()\n    await Doc.animate(animationLength, progress => {\n      box.style.opacity = `${progress}`\n    }, 'easeOut')\n    box.style.opacity = '1'\n    this.displayed = box\n  }\n\n  /*\n   * Show the markets box, which lists the markets available for a selected\n   * asset.\n   */\n  async showMarkets (assetID) {\n    const page = this.page\n    const box = page.marketsBox\n    const card = page.marketsCard\n    const rowInfo = this.rowInfos[assetID]\n    await this.hideBox()\n    Doc.empty(card)\n    page.marketsFor.textContent = rowInfo.name\n    for (const [host, xc] of Object.entries(app.user.exchanges)) {\n      let count = 0\n      for (const market of Object.values(xc.markets)) {\n        if (market.baseid === assetID || market.quoteid === assetID) count++\n      }\n      if (count === 0) continue\n      const header = page.dexTitle.cloneNode(true)\n      header.textContent = host\n      card.appendChild(header)\n      const marketsBox = page.markets.cloneNode(true)\n      card.appendChild(marketsBox)\n      for (const market of Object.values(xc.markets)) {\n        // Only show markets where this is the base or quote asset.\n        if (market.baseid !== assetID && market.quoteid !== assetID) continue\n        const mBox = page.oneMarket.cloneNode(true)\n        mBox.querySelector('span').textContent = prettyMarketName(market)\n        let counterSymbol = market.basesymbol\n        if (market.baseid === assetID) counterSymbol = market.quotesymbol\n        mBox.querySelector('img').src = Doc.logoPath(counterSymbol)\n        // Bind the click to a load of the markets page.\n        const pageData = { host: host, base: market.baseid, quote: market.quoteid }\n        bind(mBox, 'click', () => { app.loadPage('markets', pageData) })\n        marketsBox.appendChild(mBox)\n      }\n    }\n    this.animation = this.showBox(box)\n  }\n\n  /* Show the new wallet form. */\n  async showNewWallet (assetID) {\n    const page = this.page\n    const box = page.walletForm\n    const asset = app.assets[assetID]\n    await this.hideBox()\n    this.walletAsset = this.lastFormAsset = assetID\n    this.walletForm.setAsset(asset)\n    this.animation = this.showBox(box)\n    await this.walletForm.loadDefaults()\n  }\n\n  /* Show the form used to unlock a wallet. */\n  async showOpen (assetID) {\n    const page = this.page\n    this.openAsset = this.lastFormAsset = assetID\n    await this.hideBox()\n    page.openForm.setAsset(app.assets[assetID])\n    this.animation = this.showBox(page.openForm, page.walletPass)\n  }\n\n  /* Show the form used to change wallet configuration settings. */\n  async showReconfig (assetID) {\n    const page = this.page\n    Doc.hide(page.reconfigErr)\n    const asset = app.assets[assetID]\n    this.walletReconfig.update(asset.info)\n    page.recfgAssetLogo.src = Doc.logoPath(asset.symbol)\n    page.recfgAssetName.textContent = asset.info.name\n    this.reconfigAsset = this.lastFormAsset = assetID\n    await this.hideBox()\n    this.animation = this.showBox(page.walletReconfig)\n    app.loading(page.walletReconfig)\n    var res = await postJSON('/api/walletsettings', {\n      assetID: assetID\n    })\n    app.loaded()\n    if (!app.checkResponse(res, true)) {\n      page.reconfigErr.textContent = res.msg\n      Doc.show(page.reconfigErr)\n      return\n    }\n    this.walletReconfig.setConfig(res.map)\n  }\n\n  /* showChangePW shows the form to change the wallet password. */\n  async showChangePW () {\n    const page = this.page\n    Doc.hide(page.repwErr)\n    const assetID = this.lastFormAsset = this.reconfigAsset\n    const asset = app.assets[assetID]\n    page.repwAssetLogo.src = Doc.logoPath(asset.symbol)\n    page.repwAssetName.textContent = asset.info.name\n    await this.hideBox()\n    this.animation = this.showBox(page.walletRepw)\n  }\n\n  /*\n   * submitChangePW is called when the wallet password change form is submitted.\n   */\n  async submitChangePW () {\n    const page = this.page\n    Doc.hide(page.repwErr)\n    if (!page.repwAppPw.value) {\n      page.repwErr.textContent = 'app password cannot be empty'\n      Doc.show(page.repwErr)\n      return\n    }\n    app.loading(page.walletRepw)\n    var res = await postJSON('/api/setwalletpass', {\n      assetID: this.reconfigAsset,\n      newPW: page.repwNewPw.value,\n      appPW: page.repwAppPw.value\n    })\n    page.repwNewPw.value = ''\n    page.repwAppPw.value = ''\n    app.loaded()\n    if (!app.checkResponse(res, true)) {\n      page.repwErr.textContent = res.msg\n      Doc.show(page.repwErr)\n      return\n    }\n    this.showMarkets(this.reconfigAsset)\n  }\n\n  /* Display a deposit address. */\n  async showDeposit (assetID) {\n    const page = this.page\n    Doc.hide(page.depositErr)\n    const box = page.deposit\n    const asset = app.assets[assetID]\n    page.depositLogo.src = Doc.logoPath(asset.symbol)\n    const wallet = app.walletMap[assetID]\n    this.depositAsset = this.lastFormAsset = assetID\n    if (!wallet) {\n      app.notify(ntfn.make(`No wallet found for ${asset.info.name}`, 'Cannot retrieve deposit address.', ntfn.ERROR))\n      return\n    }\n    await this.hideBox()\n    page.depositName.textContent = asset.info.name\n    page.depositAddress.textContent = wallet.address\n    this.animation = this.showBox(box)\n  }\n\n  /* Fetch a new address from the wallet. */\n  async newDepositAddress () {\n    const page = this.page\n    Doc.hide(page.depositErr)\n    app.loading(page.deposit)\n    const res = await postJSON('/api/depositaddress', {\n      assetID: this.depositAsset\n    })\n    app.loaded()\n    if (!app.checkResponse(res, true)) {\n      page.depositErr.textContent = res.msg\n      Doc.show(page.depositErr)\n      return\n    }\n    page.depositAddress.textContent = res.address\n  }\n\n  /* Show the form to withdraw funds. */\n  async showWithdraw (assetID) {\n    const page = this.page\n    const box = page.withdrawForm\n    const asset = app.assets[assetID]\n    const wallet = app.walletMap[assetID]\n    if (!wallet) {\n      app.notify(ntfn.make(`No wallet found for ${asset.info.name}`, 'Cannot withdraw.', ntfn.ERROR))\n    }\n    await this.hideBox()\n    page.withdrawAddr.value = ''\n    page.withdrawAmt.value = ''\n    page.withdrawAvail.textContent = (wallet.balance.available / 1e8).toFixed(8)\n    page.withdrawLogo.src = Doc.logoPath(asset.symbol)\n    page.withdrawName.textContent = asset.info.name\n    // page.withdrawFee.textContent = wallet.feerate\n    // page.withdrawUnit.textContent = wallet.units\n    box.dataset.assetID = this.lastFormAsset = assetID\n    this.animation = this.showBox(box, page.walletPass)\n  }\n\n  /* doConnect connects to a wallet via the connectwallet API route. */\n  async doConnect (assetID) {\n    app.loading(this.body)\n    var res = await postJSON('/api/connectwallet', {\n      assetID: assetID\n    })\n    app.loaded()\n    if (!app.checkResponse(res)) return\n    const rowInfo = this.rowInfos[assetID]\n    Doc.hide(rowInfo.actions.connect)\n  }\n\n  /* createWalletSuccess is the success callback for wallet creation. */\n  async createWalletSuccess () {\n    const rowInfo = this.rowInfos[this.walletAsset]\n    this.showMarkets(rowInfo.assetID)\n    const a = rowInfo.actions\n    Doc.hide(a.create)\n    Doc.show(a.withdraw, a.deposit, a.settings)\n    await app.fetchUser()\n    if (app.walletMap[rowInfo.assetID].encrypted) {\n      Doc.show(a.lock)\n    }\n  }\n\n  /* openWalletSuccess is the success callback for wallet unlocking. */\n  async openWalletSuccess () {\n    const rowInfo = this.rowInfos[this.openAsset]\n    const a = rowInfo.actions\n    Doc.show(a.withdraw, a.deposit)\n    Doc.hide(a.unlock, a.connect)\n    if (app.walletMap[rowInfo.assetID].encrypted) {\n      Doc.show(a.lock)\n    }\n    this.showMarkets(this.openAsset)\n  }\n\n  /* withdraw submits the withdrawal form to the API. */\n  async withdraw () {\n    const page = this.page\n    Doc.hide(page.withdrawErr)\n    const assetID = parseInt(page.withdrawForm.dataset.assetID)\n    const open = {\n      assetID: assetID,\n      address: page.withdrawAddr.value,\n      value: parseInt(Math.round(page.withdrawAmt.value * 1e8)),\n      pw: page.withdrawPW.value\n    }\n    app.loading(page.withdrawForm)\n    var res = await postJSON('/api/withdraw', open)\n    app.loaded()\n    if (!app.checkResponse(res, true)) {\n      page.withdrawErr.textContent = res.msg\n      Doc.show(page.withdrawErr)\n      return\n    }\n    this.showMarkets(assetID)\n  }\n\n  /* update wallet configuration */\n  async reconfig () {\n    const page = this.page\n    Doc.hide(page.reconfigErr)\n    if (!page.reconfigPW.value) {\n      page.reconfigErr.textContent = 'app password cannot be empty'\n      Doc.show(page.reconfigErr)\n      return\n    }\n    app.loading(page.walletReconfig)\n    var res = await postJSON('/api/reconfigurewallet', {\n      assetID: this.reconfigAsset,\n      config: this.walletReconfig.map(),\n      pw: page.reconfigPW.value\n    })\n    page.reconfigPW.value = ''\n    app.loaded()\n    if (!app.checkResponse(res, true)) {\n      page.reconfigErr.textContent = res.msg\n      Doc.show(page.reconfigErr)\n      return\n    }\n    this.showMarkets(this.reconfigAsset)\n  }\n\n  /* lock instructs the API to lock the wallet. */\n  async lock (assetID, asset) {\n    const page = this.page\n    app.loading(page.walletForm)\n    var res = await postJSON('/api/closewallet', { assetID: assetID })\n    app.loaded()\n    if (!app.checkResponse(res)) return\n    const a = asset.actions\n    Doc.hide(a.withdraw, a.lock, a.deposit)\n    Doc.show(a.unlock)\n  }\n\n  /* handleBalance handles notifications updating a wallet's balance. */\n  handleBalanceNote (note) {\n    const td = this.page.walletTable.querySelector(`[data-balance-target=\"${note.assetID}\"]`)\n    td.textContent = (note.balance.available / 1e8).toFixed(8)\n  }\n\n  /*\n   * handleWalletStateNote is a handler for both the 'walletstate' and\n   * 'walletconfig' notifications.\n   */\n  handleWalletStateNote (note) {\n    this.rowInfos[note.wallet.assetID].stateIcons.readWallet(note.wallet)\n  }\n}\n\n/*\n * Given a market object as created with makeMarket, prettyMarketName will\n * create a string ABC-XYZ, where ABC and XYZ are the upper-case ticker symbols\n * for the base and quote assets respectively.\n */\nfunction prettyMarketName (market) {\n  return `${market.basesymbol.toUpperCase()}-${market.quotesymbol.toUpperCase()}`\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport State from './state'\nimport { postJSON } from './http'\nimport * as forms from './forms'\n\nconst animationLength = 300\n\nvar app\n\nexport default class SettingsPage extends BasePage {\n  constructor (application, body) {\n    super()\n    app = application\n    const page = this.page = Doc.parsePage(body, [\n      'darkMode', 'commitHash',\n      'addADex',\n      // Form to configure DEX server\n      'dexAddrForm', 'dexAddr', 'certFile', 'selectedCert', 'removeCert', 'addCert',\n      'submitDEXAddr', 'dexAddrErr',\n      // Form to confirm DEX registration and pay fee\n      'forms', 'confirmRegForm', 'feeDisplay', 'appPass', 'submitConfirm', 'regErr',\n      // Others\n      'showPokes'\n    ])\n\n    Doc.bind(page.darkMode, 'click', () => {\n      State.dark(page.darkMode.checked)\n      if (page.darkMode.checked) {\n        document.body.classList.add('dark')\n      } else {\n        document.body.classList.remove('dark')\n      }\n    })\n\n    Doc.bind(page.showPokes, 'click', () => {\n      const show = page.showPokes.checked\n      State.setCookie('popups', show ? '1' : '0')\n      app.showPopups = show\n    })\n\n    page.commitHash.textContent = app.commitHash.substring(0, 7)\n    Doc.bind(page.addADex, 'click', () => this.showForm(page.dexAddrForm))\n    Doc.bind(page.certFile, 'change', () => this.onCertFileChange())\n    Doc.bind(page.removeCert, 'click', () => this.clearCertFile())\n    Doc.bind(page.addCert, 'click', () => this.page.certFile.click())\n    forms.bind(page.dexAddrForm, page.submitDEXAddr, () => { this.verifyDEX() })\n    forms.bind(page.confirmRegForm, page.submitConfirm, () => { this.registerDEX() })\n\n    const closePopups = () => {\n      Doc.hide(page.forms)\n      page.appPass.value = ''\n    }\n\n    Doc.bind(page.forms, 'mousedown', e => {\n      if (!Doc.mouseInElement(e, this.currentForm)) { closePopups() }\n    })\n\n    page.forms.querySelectorAll('.form-closer').forEach(el => {\n      Doc.bind(el, 'click', () => { closePopups() })\n    })\n  }\n\n  /* showForm shows a modal form with a little animation. */\n  async showForm (form) {\n    const page = this.page\n    this.currentForm = form\n    Doc.hide(page.dexAddrForm, page.confirmRegForm)\n    form.style.right = '10000px'\n    Doc.show(page.forms, form)\n    const shift = (page.forms.offsetWidth + form.offsetWidth) / 2\n    await Doc.animate(animationLength, progress => {\n      form.style.right = `${(1 - progress) * shift}px`\n    }, 'easeOutHard')\n    form.style.right = '0px'\n  }\n\n  /**\n   * onCertFileChange when the input certFile changed, read the file\n   * and setting cert name into text of selectedCert to display on the view\n   */\n  async onCertFileChange () {\n    const page = this.page\n    const files = page.certFile.files\n    if (!files.length) return\n    page.selectedCert.textContent = files[0].name\n    Doc.show(page.removeCert)\n    Doc.hide(page.addCert)\n  }\n\n  /* clearCertFile cleanup certFile value and selectedCert text */\n  clearCertFile () {\n    const page = this.page\n    page.certFile.value = ''\n    page.selectedCert.textContent = this.defaultTLSText\n    Doc.hide(page.removeCert)\n    Doc.show(page.addCert)\n  }\n\n  /* Get the reg fees for the DEX. */\n  async verifyDEX () {\n    const page = this.page\n    Doc.hide(page.dexAddrErr)\n    const addr = page.dexAddr.value\n    if (addr === '') {\n      page.dexAddrErr.textContent = 'URL cannot be empty'\n      Doc.show(page.dexAddrErr)\n      return\n    }\n\n    let cert = ''\n    if (page.certFile.value) {\n      cert = await page.certFile.files[0].text()\n    }\n\n    app.loading(page.dexAddrForm)\n    const res = await postJSON('/api/getfee', {\n      addr: addr,\n      cert: cert\n    })\n    app.loaded()\n    if (!app.checkResponse(res)) {\n      page.dexAddrErr.textContent = res.msg\n      Doc.show(page.dexAddrErr)\n      return\n    }\n    this.fee = res.fee\n\n    page.feeDisplay.textContent = Doc.formatCoinValue(res.fee / 1e8)\n    await this.showForm(page.confirmRegForm)\n  }\n\n  /* Authorize DEX registration. */\n  async registerDEX () {\n    const page = this.page\n    Doc.hide(page.regErr)\n    let cert = ''\n    if (page.certFile.value) {\n      cert = await page.certFile.files[0].text()\n    }\n    const registration = {\n      addr: page.dexAddr.value,\n      pass: page.appPass.value,\n      fee: this.fee,\n      cert: cert\n    }\n    page.appPass.value = ''\n    app.loading(page.confirmRegForm)\n    const res = await postJSON('/api/register', registration)\n    if (!app.checkResponse(res)) {\n      page.regErr.textContent = res.msg\n      Doc.show(page.regErr)\n      app.loaded()\n      return\n    }\n    page.dexAddr.value = ''\n    this.clearCertFile()\n    Doc.hide(page.forms)\n    await app.fetchUser()\n    app.loaded()\n  }\n}\n","export default class OrderBook {\n  constructor (mktBook, baseSymbol, quoteSymbol) {\n    this.base = mktBook.base\n    this.baseSymbol = baseSymbol\n    this.quote = mktBook.quote\n    this.quoteSymbol = quoteSymbol\n    // Books are sorted mid-gap first.\n    this.buys = mktBook.book.buys || []\n    this.sells = mktBook.book.sells || []\n  }\n\n  /* add adds an order to the order book. */\n  add (ord) {\n    const side = ord.sell ? this.sells : this.buys\n    side.splice(findIdx(side, ord.rate, !ord.sell), 0, ord)\n  }\n\n  /* remove removes an order from the order book. */\n  remove (token) {\n    if (this.removeFromSide(this.sells, token)) return\n    this.removeFromSide(this.buys, token)\n  }\n\n  /* removeFromSide removes an order from the list of orders. */\n  removeFromSide (side, token) {\n    const [ord, i] = this.findOrder(side, token)\n    if (ord) {\n      side.splice(i, 1)\n      return true\n    }\n    return false\n  }\n\n  /* findOrder finds an order in a specified side */\n  findOrder (side, token) {\n    for (const i in side) {\n      if (side[i].token === token) {\n        return [side[i], i]\n      }\n    }\n    return [null, -1]\n  }\n\n  /* updates the remaining quantity of an order. */\n  updateRemaining (token, qty) {\n    if (this.updateRemainingSide(this.sells, token, qty)) return\n    this.updateRemainingSide(this.buys, token, qty)\n  }\n\n  /*\n   * updateRemainingSide looks for the order in the side and updates the\n   * quantity, returning true on success, false if order not found.\n   */\n  updateRemainingSide (side, token, qty) {\n    const ord = this.findOrder(side, token)[0]\n    if (ord) {\n      ord.qty = qty\n      return true\n    }\n    return false\n  }\n\n  /*\n   * setEpoch sets the current epoch and clear any orders from previous epochs.\n   */\n  setEpoch (epochIdx) {\n    const approve = ord => ord.epoch === undefined || ord.epoch === 0 || ord.epoch === epochIdx\n    this.sells = this.sells.filter(approve)\n    this.buys = this.buys.filter(approve)\n  }\n\n  /* empty will return true if both the buys and sells lists are empty. */\n  empty () {\n    return !this.sells.length && !this.buys.length\n  }\n\n  /* count is the total count of both buy and sell orders. */\n  count () {\n    return this.sells.length + this.buys.length\n  }\n\n  /* bestGapOrder will return the best non-epoch order if one exists, or the\n   * best epoch order if there are only epoch orders, or null if there are no\n   * orders.\n   */\n  bestGapOrder (side) {\n    var best = null\n    for (const ord of side) {\n      if (!ord.epoch) return ord\n      if (!best) {\n        best = ord\n      }\n    }\n    return best\n  }\n\n  bestGapBuy () {\n    return this.bestGapOrder(this.buys)\n  }\n\n  bestGapSell () {\n    return this.bestGapOrder(this.sells)\n  }\n}\n\n/*\n * findIdx find the index at which to insert the order into the list of orders.\n */\nfunction findIdx (side, rate, less) {\n  for (const i in side) {\n    if ((side[i].rate < rate) === less) return i\n  }\n  return side.length\n}\n","import Doc from './doc'\nimport State from './state'\n\nconst bind = Doc.bind\nconst unbind = Doc.unbind\nconst PIPI = 2 * Math.PI\nconst plusChar = String.fromCharCode(59914)\nconst minusChar = String.fromCharCode(59915)\n\nconst darkTheme = {\n  axisLabel: '#b1b1b1',\n  gridBorder: '#3a3a3a',\n  gridLines: '#2a2a2a',\n  gapLine: '#6b6b6b',\n  value: '#9a9a9a',\n  zoom: '#5b5b5b',\n  zoomHover: '#aaa',\n  sellLine: '#ae3333',\n  buyLine: '#05a35a',\n  sellFill: '#591a1a',\n  buyFill: '#02572f',\n  crosshairs: '#888',\n  legendFill: 'black',\n  legendText: '#d5d5d5'\n}\n\nconst lightTheme = {\n  axisLabel: '#1b1b1b',\n  gridBorder: '#3a3a3a',\n  gridLines: '#dadada',\n  gapLine: '#595959',\n  value: '#4d4d4d',\n  zoom: '#777',\n  zoomHover: '#333',\n  sellLine: '#99302b',\n  buyLine: '#207a46',\n  sellFill: '#bd5959',\n  buyFill: '#4cad75',\n  crosshairs: '#595959',\n  legendFill: '#e6e6e6',\n  legendText: '#1b1b1b'\n}\n\n// DepthChart is a javascript Canvas-based depth chart renderer.\nexport class DepthChart {\n  constructor (parent, reporters) {\n    this.theme = State.isDark() ? darkTheme : lightTheme\n    this.canvas = document.createElement('canvas')\n    this.parent = parent\n    this.reporters = reporters\n    this.ctx = this.canvas.getContext('2d')\n    this.ctx.textAlign = 'center'\n    this.ctx.textBaseline = 'middle'\n    this.book = null\n    this.dataExtents = null\n    this.zoomLevel = null\n    this.lotSize = null\n    this.rateStep = null\n    parent.appendChild(this.canvas)\n    // Mouse handling\n    this.mousePos = null\n    bind(this.canvas, 'mousemove', e => {\n      // this.rect will be set in resize().\n      this.mousePos = {\n        x: e.clientX - this.rect.left,\n        y: e.clientY - this.rect.y\n      }\n      this.draw()\n    })\n    bind(this.canvas, 'mouseleave', () => {\n      this.mousePos = null\n      this.draw()\n    })\n    // Scrolling by wheel is smoother when the rate is slightly limited.\n    this.wheelLimiter = null\n    this.wheeled = () => {\n      this.wheelLimiter = setTimeout(() => { this.wheelLimiter = null }, 100)\n    }\n\n    bind(this.canvas, 'wheel', e => { this.wheel(e) })\n    this.resize = e => { this.resize_(e) }\n    bind(window, 'resize', this.resize)\n    bind(this.canvas, 'click', e => { this.click(e) })\n    this.resize()\n  }\n\n  // The market handler will call unattach when the markets page is unloaded.\n  unattach () {\n    unbind(window, 'resize', this.resize)\n  }\n\n  // resize_ is a 'resize' event handler.\n  resize_ () {\n    this.canvas.width = this.parent.clientWidth\n    this.canvas.height = this.parent.clientHeight\n    const xLblHeight = 30\n    const yGuess = 40 // y label width guess. Will be adjusted when drawn.\n    const plotExtents = new Extents(yGuess, this.canvas.width, 10, this.canvas.height - xLblHeight)\n    const xLblExtents = new Extents(yGuess, this.canvas.width, this.canvas.height - xLblHeight, this.canvas.height)\n    const yLblExtents = new Extents(0, yGuess, 10, this.canvas.height - xLblHeight)\n    this.plotRegion = new Region(this.ctx, plotExtents)\n    this.xRegion = new Region(this.ctx, xLblExtents)\n    this.yRegion = new Region(this.ctx, yLblExtents)\n    // The button region extents are set during drawing.\n    this.zoomInBttn = new Region(this.ctx, new Extents(0, 0, 0, 0))\n    this.zoomOutBttn = new Region(this.ctx, new Extents(0, 0, 0, 0))\n    this.rect = this.canvas.getBoundingClientRect()\n    if (this.book) this.draw()\n  }\n\n  // wheel is a mousewheel event handler.\n  wheel (e) {\n    this.zoom(e.deltaY < 0)\n  }\n\n  // zoom zooms the current view in or out. bigger=true is zoom in.\n  zoom (bigger) {\n    if (!this.zoomLevel) return\n    if (this.wheelLimiter) return\n    if (!this.book.buys || !this.book.sells) return\n    this.wheeled()\n    // Zoom in to 66%, but out to 150% = 1 / (2/3) so that the same zoom levels\n    // are hit when reversing direction.\n    this.zoomLevel *= bigger ? 2 / 3 : 3 / 2\n    this.zoomLevel = clamp(this.zoomLevel, 0.005, 2)\n    this.draw()\n  }\n\n  // click is the canvas 'click' event handler.\n  click (e) {\n    if (!this.dataExtents) return\n    const x = e.clientX - this.rect.left\n    const y = e.clientY - this.rect.y\n    if (this.zoomInBttn.contains(x, y)) { this.zoom(true); return }\n    if (this.zoomOutBttn.contains(x, y)) { this.zoom(false); return }\n    const translator = this.plotRegion.translator(this.dataExtents)\n    this.reporters.price(translator.unx(x))\n  }\n\n  // clear the canvas.\n  clear () {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n  }\n\n  // set sets the current data set and draws.\n  set (book, lotSize, rateStep) {\n    this.book = book\n    this.lotSize = lotSize / 1e8\n    this.rateStep = rateStep / 1e8\n    this.baseTicker = book.baseSymbol.toUpperCase()\n    this.quoteTicker = book.quoteSymbol.toUpperCase()\n    const [midGap, gapWidth] = this.gap()\n    // Default to 5% zoom, but with a minimum of 5 * midGap, but still observing\n    // the hard cap of 200%.\n    const minZoom = Math.max(gapWidth / midGap * 5, 0.05)\n    this.zoomLevel = Math.min(minZoom, 2)\n    this.draw()\n  }\n\n  // Draw the chart.\n  // 1. Calculate the data extents and translate the order book data to a\n  //    cumulative form.\n  // 2. Draw axis ticks and grid, mid-gap line and value, zoom buttons, mouse\n  //    position indicator...\n  // 4. Tick labels.\n  // 5. Data.\n  // 6. Epoch line legend.\n  // 7. Hover legend.\n  draw () {\n    this.clear()\n    // if (!this.book || this.book.empty()) return\n\n    this.ctx.textAlign = 'center'\n    this.ctx.textBaseline = 'middle'\n    const mousePos = this.mousePos\n    const buys = this.book.buys\n    const sells = this.book.sells\n    const [midGap, gapWidth] = this.gap()\n\n    const halfWindow = this.zoomLevel * midGap / 2\n    const high = midGap + halfWindow\n    const low = midGap - halfWindow\n\n    const buyDepth = []\n    const buyEpoch = []\n    const sellDepth = []\n    const sellEpoch = []\n    var sum = 0\n    // The epoch line is above the non-epoch region, so the epochSum y value\n    // must account for non-epoch orders too.\n    var epochSum = 0\n    for (let i = 0; i < buys.length; i++) {\n      const pt = buys[i]\n      epochSum += pt.qty\n      buyEpoch.push([pt.rate, epochSum])\n      if (!pt.epoch) {\n        sum += pt.qty\n        buyDepth.push([pt.rate, sum])\n      }\n      if (pt.rate < low) break\n    }\n    const buySum = buyDepth.length ? last(buyDepth)[1] : 0\n    buyDepth.push([low, buySum])\n    const epochBuySum = buyEpoch.length ? last(buyEpoch)[1] : 0\n    buyEpoch.push([low, epochBuySum])\n\n    sum = 0\n    epochSum = 0\n    for (let i = 0; i < sells.length; i++) {\n      const pt = sells[i]\n      epochSum += pt.qty\n      sellEpoch.push([pt.rate, epochSum])\n      if (!pt.epoch) {\n        sum += pt.qty\n        sellDepth.push([pt.rate, sum])\n      }\n      if (pt.rate > high) break\n    }\n    // Add a data point going to the left so that the data doesn't end with a\n    // vertical line.\n    const sellSum = sellDepth.length ? last(sellDepth)[1] : 0\n    sellDepth.push([high, sellSum])\n    const epochSellSum = sellEpoch.length ? last(sellEpoch)[1] : 0\n    sellEpoch.push([high, epochSellSum])\n\n    // Add 5% padding to the top of the chart.\n    const maxY = epochSellSum && epochBuySum ? Math.max(epochBuySum, epochSellSum) * 1.05 : epochSellSum || epochBuySum || 1\n\n    const dataExtents = new Extents(low, high, 0, maxY)\n    this.dataExtents = dataExtents\n\n    // Draw the axis tick labels.\n    const ctx = this.ctx\n    ctx.font = '12px \\'sans\\', sans-serif'\n    ctx.fillStyle = this.theme.axisLabel\n\n    const yLabels = makeLabels(ctx, this.plotRegion.height(), dataExtents.y.min,\n      dataExtents.y.max, 50, this.lotSize, this.book.baseSymbol)\n    // Reassign the width of the y-label column to accommodate the widest text.\n    const newWidth = yLabels.widest * 1.5\n    this.yRegion.extents.x.max = newWidth\n    this.plotRegion.extents.x.min = newWidth\n    this.xRegion.extents.x.min = newWidth\n    const xLabels = makeLabels(ctx, this.plotRegion.width(), dataExtents.x.min,\n      dataExtents.x.max, 100, this.rateStep, `${this.book.quoteSymbol}/${this.book.baseSymbol}`)\n\n    // A function to be run at the end if there is legend data to display.\n    var legendData\n\n    // Draw the grid.\n    ctx.lineWidth = 1\n    this.plotRegion.plot(dataExtents, (ctx, tools) => {\n      // first, a square around the plot area.\n      ctx.strokeStyle = this.theme.gridBorder\n      const extX = dataExtents.x\n      const extY = dataExtents.y\n      ctx.beginPath()\n      tools.dataCoords(() => {\n        ctx.moveTo(extX.min, extY.min)\n        ctx.lineTo(extX.min, extY.max)\n        ctx.lineTo(extX.max, extY.max)\n        ctx.lineTo(extX.max, extY.min)\n        ctx.lineTo(extX.min, extY.min)\n      })\n      ctx.stroke()\n      // for each x label, draw a vertical line\n      ctx.strokeStyle = this.theme.gridLines\n      xLabels.lbls.forEach(lbl => {\n        line(ctx, tools.x(lbl.val), tools.y(0), tools.x(lbl.val), tools.y(extY.max))\n      })\n      // horizontal lines for y labels.\n      yLabels.lbls.forEach(lbl => {\n        line(ctx, tools.x(extX.min), tools.y(lbl.val), tools.x(extX.max), tools.y(lbl.val))\n      })\n      // draw a line to indicate mid-gap\n      ctx.lineWidth = 2.5\n      ctx.strokeStyle = this.theme.gapLine\n      line(ctx, tools.x(midGap), tools.y(0), tools.x(midGap), tools.y(0.3 * extY.max))\n\n      ctx.font = '30px \\'demi-sans\\', sans-serif'\n      ctx.fillStyle = this.theme.value\n      const y = 0.5 * extY.max\n      ctx.fillText(formatLabelValue(midGap), tools.x(midGap), tools.y(y))\n      ctx.font = '12px \\'sans\\', sans-serif'\n      // ctx.fillText('mid-market price', tools.x(midGap), tools.y(y) + 24)\n      ctx.fillText(`${(gapWidth / midGap * 100).toFixed(2)}% spread`,\n        tools.x(midGap), tools.y(y) + 24)\n\n      // Draw zoom buttons.\n      const topCenterX = this.plotRegion.extents.midX\n      const topCenterY = tools.y(maxY * 0.9)\n      const zoomPct = dataExtents.xRange / midGap * 100\n      const zoomText = `${zoomPct.toFixed(1)}%`\n      const w = ctx.measureText(zoomText).width\n      ctx.font = '13px \\'sans\\', sans-serif'\n      ctx.fillText(zoomText, topCenterX, topCenterY + 1)\n      // define the region for the zoom button\n      const bttnSize = 20\n      const xPad = 10\n      let bttnLeft = topCenterX - w / 2 - xPad - bttnSize\n      const bttnTop = topCenterY - bttnSize / 2\n      this.zoomOutBttn.setExtents(\n        bttnLeft,\n        bttnLeft + bttnSize,\n        bttnTop,\n        bttnTop + bttnSize\n      )\n      let hover = mousePos && this.zoomOutBttn.contains(mousePos.x, mousePos.y)\n      this.zoomOutBttn.plot(new Extents(0, 1, 0, 1), (ctx, tools) => {\n        ctx.font = '12px \\'icomoon\\''\n        ctx.fillStyle = this.theme.zoom\n        if (hover) {\n          ctx.fillStyle = this.theme.zoomHover\n          ctx.font = '13px \\'icomoon\\''\n        }\n        ctx.fillText(minusChar, this.zoomOutBttn.extents.midX, this.zoomOutBttn.extents.midY)\n      })\n      bttnLeft = topCenterX + w / 2 + xPad\n      this.zoomInBttn.setExtents(\n        bttnLeft,\n        bttnLeft + bttnSize,\n        bttnTop,\n        bttnTop + bttnSize\n      )\n      hover = mousePos && this.zoomInBttn.contains(mousePos.x, mousePos.y)\n      this.zoomInBttn.plot(new Extents(0, 1, 0, 1), (ctx, tools) => {\n        ctx.font = '12px \\'icomoon\\''\n        ctx.fillStyle = this.theme.zoom\n        if (hover) {\n          ctx.fillStyle = this.theme.zoomHover\n          ctx.font = '14px \\'icomoon\\''\n        }\n        ctx.fillText(plusChar, this.zoomInBttn.extents.midX, this.zoomInBttn.extents.midY)\n      })\n\n      // If the mouse is in the chart area, draw the crosshairs.\n      if (!mousePos) return\n      if (!this.plotRegion.contains(mousePos.x, mousePos.y)) return\n      // The mouse is in the plot region. Get the data coordinates and find the\n      // side and depth for the x value.\n\n      const dataX = tools.unx(mousePos.x)\n      let evalSide = sellDepth\n      let trigger = (ptX) => ptX >= dataX\n      let dotColor = this.theme.sellLine\n      if (dataX < midGap) {\n        evalSide = buyDepth\n        trigger = (ptX) => ptX <= dataX\n        dotColor = this.theme.buyLine\n      }\n      let bestDepth = evalSide[0]\n      for (let i = 0; i < evalSide.length; i++) {\n        const pt = evalSide[i]\n        if (trigger(pt[0])) break\n        bestDepth = pt\n      }\n      // Draw a dotted vertical line where the mouse is, and a dot at the level\n      // of the depth line.\n      ctx.setLineDash([3, 5])\n      ctx.lineWidth = 1\n      ctx.strokeStyle = this.theme.crosshairs\n      line(ctx, tools.x(dataX), tools.y(0), tools.x(dataX), tools.y(maxY))\n      legendData = {\n        dataX: dataX,\n        depth: bestDepth[1],\n        dotColor: dotColor\n      }\n    })\n\n    // Print the y labels.\n    this.yRegion.plot(new Extents(0, 1, 0, maxY), (ctx, tools) => {\n      const centerY = maxY / 2\n      var lastY = 0\n      var unitCenter = centerY\n      yLabels.lbls.forEach(lbl => {\n        ctx.fillText(lbl.txt, tools.x(0.5), tools.y(lbl.val))\n        if (centerY >= lastY && centerY < lbl.val) {\n          unitCenter = (lastY + lbl.val) / 2\n        }\n        lastY = lbl.val\n      })\n      ctx.fillText(this.baseTicker, tools.x(0.5), tools.y(unitCenter))\n    }, true)\n\n    // Print the x labels\n    this.xRegion.plot(new Extents(low, high, 0, 1), (ctx, tools) => {\n      const centerX = (high + low) / 2\n      var lastX = low\n      var unitCenter = centerX\n      xLabels.lbls.forEach(lbl => {\n        ctx.fillText(lbl.txt, tools.x(lbl.val), tools.y(0.5))\n        if (centerX >= lastX && centerX < lbl.val) {\n          unitCenter = (lastX + lbl.val) / 2\n        }\n        lastX = lbl.val\n      })\n      ctx.font = '11px \\'sans\\', sans-serif'\n      ctx.fillText(`${this.quoteTicker}/`, tools.x(unitCenter), tools.y(0.63))\n      ctx.fillText(this.baseTicker, tools.x(unitCenter), tools.y(0.23))\n    }, true)\n\n    // Draw the epoch lines\n    this.ctx.lineWidth = 1.5\n    ctx.setLineDash([3, 3])\n    // epoch sells\n    ctx.fillStyle = this.theme.sellFill\n    ctx.strokeStyle = this.theme.sellLine\n    this.drawDepth(sellEpoch)\n    // epoch buys\n    ctx.fillStyle = this.theme.buyFill\n    ctx.strokeStyle = this.theme.buyLine\n    this.drawDepth(buyEpoch)\n\n    // Draw the book depth.\n    this.ctx.lineWidth = 2.5\n    ctx.setLineDash([])\n    // book sells\n    ctx.fillStyle = this.theme.sellFill\n    ctx.strokeStyle = this.theme.sellLine\n    this.drawDepth(sellDepth)\n    // book buys\n    ctx.fillStyle = this.theme.buyFill\n    ctx.strokeStyle = this.theme.buyLine\n    this.drawDepth(buyDepth)\n\n    // Draw the epoch line legend\n    this.plotRegion.plot(new Extents(0, 1, 0, 1), (ctx, tools) => {\n      const fontSize = 14\n      ctx.font = `${fontSize}px 'sans', sans-serif`\n      // Top-left corner is at (5, 5) from top left of plot region.\n      const topLeft = {\n        x: tools.x(0) + 5,\n        y: tools.y(1) + 5\n      }\n\n      // Get the label metrics to plan the box.\n      const lbl = 'epoch'\n      const textMetrics = ctx.measureText(lbl)\n      const padding = 10\n      const halfWidth = textMetrics.width + padding\n      const topCenter = {\n        x: topLeft.x + halfWidth,\n        y: topLeft.y\n      }\n\n      // Draw the legend background.\n      ctx.fillStyle = this.theme.legendFill\n      ctx.globalAlpha = 0.9\n      ctx.fillRect(topLeft.x, topCenter.y, halfWidth * 2, fontSize * 2)\n\n      // Draw the dashed line.\n      const lineY = topCenter.y + fontSize\n      this.ctx.lineWidth = 1.5\n      ctx.setLineDash([3, 3])\n      ctx.strokeStyle = this.theme.legendText\n      line(ctx, topLeft.x + padding, lineY, topCenter.x - padding, lineY)\n\n      // Write the text.\n      ctx.fillStyle = this.theme.legendText\n      ctx.fillText(lbl, topCenter.x + (textMetrics.width / 2), topCenter.y + fontSize + 1)\n    })\n\n    // If there is legend data to display, run that now.\n    // dot(ctx, tools.x(dataX), tools.y(bestDepth[1]), dotColor, 5)\n    if (legendData) {\n      const dataX = legendData.dataX\n      this.plotRegion.plot(dataExtents, (ctx, tools) => {\n        const screenX = tools.x(dataX)\n        dot(ctx, screenX, tools.y(legendData.depth), legendData.dotColor, 5)\n        // Create the strings and measure them to check how wide our legend needs\n        // to be.\n        const price = `price: ${formatLabelValue(dataX)} ${this.quoteTicker}`\n        const volume = `depth: ${formatLabelValue(legendData.depth)} ${this.baseTicker}`\n        ctx.font = '14px \\'sans\\', sans-serif'\n        const boxWidth = widest(ctx, price, volume) * 1.3\n\n        // Draw the little black semi-transparent background.\n        const rectH = 60\n        let rectTop = tools.y(legendData.depth) - rectH / 2\n        const extY = this.plotRegion.extents.y\n        rectTop = rectTop <= extY.min + 5 ? extY.min + 5 : rectTop\n        rectTop = rectTop > extY.max - rectH - 5 ? extY.max - rectH - 5 : rectTop\n        const left = dataX < midGap ? screenX + 10 : screenX - 10 - boxWidth\n        ctx.fillStyle = this.theme.legendFill\n        ctx.globalAlpha = 0.85\n        ctx.fillRect(left, rectTop, boxWidth, rectH)\n        ctx.globalAlpha = 1\n\n        ctx.textAlign = 'left'\n        ctx.textBaseline = 'top'\n        ctx.fillStyle = this.theme.legendText\n        ctx.fillText(price, left + boxWidth * 0.12, rectTop + 12)\n        ctx.fillText(volume, left + boxWidth * 0.12, rectTop + 37)\n      })\n    }\n  }\n\n  // Draw a single side's depth chart data.\n  drawDepth (depth) {\n    var firstPt = depth[0]\n    var y = firstPt[1]\n    var x\n    this.plotRegion.plot(this.dataExtents, (ctx, tools) => {\n      tools.dataCoords(() => {\n        ctx.beginPath()\n        ctx.moveTo(firstPt[0], firstPt[1])\n        for (let i = 0; i < depth.length; i++) {\n          // Set x, but don't set y until we draw the horizontal line.\n          x = depth[i][0]\n          ctx.lineTo(x, y)\n          // If this is past the render edge, quit drawing.\n          y = depth[i][1]\n          ctx.lineTo(x, y)\n        }\n      })\n      ctx.stroke()\n      tools.dataCoords(() => {\n        ctx.lineTo(x, 0)\n        ctx.lineTo(firstPt[0], 0)\n      })\n      ctx.closePath()\n      ctx.globalAlpha = 0.25\n      ctx.fill()\n    })\n  }\n\n  gap () {\n    const [b, s] = [this.book.bestGapBuy(), this.book.bestGapSell()]\n    if (!b) {\n      if (!s) return [1, 0]\n      return [s.rate, 0]\n    } else if (!s) return [b.rate, 0]\n    return [(s.rate + b.rate) / 2, s.rate - b.rate]\n  }\n}\n\n// Extents holds a min and max in both the x and y directions, and provides\n// getters for related data.\nclass Extents {\n  constructor (xMin, xMax, yMin, yMax) {\n    this.setExtents(xMin, xMax, yMin, yMax)\n  }\n\n  setExtents (xMin, xMax, yMin, yMax) {\n    this.x = {\n      min: xMin,\n      max: xMax\n    }\n    this.y = {\n      min: yMin,\n      max: yMax\n    }\n  }\n\n  get xRange () {\n    return this.x.max - this.x.min\n  }\n\n  get midX () {\n    return (this.x.max + this.x.min) / 2\n  }\n\n  get yRange () {\n    return this.y.max - this.y.min\n  }\n\n  get midY () {\n    return (this.y.max + this.y.min) / 2\n  }\n}\n\n// Region applies an Extents to the canvas, providing utilities for coordinate\n// transformations and restricting drawing to a specified region of the canvas.\nclass Region {\n  constructor (context, extents) {\n    this.context = context\n    this.extents = extents\n  }\n\n  setExtents (xMin, xMax, yMin, yMax) {\n    this.extents.setExtents(xMin, xMax, yMin, yMax)\n  }\n\n  width () {\n    return this.extents.xRange\n  }\n\n  height () {\n    return this.extents.yRange\n  }\n\n  contains (x, y) {\n    const ext = this.extents\n    return (x < ext.x.max && x > ext.x.min &&\n      y < ext.y.max && y > ext.y.min)\n  }\n\n  // A translator provides 4 function for coordinate transformations. x and y\n  // translate data coordinates to canvas coordinates for the specified data\n  // Extents. unx and uny translate canvas coordinates to data coordinates.\n  translator (dataExtents) {\n    const region = this.extents\n    const xMin = dataExtents.x.min\n    // const xMax = dataExtents.x.max\n    const yMin = dataExtents.y.min\n    // const yMax = dataExtents.y.max\n    const yRange = dataExtents.yRange\n    const xRange = dataExtents.xRange\n    const screenMinX = region.x.min\n    const screenW = region.x.max - screenMinX\n    const screenMaxY = region.y.max\n    const screenH = screenMaxY - region.y.min\n    const xFactor = screenW / xRange\n    const yFactor = screenH / yRange\n    return {\n      x: x => (x - xMin) * xFactor + screenMinX,\n      y: y => screenMaxY - (y - yMin) * yFactor,\n      unx: x => (x - screenMinX) / xFactor + xMin,\n      uny: y => yMin - (y - screenMaxY) / yFactor\n    }\n  }\n\n  // Clear the region.\n  clear () {\n    var ext = this.extents\n    this.ctx.clearRect(ext.x.min, ext.y.min, ext.xRange, ext.yRange)\n  }\n\n  // plot allows some drawing to be performed directly in data coordinates.\n  // Most actual drawing functions like ctx.stroke and ctx.fillRect should not\n  // be called from inside the provided drawFunc, but ctx.moveTo and ctx.LineTo\n  // are fine.\n  plot (dataExtents, drawFunc, skipMask) {\n    const ctx = this.context\n    const region = this.extents\n    ctx.save() // Save the original state\n    if (!skipMask) {\n      ctx.beginPath()\n      ctx.rect(region.x.min, region.y.min, region.xRange, region.yRange)\n      ctx.clip()\n    }\n\n    // The drawFunc will be passed a set of tool that can be used to assist\n    // drawing. The tools start with the transformation functions.\n    const tools = this.translator(dataExtents)\n\n    // Create a transformation that allows drawing in data coordinates. It's\n    // not advisable to stroke or add text with this transform in place, as the\n    // result will be distorted. You can however use ctx.moveTo and ctx.lineTo\n    // with this transform in place using data coordinates, and remove the\n    // transform before stroking. The dataCoords method of the supplied tool\n    // provides this functionality.\n    const yRange = dataExtents.yRange\n    const xFactor = region.xRange / dataExtents.xRange\n    const yFactor = region.yRange / yRange\n    const xMin = dataExtents.x.min\n    const yMin = dataExtents.y.min\n    // These translation factors are complicated because the (0, 0) of the\n    // region is not necessarily the (0, 0) of the canvas.\n    const tx = (region.x.min + xMin) - xMin * xFactor\n    const ty = -region.y.min - (yRange - yMin) * yFactor\n    const setTransform = () => {\n      // Data coordinates are flipped about y. Flip the coordinates and\n      // translate top left corner to canvas (0, 0).\n      ctx.transform(1, 0, 0, -1, -xMin, yMin)\n      // Scale to data coordinates and shift into place for the region's offset\n      // on the canvas.\n      ctx.transform(xFactor, 0, 0, yFactor, tx, ty)\n    }\n    // Provide drawCoords as a tool to enable inline drawing.\n    tools.dataCoords = f => {\n      ctx.save()\n      setTransform()\n      f()\n      ctx.restore()\n    }\n\n    drawFunc(this.context, tools)\n    ctx.restore()\n  }\n}\n\n// makeLabels attempts to create the appropriate labels for the specified\n// screen size, context, and label spacing.\nfunction makeLabels (ctx, screenW, min, max, spacingGuess, step, unit) {\n  var n = screenW / spacingGuess\n  const diff = max - min\n  var tickGuess = diff / n\n  // make the tick spacing a multiple of the step\n  const tick = tickGuess + step - (tickGuess % step)\n  var x = min + tick - (min % tick)\n  var absMax = Math.max(Math.abs(max), Math.abs(min))\n  // The Math.round part is the minimum precision required to see the change in the numbers.\n  // The 2 accounts for the precision of the tick.\n  var sigFigs = Math.round(Math.log10(absMax / tick)) + 2\n  const pts = []\n  var widest = 0\n  while (x < max) {\n    x = Number(x.toPrecision(sigFigs))\n    const lbl = formatLabelValue(x)\n    widest = Math.max(widest, ctx.measureText(lbl).width)\n    pts.push({\n      val: x,\n      txt: lbl\n    })\n    x += tick\n  }\n  const unitW = ctx.measureText(unit).width\n  if (unitW > widest) widest = unitW\n  return {\n    widest: widest,\n    lbls: pts\n  }\n}\n\n// The last element of an array.\nfunction last (arr) {\n  return arr[arr.length - 1]\n}\n\n// line draws a line with the provided context.\nfunction line (ctx, x0, y0, x1, y1, skipStroke) {\n  ctx.beginPath()\n  ctx.moveTo(x0, y0)\n  ctx.lineTo(x1, y1)\n  if (!skipStroke) ctx.stroke()\n}\n\n// dot draws a circle with the provided context.\nfunction dot (ctx, x, y, color, radius) {\n  ctx.fillStyle = color\n  ctx.beginPath()\n  ctx.arc(x, y, radius, 0, PIPI)\n  ctx.fill()\n}\n\n// widest uses the measureText method of the provided context sequentially on\n// the provided strings to calculate the widest rendering.\nfunction widest (ctx, ...texts) {\n  var wide = 0\n  texts.forEach(txt => {\n    wide = Math.max(wide, ctx.measureText(txt).width)\n  })\n  return wide\n}\n\nfunction clamp (v, min, max) {\n  if (v < min) return min\n  if (v > max) return max\n  return v\n}\n\n// labelSpecs is specifications for axis tick labels.\nconst labelSpecs = {\n  minimumSignificantDigits: 4,\n  maximumSignificantDigits: 5\n}\n\n// formatLabelValue formats the provided value using the labelSpecs format.\nfunction formatLabelValue (x) {\n  return x.toLocaleString('en-us', labelSpecs)\n}\n","import Doc from './doc'\n\nexport const Limit = 1\nexport const Market = 2\nexport const CANCEL = 3\n\n/* The time-in-force specifiers are a mirror of dex/order.TimeInForce. */\nexport const ImmediateTiF = 0\nexport const StandingTiF = 1\n\n/* The order statuses are a mirror of dex/order.OrderStatus. */\nexport const StatusUnknown = 0\nexport const StatusEpoch = 1\nexport const StatusBooked = 2\nexport const StatusExecuted = 3\nexport const StatusCanceled = 4\nexport const StatusRevoked = 5\n\n/* The match statuses are a mirror of dex/order.MatchStatus. */\nexport const NewlyMatched = 0\nexport const MakerSwapCast = 1\nexport const TakerSwapCast = 2\nexport const MakerRedeemed = 3\nexport const MatchComplete = 4\n\n/* The match sides are a mirror of dex/order.MatchSide. */\nexport const Maker = 0\nexport const Taker = 1\n\nexport function sellString (ord) { return ord.sell ? 'sell' : 'buy' }\nexport function typeString (ord) { return ord.type === Limit ? (ord.tif === ImmediateTiF ? 'limit (i)' : 'limit') : 'market' }\nexport function rateString (ord) { return ord.type === Market ? 'market' : Doc.formatCoinValue(ord.rate / 1e8) }\n\n/* isMarketBuy will return true if the order is a market buy order. */\nexport function isMarketBuy (ord) {\n  return ord.type === Market && !ord.sell\n}\n\n/*\n * hasLiveMatches returns true if the order has matches that have not completed\n * settlement yet.\n */\nexport function hasLiveMatches (order) {\n  if (!order.matches) return false\n  for (const match of order.matches) {\n    if (!match.revoked && match.status < MakerRedeemed) return true\n  }\n  return false\n}\n\n/* statusString converts the order status to a string */\nexport function statusString (order) {\n  const isLive = hasLiveMatches(order)\n  switch (order.status) {\n    case StatusUnknown: return 'unknown'\n    case StatusEpoch: return 'epoch'\n    case StatusBooked: return order.cancelling ? 'cancelling' : 'booked'\n    case StatusExecuted: return isLive ? 'settling' : 'executed'\n    case StatusCanceled: return isLive ? 'canceled/settling' : 'canceled'\n    case StatusRevoked: return isLive ? 'revoked/settling' : 'revoked'\n  }\n}\n\n/* settled sums the quantities of the matches that have completed. */\nexport function settled (order) {\n  if (!order.matches) return 0\n  const qty = isMarketBuy(order) ? m => m.qty * m.rate * 1e-8 : m => m.qty\n  return order.matches.reduce((settled, match) => {\n    if (match.isCancel) return settled\n    const redeemed = (match.side === Maker && match.status >= MakerRedeemed) ||\n      (match.side === Taker && match.status >= MatchComplete)\n    return redeemed ? settled + qty(match) : settled\n  }, 0)\n}\n","// MessageSocket is a WebSocket manager that uses the Decred DEX Mesage format\n// for communications.\n//\n// Message request format:\n// {\n//   route: 'name',\n//   id: int,\n//   payload: anything or nothing\n// }\n//\n// Message response payload will be a result object with either a valid 'result'\n// field or an 'error' field\n//\n// Functions for external use:\n// registerRoute (route, handler) -- register a function to handle events\n// of the given type\n// request (route, payload) -- create a JSON message in the above format and\n// send it\n//\n// Based on messagesocket_service.js by Jonathan Chappelow @ dcrdata, which is\n// based on ws_events_dispatcher.js by Ismael Celis\n\nconst typeRequest = 1\n\nfunction forward (route, payload, handlers) {\n  if (!route && payload.error) {\n    const err = payload.error\n    console.error(`websocket error (code ${err.code}): ${err.message}`)\n    return\n  }\n  if (typeof handlers[route] === 'undefined') {\n    // console.log(`unhandled message for ${route}: ${payload}`)\n    return\n  }\n  // call each handler\n  for (var i = 0; i < handlers[route].length; i++) {\n    handlers[route][i](payload)\n  }\n}\n\nvar id = 0\n\nclass MessageSocket {\n  constructor () {\n    this.uri = undefined\n    this.connection = undefined\n    this.handlers = {}\n    this.queue = []\n    this.maxQlength = 5\n  }\n\n  registerRoute (route, handler) {\n    this.handlers[route] = this.handlers[route] || []\n    this.handlers[route].push(handler)\n  }\n\n  deregisterRoute (route) {\n    this.handlers[route] = []\n  }\n\n  // request sends a request-type message to the server\n  request (route, payload) {\n    if (!this.connection || this.connection.readyState !== window.WebSocket.OPEN) {\n      while (this.queue.length > this.maxQlength - 1) this.queue.shift()\n      this.queue.push([route, payload])\n      return\n    }\n    id++\n    var message = JSON.stringify({\n      route: route,\n      type: typeRequest,\n      id: id,\n      payload: payload\n    })\n\n    window.log('ws', 'sending', message)\n    this.connection.send(message)\n  }\n\n  close (reason) {\n    window.log('ws', 'close, reason:', reason, this.handlers)\n    this.handlers = {}\n    this.connection.close()\n  }\n\n  connect (uri, reloader) {\n    this.uri = uri\n    this.reloader = reloader\n    var retrys = 0\n    const go = () => {\n      window.log('ws', `connecting to ${uri}`)\n      var conn = this.connection = new window.WebSocket(uri)\n      var timeout = setTimeout(() => {\n        // readyState is still WebSocket.CONNECTING. Cancel and trigger onclose.\n        conn.close()\n      }, 500)\n\n      // unmarshal message, and forward the message to registered handlers\n      conn.onmessage = (evt) => {\n        var message = JSON.parse(evt.data)\n        forward(message.route, message.payload, this.handlers)\n      }\n\n      // Stub out standard functions\n      conn.onclose = (evt) => {\n        window.log('ws', 'onclose')\n        clearTimeout(timeout)\n        conn = this.connection = null\n        forward('close', null, this.handlers)\n        retrys++\n        // 1.2, 1.6, 2.0, 2.4, 3.1, 3.8, 4.8, 6.0, 7.5, 9.3, ...\n        const delay = Math.min(Math.pow(1.25, retrys), 10)\n        console.error(`websocket disconnected (${evt.code}), trying again in ${delay.toFixed(1)} seconds`)\n        setTimeout(() => {\n          go()\n        }, delay * 1000)\n      }\n\n      conn.onopen = () => {\n        window.log('ws', 'onopen')\n        clearTimeout(timeout)\n        if (retrys > 0) {\n          retrys = 0\n          reloader()\n        }\n        forward('open', null, this.handlers)\n        const queue = this.queue\n        this.queue = []\n        for (const [route, message] of queue) {\n          this.request(route, message)\n        }\n      }\n\n      conn.onerror = (evt) => {\n        window.log('ws', 'onerror:', evt)\n        forward('error', evt, this.handlers)\n      }\n    }\n    go()\n  }\n}\n\nvar ws = new MessageSocket()\nexport default ws\n","import Doc, { WalletIcons } from './doc'\nimport State from './state'\nimport BasePage from './basepage'\nimport OrderBook from './orderbook'\nimport { DepthChart } from './charts'\nimport { postJSON } from './http'\nimport { NewWalletForm, bindOpenWallet, bind as bindForm } from './forms'\nimport * as Order from './orderutil'\nimport ws from './ws'\n\nvar app\nconst bind = Doc.bind\n\nconst bookRoute = 'book'\nconst bookOrderRoute = 'book_order'\nconst unbookOrderRoute = 'unbook_order'\nconst updateRemainingRoute = 'update_remaining'\nconst epochOrderRoute = 'epoch_order'\nconst bookUpdateRoute = 'bookupdate'\nconst unmarketRoute = 'unmarket'\n\nconst lastMarketKey = 'selectedMarket'\nconst chartRatioKey = 'chartRatio'\n\nconst animationLength = 500\n\nconst anHour = 60 * 60 * 1000 // milliseconds\n\nconst check = document.createElement('span')\ncheck.classList.add('ico-check')\n\nexport default class MarketsPage extends BasePage {\n  constructor (application, main, data) {\n    super()\n    app = application\n    const page = this.page = Doc.parsePage(main, [\n      // Templates, loaders, chart div...\n      'marketLoader', 'marketChart', 'marketList', 'rowTemplate', 'buyRows',\n      'sellRows', 'marketSearch', 'chartResizer', 'rightSide',\n      // Registration status\n      'registrationStatus', 'regStatusTitle', 'regStatusMessage', 'regStatusConfsDisplay',\n      'regStatusDex', 'confReq',\n      // Order form.\n      'orderForm', 'priceBox', 'buyBttn', 'sellBttn', 'limitBttn', 'marketBttn',\n      'tifBox', 'submitBttn', 'qtyField', 'rateField', 'orderErr',\n      'baseWalletIcons', 'quoteWalletIcons', 'lotSize', 'rateStep', 'lotField',\n      'tifNow', 'mktBuyBox', 'mktBuyLots', 'mktBuyField', 'minMktBuy', 'qtyBox',\n      'loaderMsg', 'balanceTable', 'orderPreview',\n      // Wallet unlock form\n      'forms', 'openForm', 'uwAppPass',\n      // Order submission is verified with the user's password.\n      'verifyForm', 'vSide', 'vQty', 'vBase', 'vRate',\n      'vTotal', 'vQuote', 'vPass', 'vSubmit', 'verifyLimit', 'verifyMarket',\n      'vmTotal', 'vmAsset', 'vmLots', 'mktBuyScore',\n      // Create wallet form\n      'walletForm',\n      // Active orders\n      'liveTemplate', 'liveList',\n      // Cancel order form\n      'cancelForm', 'cancelRemain', 'cancelUnit', 'cancelPass', 'cancelSubmit'\n    ])\n    this.main = main\n    app.loading(this.main.parentElement)\n    this.loaded = false\n    this.market = null\n    this.registrationStatus = {}\n    this.currentForm = null\n    this.openAsset = null\n    this.openFunc = null\n    this.currentCreate = null\n    this.book = null\n    this.cancelData = null\n    this.metaOrders = {}\n    const reporters = {\n      price: p => { this.reportPrice(p) }\n    }\n    this.chart = new DepthChart(page.marketChart, reporters)\n\n    // Set up the BalanceWidget.\n    {\n      const wgt = this.balanceWgt = new BalanceWidget(page.balanceTable)\n      const baseIcons = wgt.base.stateIcons.icons\n      const quoteIcons = wgt.quote.stateIcons.icons\n      bind(wgt.base.connect, 'click', () => { this.showOpen(this.market.base, this.walletUnlocked) })\n      bind(wgt.quote.connect, 'click', () => { this.showOpen(this.market.quote, this.walletUnlocked) })\n      bind(wgt.base.expired, 'click', () => { this.showOpen(this.market.base, this.walletUnlocked) })\n      bind(wgt.quote.expired, 'click', () => { this.showOpen(this.market.quote, this.walletUnlocked) })\n      bind(baseIcons.sleeping, 'click', () => { this.showOpen(this.market.base, this.walletUnlocked) })\n      bind(quoteIcons.sleeping, 'click', () => { this.showOpen(this.market.quote, this.walletUnlocked) })\n      bind(baseIcons.locked, 'click', () => { this.showOpen(this.market.base, this.walletUnlocked) })\n      bind(quoteIcons.locked, 'click', () => { this.showOpen(this.market.quote, this.walletUnlocked) })\n      bind(wgt.base.newWalletBttn, 'click', () => { this.showCreate(this.market.base) })\n      bind(wgt.quote.newWalletBttn, 'click', () => { this.showCreate(this.market.quote) })\n    }\n\n    // Prepare templates for the buy and sell tables and the user's order table.\n    cleanTemplates(page.rowTemplate, page.liveTemplate)\n\n    // Prepare the list of markets.\n    this.marketList = new MarketList(page.marketList)\n    for (const xc of this.marketList.xcSections) {\n      for (const mkt of xc.marketRows) {\n        bind(mkt.row, 'click', () => {\n          this.setMarket(xc.host, mkt.baseID, mkt.quoteID)\n        })\n      }\n    }\n\n    // Store the elements that need their ticker changed when the market\n    // changes.\n    this.quoteUnits = main.querySelectorAll('[data-unit=quote]')\n    this.baseUnits = main.querySelectorAll('[data-unit=base]')\n\n    // Buttons to set order type and side.\n    bind(page.buyBttn, 'click', () => {\n      swapBttns(page.sellBttn, page.buyBttn)\n      page.submitBttn.classList.remove('sellred')\n      page.submitBttn.classList.add('buygreen')\n      this.setOrderBttnText()\n      this.setOrderVisibility()\n    })\n    bind(page.sellBttn, 'click', () => {\n      swapBttns(page.buyBttn, page.sellBttn)\n      page.submitBttn.classList.add('sellred')\n      page.submitBttn.classList.remove('buygreen')\n      this.setOrderBttnText()\n      this.setOrderVisibility()\n    })\n    // const tifCheck = tifDiv.querySelector('input[type=checkbox]')\n    bind(page.limitBttn, 'click', () => {\n      swapBttns(page.marketBttn, page.limitBttn)\n      this.setOrderVisibility()\n    })\n    bind(page.marketBttn, 'click', () => {\n      swapBttns(page.limitBttn, page.marketBttn)\n      this.setOrderVisibility()\n      this.setMarketBuyOrderEstimate()\n    })\n\n    Doc.disableMouseWheel(page.rateField, page.lotField, page.qtyField, page.mktBuyField)\n\n    // Handle the full orderbook sent on the 'book' route.\n    ws.registerRoute(bookRoute, data => { this.handleBookRoute(data) })\n    // Handle the new order for the order book on the 'book_order' route.\n    ws.registerRoute(bookOrderRoute, data => { this.handleBookOrderRoute(data) })\n    // Remove the order sent on the 'unbook_order' route from the orderbook.\n    ws.registerRoute(unbookOrderRoute, data => { this.handleUnbookOrderRoute(data) })\n    // Update the remaining quantity on a booked order.\n    ws.registerRoute(updateRemainingRoute, data => { this.handleUpdateRemainingRoute(data) })\n    // Handle the new order for the order book on the 'epoch_order' route.\n    ws.registerRoute(epochOrderRoute, data => { this.handleEpochOrderRoute(data) })\n    // Bind the wallet unlock form.\n    bindOpenWallet(app, page.openForm, async () => { this.openFunc() })\n    // Create a wallet\n    this.walletForm = new NewWalletForm(app, page.walletForm, async () => { this.createWallet() })\n    // Main order form\n    bindForm(page.orderForm, page.submitBttn, async () => { this.stepSubmit() })\n    // Order verification form\n    bindForm(page.verifyForm, page.vSubmit, async () => { this.submitOrder() })\n    // Cancel order form\n    bindForm(page.cancelForm, page.cancelSubmit, async () => { this.submitCancel() })\n\n    const closePopups = () => {\n      Doc.hide(page.forms)\n      page.vPass.value = ''\n      page.cancelPass.value = ''\n    }\n\n    // If the user clicks outside of a form, it should close the page overlay.\n    bind(page.forms, 'mousedown', e => {\n      if (!Doc.mouseInElement(e, this.currentForm)) {\n        closePopups()\n      }\n    })\n\n    page.forms.querySelectorAll('.form-closer').forEach(el => {\n      Doc.bind(el, 'click', () => { closePopups() })\n    })\n\n    // Event listeners for interactions with the various input fields.\n    bind(page.lotField, 'change', () => { this.lotChanged() })\n    bind(page.lotField, 'keyup', () => { this.lotChanged() })\n    bind(page.qtyField, 'change', () => { this.quantityChanged(true) })\n    bind(page.qtyField, 'keyup', () => { this.quantityChanged(false) })\n    bind(page.mktBuyField, 'change', () => { this.marketBuyChanged() })\n    bind(page.mktBuyField, 'keyup', () => { this.marketBuyChanged() })\n    bind(page.rateField, 'change', () => { this.rateFieldChanged() })\n    bind(page.rateField, 'keyup', () => { this.previewOrder(true) })\n\n    // Market search input bindings.\n    bind(page.marketSearch, 'change', () => { this.filterMarkets() })\n    bind(page.marketSearch, 'keyup', () => { this.filterMarkets() })\n\n    // Load the user's layout preferences.\n    const setChartRatio = r => {\n      if (r > 0.7) r = 0.7\n      else if (r < 0.25) r = 0.25\n      page.marketChart.style.height = `${r * 100}%`\n      this.chart.resize()\n    }\n    const chartDivRatio = State.fetch(chartRatioKey)\n    if (chartDivRatio) {\n      setChartRatio(chartDivRatio)\n    }\n    // Bind chart resizing.\n    bind(page.chartResizer, 'mousedown', e => {\n      if (e.button !== 0) return\n      e.preventDefault()\n      var chartRatio\n      const trackMouse = ee => {\n        ee.preventDefault()\n        const box = page.rightSide.getBoundingClientRect()\n        const h = box.bottom - box.top\n        chartRatio = (ee.pageY - box.top) / h\n        setChartRatio(chartRatio)\n      }\n      bind(document, 'mousemove', trackMouse)\n      bind(document, 'mouseup', () => {\n        if (chartRatio) State.store(chartRatioKey, chartRatio)\n        Doc.unbind(document, 'mousemove', trackMouse)\n      })\n    })\n\n    // Notification filters.\n    this.notifiers = {\n      order: note => { this.handleOrderNote(note) },\n      epoch: note => { this.handleEpochNote(note) },\n      conn: note => { this.marketList.setConnectionStatus(note) },\n      balance: note => { this.handleBalanceNote(note) },\n      feepayment: note => { this.handleFeePayment(note) }\n    }\n\n    // Fetch the first market in the list, or the users last selected market, if\n    // it exists.\n    var selected\n    if (data && data.host && typeof data.base !== 'undefined' && typeof data.quote !== 'undefined') {\n      selected = makeMarket(data.host, parseInt(data.base), parseInt(data.quote))\n    } else {\n      selected = State.fetch(lastMarketKey)\n    }\n    if (!selected || !this.marketList.exists(selected.host, selected.base, selected.quote)) {\n      selected = this.marketList.first()\n    }\n    this.setMarket(selected.host, selected.base, selected.quote)\n\n    // Start a ticker to update time-since values.\n    this.secondTicker = setInterval(() => {\n      for (const metaOrder of Object.values(this.metaOrders)) {\n        const td = Doc.tmplElement(metaOrder.row, 'age')\n        td.textContent = Doc.timeSince(metaOrder.order.stamp)\n      }\n    }, 1000)\n\n    // set the initial state for the registration status\n    this.setRegistrationStatusVisibility()\n  }\n\n  /* isSell is true if the user has selected sell in the order options. */\n  isSell () {\n    return this.page.sellBttn.classList.contains('selected')\n  }\n\n  /* isLimit is true if the user has selected the \"limit order\" tab. */\n  isLimit () {\n    return this.page.limitBttn.classList.contains('selected')\n  }\n\n  /* hasFeePending is true if the fee payment is pending */\n  hasFeePending () {\n    const dex = this.market.dex\n    return typeof dex.confs === 'number' && dex.confs < dex.confsrequired\n  }\n\n  /* assetsAreSupported is true if all the assets of the current market are\n   * supported\n   */\n  assetsAreSupported () {\n    const [b, q] = [this.market.base, this.market.quote]\n    return b && q\n  }\n\n  /*\n   * setOrderVisibility sets which form is visible based on the specified\n   * options.\n   */\n  setOrderVisibility () {\n    const page = this.page\n    if (this.isLimit()) {\n      Doc.show(page.priceBox, page.tifBox, page.qtyBox)\n      Doc.hide(page.mktBuyBox)\n      this.previewOrder(true)\n    } else {\n      Doc.hide(page.tifBox)\n      Doc.hide(page.priceBox)\n      if (this.isSell()) {\n        Doc.hide(page.mktBuyBox)\n        Doc.show(page.qtyBox)\n        this.previewOrder(true)\n      } else {\n        Doc.show(page.mktBuyBox)\n        Doc.hide(page.qtyBox)\n        this.previewOrder(false)\n      }\n    }\n  }\n\n  /* resolveOrderFormVisibility displays or hides the 'orderForm' based on\n   * a set of conditions to be met.\n   */\n  resolveOrderFormVisibility () {\n    const page = this.page\n    const feePaid = !this.hasFeePending()\n    const assetsAreSupported = this.assetsAreSupported()\n    const base = this.market.base\n    const quote = this.market.quote\n    const hasWallets = base && app.assets[base.id].wallet && quote && app.assets[quote.id].wallet\n\n    if (feePaid && assetsAreSupported && hasWallets) {\n      Doc.show(page.orderForm)\n      return\n    }\n\n    Doc.hide(page.orderForm)\n  }\n\n  /* setLoaderMsgVisibility displays a message in case a dex asset is not\n   * supported\n   */\n  setLoaderMsgVisibility () {\n    const page = this.page\n    const { base, quote } = this.market\n\n    if (this.assetsAreSupported()) {\n      // make sure to hide the loader msg\n      Doc.hide(page.loaderMsg)\n      return\n    }\n    const symbol = (!base && this.market.baseCfg.symbol) || (!quote && this.market.quoteCfg.symbol)\n\n    page.loaderMsg.textContent = `${symbol.toUpperCase()} is not supported`\n    Doc.show(page.loaderMsg)\n  }\n\n  /* setRegistrationStatusView sets the text content and class for the\n   * registration status view\n   */\n  setRegistrationStatusView (titleContent, confStatusMsg, titleClass) {\n    const page = this.page\n    page.regStatusTitle.textContent = titleContent\n    page.regStatusConfsDisplay.textContent = confStatusMsg\n    page.registrationStatus.classList.remove('completed', 'error', 'waiting')\n    page.registrationStatus.classList.add(titleClass)\n  }\n\n  /*\n   * updateRegistrationStatusView updates the view based on the current\n   * registration status\n   */\n  updateRegistrationStatusView (dexAddr, feePaid, confirmationsRequired, confirmations) {\n    const page = this.page\n\n    page.confReq.textContent = confirmationsRequired\n    page.regStatusDex.textContent = dexAddr\n\n    if (feePaid) {\n      this.setRegistrationStatusView('Registration fee payment successful!', '', 'completed')\n      return\n    }\n\n    const confStatusMsg = `${confirmations} / ${confirmationsRequired}`\n\n    this.setRegistrationStatusView('Waiting for confirmations...', confStatusMsg, 'waiting')\n  }\n\n  /*\n   * setRegistrationStatusVisibility toggles the registration status view based\n   * on the dex data.\n   */\n  setRegistrationStatusVisibility () {\n    const { page, market: { dex } } = this\n    const { confs, confsrequired } = dex\n    const feePending = this.hasFeePending()\n\n    this.updateRegistrationStatusView(dex.host, !feePending, confsrequired, confs)\n\n    if (feePending) {\n      Doc.show(page.registrationStatus)\n    } else {\n      const toggle = () => {\n        Doc.hide(page.registrationStatus)\n        this.resolveOrderFormVisibility()\n      }\n      if (Doc.isHidden(page.orderForm)) {\n        // wait a couple of seconds before showing the form so the success\n        // message is shown to the user\n        setTimeout(toggle, 5000)\n        return\n      }\n      toggle()\n    }\n  }\n\n  setOrderBttnText () {\n    if (this.isSell()) {\n      this.page.submitBttn.textContent = `Place order to sell ${this.market.base.symbol.toUpperCase()}`\n    } else this.page.submitBttn.textContent = `Place order to buy  ${this.market.base.symbol.toUpperCase()}`\n  }\n\n  /* setMarket sets the currently displayed market. */\n  async setMarket (host, base, quote) {\n    const dex = app.user.exchanges[host]\n    const baseCfg = dex.assets[base]\n    const quoteCfg = dex.assets[quote]\n    this.market = {\n      dex: dex,\n      sid: marketID(baseCfg.symbol, quoteCfg.symbol), // A string market identifier used by the DEX.\n      // app.assets is a map of core.SupportedAsset type, which can be found at\n      // client/core/types.go.\n      base: app.assets[base],\n      quote: app.assets[quote],\n      // dex.assets is a map of dex.Asset type, which is defined at\n      // dex/asset.go.\n      baseCfg: dex.assets[base],\n      quoteCfg: dex.assets[quote]\n    }\n    this.page.marketLoader.classList.remove('d-none')\n    ws.request('loadmarket', makeMarket(host, base, quote))\n    this.setLoaderMsgVisibility()\n    this.setRegistrationStatusVisibility()\n    this.resolveOrderFormVisibility()\n    this.setOrderBttnText()\n  }\n\n  /*\n   * reportPrice is a callback used by the DepthChart when the user clicks\n   * on the chart area. The rate field is set to the x-value of the click.\n   */\n  reportPrice (p) {\n    this.page.rateField.value = p.toFixed(8)\n    this.rateFieldChanged()\n  }\n\n  /*\n   * parseOrder pulls the order information from the form fields. Data is not\n   * validated in any way.\n   */\n  parseOrder () {\n    const page = this.page\n    let qtyField = page.qtyField\n    const limit = this.isLimit()\n    const sell = this.isSell()\n    const market = this.market\n    if (!limit && !sell) {\n      qtyField = page.mktBuyField\n    }\n    return {\n      host: market.dex.host,\n      isLimit: limit,\n      sell: sell,\n      base: market.base.id,\n      quote: market.quote.id,\n      qty: asAtoms(qtyField.value),\n      rate: asAtoms(page.rateField.value), // message-rate\n      tifnow: page.tifNow.checked\n    }\n  }\n\n  /**\n   * previewOrder shows quote amount when rate or quantity input are changed\n   */\n  previewOrder (show) {\n    const page = this.page\n    const order = this.parseOrder()\n    page.orderErr.textContent = ''\n    if (!show || !order.rate || !order.qty) {\n      page.orderPreview.textContent = ''\n      return\n    }\n    const quoteAsset = app.assets[order.quote]\n    const total = Doc.formatCoinValue(order.rate / 1e8 * order.qty / 1e8)\n    page.orderPreview.textContent = `Total: ${total} ${quoteAsset.symbol.toUpperCase()}`\n  }\n\n  /*\n   * validateOrder performs some basic order sanity checks, returning boolean\n   * true if the order appears valid.\n   */\n  validateOrder (order) {\n    const page = this.page\n    if (order.isLimit && !order.rate) {\n      Doc.show(page.orderErr)\n      page.orderErr.textContent = 'zero rate not allowed'\n      return false\n    }\n    if (!order.qty) {\n      Doc.show(page.orderErr)\n      page.orderErr.textContent = 'zero quantity not allowed'\n      return false\n    }\n    return true\n  }\n\n  /* handleBook accepts the data sent in the 'book' notification. */\n  handleBook (data) {\n    const [b, q] = [this.market.baseCfg, this.market.quoteCfg]\n    this.book = new OrderBook(data, b.symbol, q.symbol)\n    this.loadTable()\n    for (const order of (data.book.epoch || [])) {\n      if (order.rate > 0) this.book.add(order)\n      this.addTableOrder(order)\n    }\n    if (!this.book) {\n      this.chart.clear()\n      Doc.empty(this.page.buyRows)\n      Doc.empty(this.page.sellRows)\n      return\n    }\n    this.chart.set(this.book, b.lotSize, q.rateStep)\n  }\n\n  /*\n   * midGap returns the value in the middle of the best buy and best sell. If\n   * either one of the buy or sell sides are empty, midGap returns the best\n   * rate from the other side. If both sides are empty, midGap returns the\n   * value null.\n   */\n  midGap () {\n    const book = this.book\n    if (!book) return\n    if (book.buys && book.buys.length) {\n      if (book.sells && book.sells.length) {\n        return (book.buys[0].rate + book.sells[0].rate) / 2\n      }\n      return book.buys[0].rate\n    }\n    if (book.sells && book.sells.length) {\n      return book.sells[0].rate\n    }\n    return null\n  }\n\n  /*\n   * setMarketBuyOrderEstimate sets the \"min. buy\" display for the current\n   * market.\n   */\n  setMarketBuyOrderEstimate () {\n    const market = this.market\n    const lotSize = market.baseCfg.lotSize\n    const xc = app.user.exchanges[market.dex.host]\n    const buffer = xc.markets[market.sid].buybuffer\n    const gap = this.midGap()\n    if (gap) {\n      this.page.minMktBuy.textContent = Doc.formatCoinValue(lotSize * buffer * gap / 1e8)\n    }\n  }\n\n  /* refreshActiveOrders refreshes the user's active order list. */\n  refreshActiveOrders () {\n    const page = this.page\n    const metaOrders = this.metaOrders\n    const market = this.market\n    for (const oid in metaOrders) delete metaOrders[oid]\n    const orders = app.orders(market.dex.host, marketID(market.baseCfg.symbol, market.quoteCfg.symbol))\n\n    Doc.empty(page.liveList)\n    for (const ord of orders) {\n      const row = page.liveTemplate.cloneNode(true)\n      metaOrders[ord.id] = {\n        row: row,\n        order: ord\n      }\n      updateUserOrderRow(row, ord)\n      if (ord.type === Order.Limit) {\n        if (ord.tif === Order.StandingTiF && ord.status < Order.StatusExecuted) {\n          const icon = Doc.tmplElement(row, 'cancelBttn')\n          Doc.show(icon)\n          bind(icon, 'click', e => {\n            e.stopPropagation()\n            this.showCancel(row, ord.id)\n          })\n        }\n      }\n      const link = Doc.tmplElement(row, 'link')\n      link.href = `order/${ord.id}`\n      app.bindInternalNavigation(row)\n      page.liveList.appendChild(row)\n      app.bindTooltips(row)\n    }\n  }\n\n  /* handleBookRoute is the handler for the 'book' notification, which is sent\n   * in response to a new market subscription. The data received will contain\n   * the entire order book.\n   */\n  handleBookRoute (note) {\n    app.log('book', 'handleBookRoute:', note)\n    const mktBook = note.payload\n    const market = this.market\n    const page = this.page\n    const host = market.dex.host\n    const [b, q] = [market.baseCfg, market.quoteCfg]\n    if (mktBook.base !== b.id || mktBook.quote !== q.id) return\n    this.handleBook(mktBook)\n    page.marketLoader.classList.add('d-none')\n    this.marketList.select(host, b.id, q.id)\n\n    State.store(lastMarketKey, {\n      host: note.host,\n      base: mktBook.base,\n      quote: mktBook.quote\n    })\n\n    page.lotSize.textContent = Doc.formatCoinValue(market.baseCfg.lotSize / 1e8)\n    page.rateStep.textContent = market.quoteCfg.rateStep / 1e8\n    this.baseUnits.forEach(el => { el.textContent = b.symbol.toUpperCase() })\n    this.quoteUnits.forEach(el => { el.textContent = q.symbol.toUpperCase() })\n    this.balanceWgt.setWallets(host, b.id, q.id)\n    this.setMarketBuyOrderEstimate()\n    this.refreshActiveOrders()\n    if (!this.loaded) {\n      this.loaded = true\n      app.loaded()\n      Doc.animate(250, progress => {\n        this.main.style.opacity = progress\n      })\n    }\n  }\n\n  /* handleBookOrderRoute is the handler for 'book_order' notifications. */\n  handleBookOrderRoute (data) {\n    app.log('book', 'handleBookOrderRoute:', data)\n    if (data.host !== this.market.dex.host || data.marketID !== this.market.sid) return\n    const order = data.payload\n    if (order.rate > 0) this.book.add(order)\n    this.addTableOrder(order)\n    this.chart.draw()\n  }\n\n  /* handleUnbookOrderRoute is the handler for 'unbook_order' notifications. */\n  handleUnbookOrderRoute (data) {\n    app.log('book', 'handleUnbookOrderRoute:', data)\n    if (data.host !== this.market.dex.host || data.marketID !== this.market.sid) return\n    const order = data.payload\n    this.book.remove(order.token)\n    this.removeTableOrder(order)\n    this.chart.draw()\n  }\n\n  /*\n   * handleUpdateRemainingRoute is the handler for 'update_remaining'\n   * notifications.\n   */\n  handleUpdateRemainingRoute (data) {\n    app.log('book', 'handleUpdateRemainingRoute:', data)\n    if (data.host !== this.market.dex.host || data.marketID !== this.market.sid) return\n    const update = data.payload\n    this.book.updateRemaining(update.token, update.qty)\n    this.updateTableOrder(update)\n    this.chart.draw()\n  }\n\n  /* handleEpochOrderRoute is the handler for 'epoch_order' notifications. */\n  handleEpochOrderRoute (data) {\n    app.log('book', 'handleEpochOrderRoute:', data)\n    if (data.host !== this.market.dex.host || data.marketID !== this.market.sid) return\n    const order = data.payload\n    if (order.rate > 0) this.book.add(order) // No cancels or market orders\n    if (order.qty > 0) this.addTableOrder(order) // No cancel orders\n    this.chart.draw()\n  }\n\n  /* showForm shows a modal form with a little animation. */\n  async showForm (form) {\n    this.currentForm = form\n    const page = this.page\n    Doc.hide(page.openForm, page.verifyForm, page.walletForm, page.cancelForm)\n    form.style.right = '10000px'\n    Doc.show(page.forms, form)\n    const shift = (page.forms.offsetWidth + form.offsetWidth) / 2\n    await Doc.animate(animationLength, progress => {\n      form.style.right = `${(1 - progress) * shift}px`\n    }, 'easeOutHard')\n    form.style.right = '0px'\n  }\n\n  /* showOpen shows the form to unlock a wallet. */\n  async showOpen (asset, f) {\n    const page = this.page\n    this.openAsset = asset\n    this.openFunc = f\n    page.openForm.setAsset(app.assets[asset.id])\n    this.showForm(page.openForm)\n    page.uwAppPass.focus()\n  }\n\n  /* showVerify shows the form to accept the currently parsed order information\n   * and confirm submission of the order to the dex.\n   */\n  showVerify () {\n    const page = this.page\n    const order = this.parseOrder()\n    const baseAsset = app.assets[order.base]\n    const quoteAsset = app.assets[order.quote]\n    const fromAsset = order.sell ? baseAsset : quoteAsset\n    const toAsset = order.sell ? quoteAsset : baseAsset\n    if (order.isLimit) {\n      Doc.show(page.verifyLimit)\n      Doc.hide(page.verifyMarket)\n      page.vRate.textContent = Doc.formatCoinValue(order.rate / 1e8)\n      page.vQty.textContent = Doc.formatCoinValue(order.qty / 1e8)\n      page.vBase.textContent = baseAsset.symbol.toUpperCase()\n      page.vQuote.textContent = quoteAsset.symbol.toUpperCase()\n      page.vSide.textContent = order.sell ? 'sell' : 'buy'\n      page.vTotal.textContent = Doc.formatCoinValue(order.rate / 1e8 * order.qty / 1e8)\n    } else {\n      Doc.hide(page.verifyLimit)\n      Doc.show(page.verifyMarket)\n      page.vSide.textContent = 'trade'\n      page.vQty.textContent = Doc.formatCoinValue(order.qty / 1e8)\n      page.vBase.textContent = fromAsset.symbol.toUpperCase()\n      const gap = this.midGap()\n      if (gap) {\n        const received = order.sell ? order.qty * gap : order.qty / gap\n        const lotSize = this.market.baseCfg.lotSize\n        const lots = order.sell ? order.qty / lotSize : received / lotSize\n        // TODO: Some kind of adjustment to align with lot sizes for market buy?\n        page.vmTotal.textContent = Doc.formatCoinValue(received / 1e8)\n        page.vmAsset.textContent = toAsset.symbol.toUpperCase()\n        page.vmLots.textContent = lots.toFixed(1)\n      } else {\n        Doc.hide(page.verifyMarket)\n      }\n    }\n    this.showForm(page.verifyForm)\n  }\n\n  async submitCancel () {\n    // this will be the page.cancelSubmit button (evt.currentTarget)\n    const page = this.page\n    const cancelData = this.cancelData\n    const order = cancelData.order\n    const req = {\n      orderID: order.id,\n      pw: page.cancelPass.value\n    }\n    page.cancelPass.value = ''\n    var res = await postJSON('/api/cancel', req)\n    app.loaded()\n    if (!app.checkResponse(res)) return\n    Doc.hide(cancelData.bttn, page.forms)\n    order.cancelling = true\n  }\n\n  /* showCancel shows a form to confirm submission of a cancel order. */\n  showCancel (row, orderID) {\n    const order = this.metaOrders[orderID].order\n    const page = this.page\n    const remaining = order.qty - order.filled\n    page.cancelRemain.textContent = Doc.formatCoinValue(remaining / 1e8)\n    const symbol = Order.isMarketBuy(order) ? this.market.quote.symbol : this.market.base.symbol\n    page.cancelUnit.textContent = symbol.toUpperCase()\n    this.showForm(page.cancelForm)\n    this.cancelData = {\n      bttn: Doc.tmplElement(row, 'cancelBttn'),\n      order: order\n    }\n  }\n\n  /* showCreate shows the new wallet creation form. */\n  showCreate (asset) {\n    const page = this.page\n    this.currentCreate = asset\n    this.walletForm.setAsset(asset)\n    this.showForm(page.walletForm)\n    this.walletForm.loadDefaults()\n  }\n\n  /*\n   * stepSubmit will examine the current state of wallets and step the user\n   * through the process of order submission.\n   * NOTE: I expect this process will be streamlined soon such that the wallets\n   * will attempt to be unlocked in the order submission process, negating the\n   * need to unlock ahead of time.\n   */\n  stepSubmit () {\n    const page = this.page\n    const market = this.market\n    Doc.hide(page.orderErr)\n    if (!this.validateOrder(this.parseOrder())) return\n    const baseWallet = app.walletMap[market.base.id]\n    const quoteWallet = app.walletMap[market.quote.id]\n    if (!baseWallet) {\n      page.orderErr.textContent = `No ${market.base.symbol} wallet`\n      Doc.show(page.orderErr)\n      return\n    }\n    if (!quoteWallet) {\n      page.orderErr.textContent = `No ${market.quote.symbol} wallet`\n      Doc.show(page.orderErr)\n      return\n    }\n    this.showVerify()\n  }\n\n  /*\n   * handleFeePayment is the handler for the 'feepayment' notification type.\n   * This is used to update the registration status of the current exchange.\n   */\n  handleFeePayment (note) {\n    const dexAddr = note.dex\n    if (dexAddr !== this.market.dex.host) return\n    // update local dex\n    this.market.dex = app.exchanges[dexAddr]\n    this.setRegistrationStatusVisibility()\n  }\n\n  /*\n   * handleOrderNote is the handler for the 'order'-type notification, which are\n   * used to update a user's order's status.\n   */\n  handleOrderNote (note) {\n    const order = note.order\n    const metaOrder = this.metaOrders[order.id]\n    if (!metaOrder) return\n    metaOrder.order = order\n    const bttn = Doc.tmplElement(metaOrder.row, 'cancelBttn')\n    if (note.subject === 'Missed cancel') {\n      Doc.show(bttn)\n    }\n    if (order.filled === order.qty) {\n      // Remove the cancellation button.\n      Doc.hide(bttn)\n    }\n    updateUserOrderRow(metaOrder.row, order)\n  }\n\n  /*\n   * handleEpochNote handles notifications signalling the start of a new epoch.\n   */\n  handleEpochNote (note) {\n    app.log('book', 'handleEpochNote:', note)\n    if (note.host !== this.market.dex.host || note.marketID !== this.market.sid) return\n    if (this.book) {\n      this.book.setEpoch(note.epoch)\n      this.chart.draw()\n    }\n    this.clearOrderTableEpochs(note.epoch)\n    for (const metaOrder of Object.values(this.metaOrders)) {\n      const order = metaOrder.order\n      const alreadyMatched = note.epoch > order.epoch\n      const statusTD = Doc.tmplElement(metaOrder.row, 'status')\n      switch (true) {\n        case order.type === Order.Limit && order.status === Order.StatusEpoch && alreadyMatched:\n          statusTD.textContent = order.tif === Order.ImmediateTiF ? 'executed' : 'booked'\n          order.status = order.tif === Order.ImmediateTiF ? Order.StatusExecuted : Order.StatusBooked\n          break\n        case order.type === Order.Market && order.status === Order.StatusEpoch:\n          // Technically don't know if this should be 'executed' or 'settling'.\n          statusTD.textContent = 'executed'\n          order.status = Order.StatusExecuted\n          break\n      }\n    }\n  }\n\n  // handleBalanceNote handles notifications updating a wallet's balance.\n  handleBalanceNote (note) {\n    this.balanceWgt.updateAsset(note.assetID)\n  }\n\n  /*\n   * submitOrder is attached to the affirmative button on the order validation\n   * form. Clicking the button is the last step in the order submission process.\n   */\n  async submitOrder () {\n    const page = this.page\n    const market = this.market\n    Doc.hide(page.forms)\n    const order = this.parseOrder()\n    const pw = page.vPass.value\n    page.vPass.value = ''\n    const req = {\n      order: order,\n      pw: pw\n    }\n    if (!this.validateOrder(order)) return\n    var res = await postJSON('/api/trade', req)\n    app.loaded()\n    if (!app.checkResponse(res)) return\n    // If the wallets are not open locally, they must have been opened during\n    // ordering. Grab updated info.\n    const baseWallet = app.walletMap[market.base.id]\n    const quoteWallet = app.walletMap[market.quote.id]\n    await app.fetchUser()\n    if (!baseWallet.open || !quoteWallet.open) {\n      this.balanceWgt.updateAsset(market.base.id)\n      this.balanceWgt.updateAsset(market.quote.id)\n    }\n    this.refreshActiveOrders()\n  }\n\n  /*\n   * createWallet is attached to successful submission of the wallet creation\n   * form. createWallet is only called once the form is submitted and a success\n   * response is received from the client.\n   */\n  async createWallet () {\n    const user = await app.fetchUser()\n    const asset = user.assets[this.currentCreate.id]\n    Doc.hide(this.page.forms)\n    this.balanceWgt.updateAsset(asset.id)\n    this.resolveOrderFormVisibility()\n  }\n\n  /*\n   * walletUnlocked is attached to successful submission of the wallet unlock\n   * form. walletUnlocked is only called once the form is submitted and a\n   * success response is received from the client.\n   */\n  async walletUnlocked () {\n    Doc.hide(this.page.forms)\n    await app.fetchUser()\n    this.balanceWgt.updateAsset(this.openAsset.id)\n  }\n\n  /* lotChanged is attached to the keyup and change events of the lots input. */\n  lotChanged () {\n    const page = this.page\n    const lots = parseInt(page.lotField.value)\n    if (lots <= 0) {\n      page.lotField.value = 0\n      page.qtyField.value = ''\n      return\n    }\n    const lotSize = this.market.baseCfg.lotSize\n    page.lotField.value = lots\n    page.qtyField.value = (lots * lotSize / 1e8)\n    this.previewOrder(true)\n  }\n\n  /*\n   * quantityChanged is attached to the keyup and change events of the quantity\n   * input.\n   */\n  quantityChanged (finalize) {\n    const page = this.page\n    const order = this.parseOrder()\n    if (order.qty <= 0) {\n      page.lotField.value = 0\n      page.qtyField.value = ''\n      return\n    }\n    const lotSize = this.market.baseCfg.lotSize\n    const lots = Math.floor(order.qty / lotSize)\n    const adjusted = lots * lotSize\n    page.lotField.value = lots\n    if (!order.isLimit && !order.sell) return\n    if (finalize) page.qtyField.value = (adjusted / 1e8)\n    this.previewOrder(true)\n  }\n\n  /*\n   * marketBuyChanged is attached to the keyup and change events of the quantity\n   * input for the market-buy form.\n   */\n  marketBuyChanged () {\n    const page = this.page\n    const qty = asAtoms(page.mktBuyField.value)\n    const gap = this.midGap()\n    if (!gap || !qty) {\n      page.mktBuyLots.textContent = '0'\n      page.mktBuyScore.textContent = '0'\n      return\n    }\n    const lotSize = this.market.baseCfg.lotSize\n    const received = qty / gap\n    page.mktBuyLots.textContent = (received / lotSize).toFixed(1)\n    page.mktBuyScore.textContent = Doc.formatCoinValue(received / 1e8)\n  }\n\n  /*\n   * rateFieldChanged is attached to the keyup and change events of the rate\n   * input.\n   */\n  rateFieldChanged () {\n    const order = this.parseOrder()\n    if (order.rate <= 0) {\n      this.page.rateField.value = 0\n      return\n    }\n    // Truncate to rate step. If it is a market buy order, do not adjust.\n    const rateStep = this.market.quoteCfg.rateStep\n    const adjusted = order.rate - (order.rate % rateStep)\n    this.page.rateField.value = (adjusted / 1e8)\n    this.previewOrder(true)\n  }\n\n  /* loadTable reloads the table from the current order book information. */\n  loadTable () {\n    this.loadTableSide(true)\n    this.loadTableSide(false)\n  }\n\n  /* loadTables loads the order book side into its table. */\n  loadTableSide (sell) {\n    const bookSide = sell ? this.book.sells : this.book.buys\n    const tbody = sell ? this.page.sellRows : this.page.buyRows\n    const cssClass = sell ? 'sellcolor' : 'buycolor'\n    Doc.empty(tbody)\n    if (!bookSide || !bookSide.length) return\n    bookSide.forEach(order => { tbody.appendChild(this.orderTableRow(order, cssClass)) })\n  }\n\n  /* addTableOrder adds a single order to the appropriate table. */\n  addTableOrder (order) {\n    const tbody = order.sell ? this.page.sellRows : this.page.buyRows\n    const cssClass = order.sell ? 'sellcolor' : 'buycolor'\n    var row = tbody.firstChild\n    // Handle market order differently.\n    if (order.rate === 0) {\n      // This is a market order.\n      if (!row || row.order.rate !== 0) {\n        row = this.orderTableRow(order, cssClass)\n        tbody.insertBefore(row, tbody.firstChild)\n      }\n      row.addQty(order.qty)\n      return\n    }\n    // Must be a limit order. Sort by rate. Skip the market order row.\n    if (row && row.order.rate === 0) row = row.nextSibling\n    const tr = this.orderTableRow(order, cssClass)\n    while (row) {\n      if ((order.rate < row.order.rate) === order.sell) {\n        tbody.insertBefore(tr, row)\n        return\n      }\n      row = row.nextSibling\n    }\n    tbody.appendChild(tr)\n  }\n\n  /* removeTableOrder removes a single order from its table. */\n  removeTableOrder (order) {\n    const token = order.token\n    for (const tbody of [this.page.sellRows, this.page.buyRows]) {\n      for (const tr of Array.from(tbody.children)) {\n        if (tr.order.token === token) {\n          tr.remove()\n          return\n        }\n      }\n    }\n  }\n\n  /* updateTableOrder looks for the order in the table and updates the qty */\n  updateTableOrder (update) {\n    const token = update.token\n    for (const tbody of [this.page.sellRows, this.page.buyRows]) {\n      for (const tr of Array.from(tbody.children)) {\n        if (tr.order.token === token) {\n          const td = tr.querySelector('[data-type=qty]')\n          td.innerText = update.qty.toFixed(8)\n          return\n        }\n      }\n    }\n  }\n\n  /*\n   * clearOrderTableEpochs removes immediate-tif orders whose epoch has expired.\n   */\n  clearOrderTableEpochs (newEpoch) {\n    this.clearOrderTableEpochSide(this.page.sellRows)\n    this.clearOrderTableEpochSide(this.page.buyRows)\n  }\n\n  /*\n   * clearOrderTableEpochs removes immediate-tif orders whose epoch has expired\n   * for a single side.\n   */\n  clearOrderTableEpochSide (tbody, newEpoch) {\n    for (const tr of Array.from(tbody.children)) {\n      if (tr.order.epoch && tr.order.epoch !== newEpoch) tr.remove()\n    }\n  }\n\n  /*\n   * orderTableRow creates a new <tr> element to insert into an order table.\n   */\n  orderTableRow (order, cssClass) {\n    const tr = this.page.rowTemplate.cloneNode(true)\n    tr.qty = order.qty\n    tr.order = order\n    const rate = order.rate\n    bind(tr, 'click', () => {\n      this.reportPrice(rate)\n    })\n    var qtyTD\n    tr.querySelectorAll('td').forEach(td => {\n      switch (td.dataset.type) {\n        case 'qty':\n          qtyTD = td\n          td.innerText = order.qty.toFixed(8)\n          break\n        case 'rate':\n          if (order.rate === 0) {\n            td.innerText = 'market'\n          } else {\n            td.innerText = order.rate.toFixed(8)\n            td.classList.add(cssClass)\n          }\n          break\n        case 'epoch':\n          if (order.epoch) td.appendChild(check.cloneNode())\n          break\n      }\n    })\n    tr.addQty = (qty) => {\n      tr.qty += qty\n      qtyTD.innerText = tr.qty.toFixed(8)\n    }\n    return tr\n  }\n\n  /*\n   * filterMarkets sets the display of markets in the markets list based on the\n   * value of the search input.\n   */\n  filterMarkets () {\n    const filterTxt = this.page.marketSearch.value\n    const filter = filterTxt ? mkt => mkt.name.includes(filterTxt) : () => true\n    this.marketList.setFilter(filter)\n  }\n\n  /*\n   * unload is called by the Application when the user navigates away from\n   * the /markets page.\n   */\n  unload () {\n    ws.request(unmarketRoute, {})\n    ws.deregisterRoute(bookRoute)\n    ws.deregisterRoute(bookUpdateRoute)\n    ws.deregisterRoute(epochOrderRoute)\n    ws.deregisterRoute(bookOrderRoute)\n    ws.deregisterRoute(unbookOrderRoute)\n    this.chart.unattach()\n    clearInterval(this.secondTicker)\n  }\n}\n\n/*\n *  MarketList represents the list of exchanges and markets on the left side of\n * markets view. The MarketList provides utilities for adjusting the visibility\n * and sort order of markets.\n */\nclass MarketList {\n  constructor (div) {\n    this.selected = null\n    const xcTmpl = Doc.tmplElement(div, 'xc')\n    cleanTemplates(xcTmpl)\n    this.xcSections = []\n    for (const dex of Object.values(app.user.exchanges)) {\n      this.xcSections.push(new ExchangeSection(xcTmpl, dex))\n    }\n    // Initial sort is alphabetical.\n    for (const xc of this.sortedSections()) {\n      div.appendChild(xc.box)\n    }\n  }\n\n  /*\n   * sortedSections returns a list of ExchangeSection sorted alphabetically by\n   * host.\n   */\n  sortedSections () {\n    return [...this.xcSections].sort((a, b) => a.host < b.host ? -1 : 1)\n  }\n\n  /*\n   * xcSection is a getter for the ExchangeSection for a specified host.\n   */\n  xcSection (host) {\n    for (const xc of this.xcSections) {\n      if (xc.host === host) return xc\n    }\n    return null\n  }\n\n  /* exists will be true if the specified market exists. */\n  exists (host, baseID, quoteID) {\n    const xc = this.xcSection(host)\n    if (!xc) return false\n    for (const mkt of xc.marketRows) {\n      if (mkt.baseID === baseID && mkt.quoteID === quoteID) return true\n    }\n    return false\n  }\n\n  /* first gets the first market from the first exchange, alphabetically. */\n  first () {\n    const firstXC = this.sortedSections()[0]\n    const firstMkt = firstXC.first()\n    return makeMarket(firstXC.host, firstMkt.baseID, firstMkt.quoteID)\n  }\n\n  /* select sets the specified market as selected. */\n  select (host, baseID, quoteID) {\n    if (this.selected) this.selected.row.classList.remove('selected')\n    this.selected = this.xcSection(host).marketRow(baseID, quoteID)\n    this.selected.row.classList.add('selected')\n  }\n\n  /* setConnectionStatus sets the visibility of the disconnected icon based\n   * on the core.ConnEventNote.\n   */\n  setConnectionStatus (note) {\n    this.xcSection(note.host).setConnected(note.connected)\n  }\n\n  /*\n   * setFilter sets the visibility of market rows based on the provided filter.\n   */\n  setFilter (filter) {\n    for (const xc of this.xcSections) {\n      xc.setFilter(filter)\n    }\n  }\n}\n\n/*\n * ExchangeSection is a top level section of the MarketList.\n */\nclass ExchangeSection {\n  constructor (tmpl, dex) {\n    this.dex = dex\n    this.host = dex.host\n    const box = tmpl.cloneNode(true)\n    this.box = box\n    const header = Doc.tmplElement(box, 'header')\n    this.disconnectedIcon = Doc.tmplElement(header, 'disconnected')\n    if (dex.connected) Doc.hide(this.disconnectedIcon)\n    header.append(dex.host)\n\n    this.marketRows = []\n    this.rows = Doc.tmplElement(box, 'mkts')\n    const rowTmpl = Doc.tmplElement(this.rows, 'mktrow')\n    this.rows.removeChild(rowTmpl)\n    for (const mkt of Object.values(dex.markets)) {\n      this.marketRows.push(new MarketRow(rowTmpl, mkt))\n    }\n\n    for (const market of this.sortedMarkets()) {\n      this.rows.appendChild(market.row)\n    }\n  }\n\n  /*\n   * sortedMarkets is the list of MarketRow sorted alphabetically by the base\n   * symbol first, quote symbol second.\n   */\n  sortedMarkets () {\n    return [...this.marketRows].sort((a, b) => a.name < b.name ? -1 : 1)\n  }\n\n  /*\n   * first returns the first market in the alphabetically-sorted list of\n   * markets.\n   */\n  first () {\n    return this.sortedMarkets()[0]\n  }\n\n  /*\n   * marketRow gets the MarketRow for the specified market.\n   */\n  marketRow (baseID, quoteID) {\n    for (const mkt of this.marketRows) {\n      if (mkt.baseID === baseID && mkt.quoteID === quoteID) return mkt\n    }\n    return null\n  }\n\n  /* setConnected sets the visiblity of the disconnected icon. */\n  setConnected (isConnected) {\n    if (isConnected) Doc.hide(this.disconnectedIcon)\n    else Doc.show(this.disconnectedIcon)\n  }\n\n  /*\n   * setFilter sets the visibility of market rows based on the provided filter.\n   */\n  setFilter (filter) {\n    for (const mkt of this.marketRows) {\n      if (filter(mkt)) Doc.show(mkt.row)\n      else Doc.hide(mkt.row)\n    }\n  }\n}\n\n/*\n * MarketRow represents one row in the MarketList. A MarketRow is a subsection\n * of the ExchangeSection.\n */\nclass MarketRow {\n  constructor (tmpl, mkt) {\n    this.name = mkt.name\n    this.baseID = mkt.baseid\n    this.quoteID = mkt.quoteid\n    const row = tmpl.cloneNode(true)\n    this.row = row\n    Doc.tmplElement(row, 'baseicon').src = Doc.logoPath(mkt.basesymbol)\n    Doc.tmplElement(row, 'quoteicon').src = Doc.logoPath(mkt.quotesymbol)\n    row.append(`${mkt.basesymbol.toUpperCase()}-${mkt.quotesymbol.toUpperCase()}`)\n  }\n}\n\n/*\n * BalanceWidget is a display of balance information. Because the wallet can be\n * in any number of states, and because every exchange has different funding\n * coin confirmation requirements, the BalanceWidget displays a number of state\n * indicators and buttons, as well as tabulated balance data with rows for\n * locked and immature balance.\n */\nclass BalanceWidget {\n  constructor (table) {\n    const els = Doc.parsePage(table, [\n      'baseAvail', 'quoteAvail', 'baseNewWalletRow', 'quoteNewWalletRow',\n      'baseNewButton', 'quoteNewButton', 'baseLocked', 'quoteLocked',\n      'baseImmature', 'quoteImmature', 'baseImg', 'quoteImg',\n      'quoteUnsupported', 'baseUnsupported', 'baseExpired', 'quoteExpired',\n      'baseConnect', 'quoteConnect', 'baseSpinner', 'quoteSpinner',\n      'baseWalletState', 'quoteWalletState'\n    ])\n    this.base = {\n      id: 0,\n      cfg: null,\n      logo: els.baseImg,\n      avail: els.baseAvail,\n      newWalletRow: els.baseNewWalletRow,\n      newWalletBttn: els.baseNewButton,\n      locked: els.baseLocked,\n      immature: els.baseImmature,\n      unsupported: els.baseUnsupported,\n      expired: els.baseExpired,\n      connect: els.baseConnect,\n      spinner: els.baseSpinner,\n      iconBox: els.baseWalletState,\n      stateIcons: new WalletIcons(els.baseWalletState)\n    }\n    this.quote = {\n      id: 0,\n      cfg: null,\n      logo: els.quoteImg,\n      avail: els.quoteAvail,\n      newWalletRow: els.quoteNewWalletRow,\n      newWalletBttn: els.quoteNewButton,\n      locked: els.quoteLocked,\n      immature: els.quoteImmature,\n      unsupported: els.quoteUnsupported,\n      expired: els.quoteExpired,\n      connect: els.quoteConnect,\n      spinner: els.quoteSpinner,\n      iconBox: els.quoteWalletState,\n      stateIcons: new WalletIcons(els.quoteWalletState)\n    }\n    this.dex = null\n  }\n\n  /*\n   * setWallet sets the balance widget to display data for specified market.\n   */\n  setWallets (host, baseID, quoteID) {\n    this.dex = app.user.exchanges[host]\n    this.base.id = baseID\n    this.base.cfg = this.dex.assets[baseID]\n    this.quote.id = quoteID\n    this.quote.cfg = this.dex.assets[quoteID]\n    this.updateWallet(this.base)\n    this.updateWallet(this.quote)\n  }\n\n  /*\n   * updateWallet updates the displayed wallet information based on the\n   * core.Wallet state.\n   */\n  updateWallet (side) {\n    const asset = app.assets[side.id]\n    // Just hide everything to start.\n    Doc.hide(\n      side.newWalletRow, side.avail, side.immature, side.locked,\n      side.expired, side.unsupported, side.connect, side.spinner, side.iconBox\n    )\n    side.logo.src = Doc.logoPath(side.cfg.symbol)\n    // Handle an unsupported asset.\n    if (!asset) {\n      Doc.show(side.unsupported)\n      return\n    }\n    Doc.show(side.iconBox)\n    const wallet = asset.wallet\n    side.stateIcons.readWallet(wallet)\n    // Handle no wallet configured.\n    if (!wallet) {\n      Doc.show(side.newWalletRow)\n      return\n    }\n    const bal = wallet.balance\n    // Handle not connected and no balance known for the DEX.\n    if (!bal && !wallet.running) {\n      Doc.show(side.connect)\n      return\n    }\n    // If there is no balance, but the wallet is connected, show the loading\n    // icon while we fetch an update.\n    if (!bal) {\n      this.fetchBalance(side.id)\n      Doc.show(side.spinner)\n      return\n    }\n    // We have a wallet and a DEX-specific balance. Set all of the fields.\n    Doc.show(side.avail, side.immature, side.locked)\n    side.avail.textContent = Doc.formatCoinValue(bal.available / 1e8)\n    side.locked.textContent = Doc.formatCoinValue((bal.locked + bal.contractlocked) / 1e8)\n    side.immature.textContent = Doc.formatCoinValue(bal.immature / 1e8)\n    // If the current balance update time is older than an hour, show the\n    // expiration icon. Request a balance update, if possible.\n    const expired = new Date().getTime() - new Date(bal.stamp).getTime() > anHour\n    if (expired) {\n      Doc.show(side.expired)\n      if (wallet.running) this.fetchBalance(side.id)\n    } else Doc.hide(side.expired)\n  }\n\n  /*\n   * updateAsset updates the info for one side of the existing market. If the\n   * specified asset ID is not one of the current market's base or quote assets,\n   * it is silently ignored.\n   */\n  updateAsset (assetID) {\n    if (assetID === this.base.id) this.updateWallet(this.base)\n    else if (assetID === this.quote.id) this.updateWallet(this.quote)\n  }\n\n  /*\n   * fetchBalance requests a balance update from the API. The API response does\n   * include the balance, but we're ignoring it, since a balance update\n   * notification is received via the Application anyways.\n   */\n  async fetchBalance (assetID) {\n    const res = await postJSON('/api/balance', { assetID: assetID })\n    if (!app.checkResponse(res)) {\n      console.error('failed to fetch balance for asset ID', assetID)\n    }\n  }\n}\n\n/* makeMarket creates a market object that specifies basic market details. */\nfunction makeMarket (host, base, quote) {\n  return {\n    host: host,\n    base: base,\n    quote: quote\n  }\n}\n\n/* marketID creates a DEX-compatible market name from the ticker symbols. */\nexport function marketID (b, q) { return `${b}_${q}` }\n\n/* asAtoms converts the float string to atoms. */\nfunction asAtoms (s) {\n  return Math.round(parseFloat(s) * 1e8)\n}\n\n/* swapBttns changes the 'selected' class of the buttons. */\nfunction swapBttns (before, now) {\n  before.classList.remove('selected')\n  now.classList.add('selected')\n}\n\n/*\n * updateDataCol sets the textContent of descendent template element.\n */\nfunction updateDataCol (tr, col, s) {\n  Doc.tmplElement(tr, col).textContent = s\n}\n\n/*\n * updateUserOrderRow sets the td contents of the user's order table row.\n */\nfunction updateUserOrderRow (tr, ord) {\n  updateDataCol(tr, 'type', Order.typeString(ord))\n  updateDataCol(tr, 'side', Order.sellString(ord))\n  updateDataCol(tr, 'age', Doc.timeSince(ord.stamp))\n  updateDataCol(tr, 'rate', Doc.formatCoinValue(ord.rate / 1e8))\n  updateDataCol(tr, 'qty', Doc.formatCoinValue(ord.qty / 1e8))\n  updateDataCol(tr, 'filled', `${(ord.filled / ord.qty * 100).toFixed(1)}%`)\n  updateDataCol(tr, 'settled', `${(Order.settled(ord) / ord.qty * 100).toFixed(1)}%`)\n  updateDataCol(tr, 'status', Order.statusString(ord))\n}\n\n/*\n * cleanTemplates removes the elements from the DOM and deletes the id\n * attribute.\n */\nfunction cleanTemplates (...tmpls) {\n  tmpls.forEach(tmpl => {\n    tmpl.remove()\n    tmpl.removeAttribute('id')\n  })\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport * as Order from './orderutil'\nimport { postJSON } from './http'\n\nvar app\n\nconst orderBatchSize = 50\n\nexport default class OrdersPage extends BasePage {\n  constructor (application, main) {\n    super()\n    app = application\n    this.main = main\n    // if offset is '', there are no more orders available to auto-load for\n    // never-ending scrolling.\n    this.offset = ''\n    this.loading = false\n    const page = this.page = Doc.parsePage(main, [\n      'rowTmpl', 'tableBody', 'hostFilter', 'assetFilter', 'statusFilter',\n      'orderLoader', 'ordersTable'\n    ])\n    this.orderTmpl = page.rowTmpl\n    this.orderTmpl.remove()\n\n    // filterState will store arrays of strings. The assets and statuses\n    // sub-filters will need to be converted to ints for JSON encoding.\n    const filterState = this.filterState = {\n      hosts: [],\n      assets: [],\n      statuses: []\n    }\n\n    const search = new URLSearchParams(window.location.search)\n    const readFilter = (form, filterKey) => {\n      const v = search.get(filterKey)\n      if (!v || v.length === 0) return\n      var subFilter = v.split(',')\n      if (v) {\n        filterState[filterKey] = subFilter\n      }\n      form.querySelectorAll('input').forEach(bttn => {\n        if (subFilter.indexOf(bttn.value) >= 0) bttn.checked = true\n      })\n    }\n    readFilter(page.hostFilter, 'hosts')\n    readFilter(page.assetFilter, 'assets')\n    readFilter(page.statusFilter, 'statuses')\n\n    const applyButtons = []\n    const monitorFilter = (form, filterKey) => {\n      const applyBttn = form.querySelector('.apply-bttn')\n      applyButtons.push(applyBttn)\n      Doc.bind(applyBttn, 'click', () => {\n        this.submitFilter()\n        applyButtons.forEach(bttn => Doc.hide(bttn))\n      })\n      form.querySelectorAll('input').forEach(bttn => {\n        Doc.bind(bttn, 'change', () => {\n          const subFilter = parseSubFilter(form)\n          if (compareSubFilter(subFilter, filterState[filterKey])) {\n            // Same as currently loaded. Hide the apply button.\n            Doc.hide(applyBttn)\n          } else {\n            Doc.show(applyBttn)\n          }\n        })\n      })\n    }\n\n    monitorFilter(page.hostFilter, 'hosts')\n    monitorFilter(page.assetFilter, 'assets')\n    monitorFilter(page.statusFilter, 'statuses')\n\n    Doc.bind(this.main, 'scroll', () => {\n      if (this.loading) return\n      const belowBottom = page.ordersTable.offsetHeight - this.main.offsetHeight - this.main.scrollTop\n      if (belowBottom < 0) {\n        this.nextPage()\n      }\n    })\n\n    this.submitFilter()\n  }\n\n  /* setOrders empties the order table and appends the specified orders. */\n  setOrders (orders) {\n    Doc.empty(this.page.tableBody)\n    this.appendOrders(orders)\n  }\n\n  /* appendOrders appends orders to the orders table. */\n  appendOrders (orders) {\n    const tbody = this.page.tableBody\n    for (const ord of orders) {\n      const tr = this.orderTmpl.cloneNode(true)\n      const set = (tmplID, s) => { Doc.tmplElement(tr, tmplID).textContent = s }\n      const mktID = `${ord.baseSymbol.toUpperCase()}-${ord.quoteSymbol.toUpperCase()}`\n      set('host', `${mktID} @ ${ord.host}`)\n      var from, to, fromQty\n      var toQty = ''\n      if (ord.sell) {\n        [from, to] = [ord.baseSymbol, ord.quoteSymbol]\n        fromQty = Doc.formatCoinValue(ord.qty / 1e8)\n        if (ord.type === Order.Limit) {\n          toQty = Doc.formatCoinValue(ord.qty / 1e8 * ord.rate / 1e8)\n        }\n      } else {\n        [from, to] = [ord.quoteSymbol, ord.baseSymbol]\n        if (ord.type === Order.Market) {\n          fromQty = Doc.formatCoinValue(ord.qty / 1e8)\n        } else {\n          fromQty = Doc.formatCoinValue(ord.qty / 1e8 * ord.rate / 1e8)\n          toQty = Doc.formatCoinValue(ord.qty / 1e8)\n        }\n      }\n\n      set('fromQty', fromQty)\n      Doc.tmplElement(tr, 'fromLogo').src = Doc.logoPath(from)\n      set('fromSymbol', from)\n      set('toQty', toQty)\n      Doc.tmplElement(tr, 'toLogo').src = Doc.logoPath(to)\n      set('toSymbol', to)\n      set('type', `${Order.typeString(ord)} ${Order.sellString(ord)}`)\n      set('rate', Order.rateString(ord))\n      set('status', Order.statusString(ord))\n      set('filled', `${(ord.filled / ord.qty * 100).toFixed(1)}%`)\n      set('settled', `${(Order.settled(ord) / ord.qty * 100).toFixed(1)}%`)\n      const dateTime = new Date(ord.stamp).toLocaleString()\n      set('time', `${Doc.timeSince(ord.stamp)} ago, ${dateTime}`)\n      const link = Doc.tmplElement(tr, 'link')\n      link.href = `order/${ord.id}`\n      app.bindInternalNavigation(tr)\n      tbody.appendChild(tr)\n    }\n    if (orders.length === orderBatchSize) {\n      this.offset = orders[orders.length - 1].id\n    } else {\n      this.offset = ''\n    }\n  }\n\n  /* submitFilter submits the current filter and reloads the order table. */\n  async submitFilter () {\n    const page = this.page\n    this.offset = ''\n    const filterState = this.filterState\n    filterState.hosts = parseSubFilter(page.hostFilter)\n    filterState.assets = parseSubFilter(page.assetFilter)\n    filterState.statuses = parseSubFilter(page.statusFilter)\n\n    const url = new URL(window.location)\n    const search = new URLSearchParams(url.search)\n    search.delete('offset')\n\n    const setQuery = (k) => {\n      const subFilter = filterState[k]\n      if (subFilter.length === 0) {\n        search.delete(k)\n      } else {\n        search.set(k, subFilter.join(','))\n      }\n    }\n    setQuery('hosts')\n    setQuery('assets')\n    setQuery('statuses')\n\n    url.search = search.toString()\n    window.history.replaceState({ page: 'orders' }, '', url)\n\n    this.setOrders(await this.fetchOrders())\n  }\n\n  /* fetchOrders fetches orders using the current filter. */\n  async fetchOrders () {\n    app.loading(this.main)\n    const res = await postJSON('/api/orders', this.currentFilter())\n    app.loaded()\n    return res.orders\n  }\n\n  /*\n   * currentFilter converts the local filter type (which is all strings) to the\n   * server's filter type.\n   */\n  currentFilter () {\n    const filterState = this.filterState\n    return {\n      hosts: filterState.hosts,\n      assets: filterState.assets.map(s => parseInt(s)),\n      statuses: filterState.statuses.map(s => parseInt(s)),\n      n: orderBatchSize,\n      offset: this.offset\n    }\n  }\n\n  /*\n   * nextPage resubmits the filter with the offset set to the last loaded order.\n   */\n  async nextPage () {\n    if (this.offset === '' || this.loading) return\n    this.loading = true\n    Doc.show(this.page.orderLoader)\n    const orders = await this.fetchOrders()\n    this.loading = false\n    Doc.hide(this.page.orderLoader)\n    this.appendOrders(orders)\n  }\n}\n\n/*\n * parseSubFilter parses a bool-map from the checkbox inputs in the specified\n * ancestor element.\n */\nfunction parseSubFilter (form) {\n  const entries = []\n  form.querySelectorAll('input').forEach(box => {\n    if (box.checked) entries.push(box.value)\n  })\n  return entries\n}\n\n/* compareSubFilter compares the two filter arrays for unordered equivalence. */\nfunction compareSubFilter (filter1, filter2) {\n  if (filter1.length !== filter2.length) return false\n  for (const entry of filter1) {\n    if (filter2.indexOf(entry) === -1) return false\n  }\n  return true\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport * as Order from './orderutil'\nimport { bind as bindForm } from './forms'\nimport { postJSON } from './http'\n\nconst Mainnet = 0\nconst Testnet = 1\n// const Regtest = 3\n\nconst animationLength = 500\n\nvar app\n\nexport default class OrderPage extends BasePage {\n  constructor (application, main) {\n    super()\n    app = application\n    const stampers = main.querySelectorAll('[data-stamp]')\n    const net = parseInt(main.dataset.net)\n    // Find the order\n    this.orderID = main.dataset.oid\n    this.order = app.order(this.orderID)\n    // app.order can only access active orders. If the order is not active,\n    // we'll need to get the data from the database.\n    if (!this.order) this.fetchOrder()\n    const page = this.page = Doc.parsePage(main, [\n      'cancelBttn', 'cancelRemain', 'cancelUnit', 'cancelForm', 'forms',\n      'cancelSubmit', 'cancelPass', 'status'\n    ])\n\n    if (page.cancelBttn) {\n      Doc.bind(page.cancelBttn, 'click', () => {\n        this.showForm(page.cancelForm)\n      })\n    }\n\n    // If the user clicks outside of a form, it should close the page overlay.\n    Doc.bind(page.forms, 'mousedown', e => {\n      if (!Doc.mouseInElement(e, this.currentForm)) {\n        Doc.hide(page.forms)\n        page.cancelPass.value = ''\n      }\n    })\n\n    // Cancel order form\n    bindForm(page.cancelForm, page.cancelSubmit, async () => { this.submitCancel() })\n\n    main.querySelectorAll('[data-explorer-id]').forEach(link => {\n      const assetExplorer = CoinExplorers[parseInt(link.dataset.explorerId)]\n      if (!assetExplorer) return\n      const formatter = assetExplorer[net]\n      if (!formatter) return\n      link.classList.remove('plainlink')\n      link.classList.add('subtlelink')\n      link.href = formatter(link.dataset.explorerCoin)\n    })\n\n    const setStamp = () => {\n      for (const span of stampers) {\n        span.textContent = Doc.timeSince(parseInt(span.dataset.stamp))\n      }\n    }\n    setStamp()\n\n    this.secondTicker = setInterval(() => {\n      setStamp()\n    }, 10000) // update every 10 seconds\n\n    this.notifiers = {\n      order: note => { this.handleOrderNote(note) }\n    }\n  }\n\n  unload () {\n    clearInterval(this.secondTicker)\n  }\n\n  /* fetchOrder fetches the order from the client. */\n  async fetchOrder () {\n    var res = await postJSON('/api/order', this.orderID)\n    if (!app.checkResponse(res)) return\n    this.order = res.order\n  }\n\n  /* showCancel shows a form to confirm submission of a cancel order. */\n  showCancel () {\n    const order = this.order\n    const page = this.page\n    const remaining = order.qty - order.filled\n    page.cancelRemain.textContent = Doc.formatCoinValue(remaining / 1e8)\n    const symbol = Order.isMarketBuy(order) ? this.market.quote.symbol : this.market.base.symbol\n    page.cancelUnit.textContent = symbol.toUpperCase()\n    this.showForm(page.cancelForm)\n  }\n\n  /* showForm shows a modal form with a little animation. */\n  async showForm (form) {\n    this.currentForm = form\n    const page = this.page\n    Doc.hide(page.cancelForm)\n    form.style.right = '10000px'\n    Doc.show(page.forms, form)\n    const shift = (page.forms.offsetWidth + form.offsetWidth) / 2\n    await Doc.animate(animationLength, progress => {\n      form.style.right = `${(1 - progress) * shift}px`\n    }, 'easeOutHard')\n    form.style.right = '0px'\n  }\n\n  /* submitCancel submits a cancellation for the order. */\n  async submitCancel () {\n    // this will be the page.cancelSubmit button (evt.currentTarget)\n    const page = this.page\n    const order = this.order\n    const req = {\n      orderID: order.id,\n      pw: page.cancelPass.value\n    }\n    page.cancelPass.value = ''\n    app.loading(page.cancelForm)\n    var res = await postJSON('/api/cancel', req)\n    app.loaded()\n    if (!app.checkResponse(res)) return\n    page.status.textContent = 'cancelling'\n    Doc.hide(page.forms)\n    order.cancelling = true\n  }\n\n  /*\n   * handleOrderNote is the handler for the 'order'-type notification, which are\n   * used to update an order's status.\n   */\n  handleOrderNote (note) {\n    const order = note.order\n    const bttn = this.page.cancelBttn\n    if (bttn && order.id === this.orderID) {\n      if (bttn && order.status > Order.StatusBooked) Doc.hide(bttn)\n      this.page.status.textContent = Order.statusString(order)\n    }\n  }\n}\n\nconst CoinExplorers = {\n  42: { // dcr\n    [Mainnet]: cid => {\n      const [txid, vout] = cid.split(':')\n      return `https://explorer.dcrdata.org/tx/${txid}/out/${vout}`\n    },\n    [Testnet]: cid => {\n      const [txid, vout] = cid.split(':')\n      return `https://testnet.dcrdata.org/tx/${txid}/out/${vout}`\n    }\n  },\n  0: { // btc\n    [Mainnet]: cid => `https://bitaps.com/${cid.split(':')[0]}`,\n    [Testnet]: cid => `https://tbtc.bitaps.com/${cid.split(':')[0]}`\n  },\n  2: { // ltc\n    [Mainnet]: cid => `https://ltc.bitaps.com/${cid.split(':')[0]}`,\n    [Testnet]: cid => `https://tltc.bitaps.com/${cid.split(':')[0]}`\n  }\n}\n","import Doc from './doc'\nimport State from './state'\nimport RegistrationPage from './register'\nimport LoginPage from './login'\nimport WalletsPage from './wallets'\nimport SettingsPage from './settings'\nimport MarketsPage from './markets'\nimport OrdersPage from './orders'\nimport OrderPage from './order'\nimport { getJSON, postJSON } from './http'\nimport commitHash from 'commitHash'\nimport * as ntfn from './notifications'\nimport ws from './ws'\n\nconst idel = Doc.idel // = element by id\nconst bind = Doc.bind\nconst unbind = Doc.unbind\n\nconst notificationRoute = 'notify'\nconst loggersKey = 'loggers'\nconst recordersKey = 'recorders'\nconst noteCacheSize = 100\n\n/* constructors is a map to page constructors. */\nconst constructors = {\n  login: LoginPage,\n  register: RegistrationPage,\n  markets: MarketsPage,\n  wallets: WalletsPage,\n  settings: SettingsPage,\n  orders: OrdersPage,\n  order: OrderPage\n}\n\n// Application is the main javascript web application for the Decred DEX client.\nexport default class Application {\n  constructor () {\n    this.notes = []\n    this.pokes = []\n    this.user = {\n      accounts: {},\n      wallets: {}\n    }\n    this.commitHash = commitHash\n    this.showPopups = State.getCookie('popups') === '1'\n    console.log('Decred DEX Client App, Build', this.commitHash.substring(0, 7))\n\n    // Loggers can be enabled by setting a truthy value to the loggerID using\n    // enableLogger. Settings are stored across sessions. See docstring for the\n    // log method for more info.\n    this.loggers = State.fetch(loggersKey) || {}\n    window.enableLogger = (loggerID, state) => {\n      if (state) this.loggers[loggerID] = true\n      else delete this.loggers[loggerID]\n      State.store(loggersKey, this.loggers)\n      return `${loggerID} logger ${state ? 'enabled' : 'disabled'}`\n    }\n    // Enable logging from anywhere.\n    window.log = (...a) => { this.log(...a) }\n\n    // Recorders can record log messages, and then save them to file on request.\n    const recorderKeys = State.fetch(recordersKey) || []\n    this.recorders = {}\n    for (const loggerID of recorderKeys) {\n      console.log('recording', loggerID)\n      this.recorders[loggerID] = []\n    }\n    window.recordLogger = (loggerID, on) => {\n      if (on) this.recorders[loggerID] = []\n      else delete this.recorders[loggerID]\n      State.store(recordersKey, Object.keys(this.recorders))\n      return `${loggerID} recorder ${on ? 'enabled' : 'disabled'}`\n    }\n    window.dumpLogger = loggerID => {\n      const record = this.recorders[loggerID]\n      if (!record) return `no recorder for logger ${loggerID}`\n      const a = document.createElement('a')\n      a.href = `data:application/octet-stream;base64,${window.btoa(JSON.stringify(record, null, 4))}`\n      a.download = `${loggerID}.json`\n      document.body.appendChild(a)\n      a.click()\n      setTimeout(() => {\n        document.body.removeChild(a)\n      }, 0)\n    }\n  }\n\n  /**\n   * Start the application. This is the only thing done from the index.js entry\n   * point. Read the id = main element and attach handlers.\n   */\n  async start () {\n    // The \"user\" is a large data structure that contains nearly all state\n    // information, including exchanges, markets, wallets, and orders. It must\n    // be loaded immediately.\n    await this.fetchUser()\n    // Handle back navigation from the browser.\n    bind(window, 'popstate', (e) => {\n      const page = e.state.page\n      if (!page && page !== '') return\n      this.loadPage(page, e.state.data, true)\n    })\n    // The main element is the interchangeable part of the page that doesn't\n    // include the header. Main should define a data-handler attribute\n    // associated with  one of the available constructors.\n    this.main = idel(document, 'main')\n    const handler = this.main.dataset.handler\n    // The application is free to respond with a page that differs from the\n    // one requested in the omnibox, e.g. routing though a login page. Set the\n    // current URL state based on the actual page.\n    const url = new URL(window.location)\n    if (handlerFromPath(url.pathname) !== handler) {\n      url.pathname = `/${handler}`\n      url.search = ''\n      window.history.replaceState({ page: handler }, '', url)\n    }\n    // Attach stuff.\n    this.attachHeader()\n    this.attachCommon(this.header)\n    this.attach()\n    // Load recent notifications from Window.localStorage.\n    const notes = State.fetch('notifications')\n    this.setNotes(notes || [])\n    // Connect the websocket and register the notification route.\n    ws.connect(getSocketURI(), this.reconnected)\n    ws.registerRoute(notificationRoute, note => {\n      this.notify(note)\n    })\n  }\n\n  /*\n   * reconnected is called by the websocket client when a reconnection is made.\n   */\n  reconnected () {\n    window.location.reload() // This triggers another websocket disconnect/connect (!)\n  }\n\n  /*\n   * Fetch and save the user, which is the primary core state that must be\n   * maintained by the Application.\n   */\n  async fetchUser () {\n    const user = await getJSON('/api/user')\n    if (!this.checkResponse(user)) return\n    this.user = user\n    this.assets = user.assets\n    this.exchanges = user.exchanges\n    this.walletMap = {}\n    for (const [assetID, asset] of Object.entries(user.assets)) {\n      if (asset.wallet) {\n        this.walletMap[assetID] = asset.wallet\n      }\n    }\n    this.updateMenuItemsDisplay()\n    return user\n  }\n\n  /* Load the page from the server. Insert and bind the DOM. */\n  async loadPage (page, data, skipPush) {\n    // Close some menus and tooltips.\n    this.tooltip.style.left = '-10000px'\n    Doc.hide(this.page.noteBox, this.page.profileBox)\n    // Parse the request.\n    const url = new URL(`/${page}`, window.location.origin)\n    const requestedHandler = handlerFromPath(page)\n    // Fetch and parse the page.\n    const response = await window.fetch(url)\n    if (!response.ok) return false\n    const html = await response.text()\n    const doc = Doc.noderize(html)\n    const main = idel(doc, 'main')\n    const delivered = main.dataset.handler\n    // Append the request to the page history.\n    if (!skipPush) {\n      const path = delivered === requestedHandler ? url.toString() : `/${delivered}`\n      window.history.pushState({ page: page, data: data }, delivered, path)\n    }\n    // Insert page and attach handlers.\n    document.title = doc.title\n    this.main.replaceWith(main)\n    this.main = main\n    this.attach(data)\n    return true\n  }\n\n  /* attach binds the common handlers and calls the page constructor. */\n  attach (data) {\n    var handlerID = this.main.dataset.handler\n    if (!handlerID) {\n      console.error('cannot attach to content with no specified handler')\n      return\n    }\n    this.attachCommon(this.main)\n    if (this.loadedPage) this.loadedPage.unload()\n    var constructor = constructors[handlerID]\n    if (constructor) this.loadedPage = new constructor(this, this.main, data)\n    else this.loadedPage = null\n\n    // Bind the tooltips.\n    this.bindTooltips(this.main)\n  }\n\n  bindTooltips (ancestor) {\n    ancestor.querySelectorAll('[data-tooltip]').forEach(el => {\n      bind(el, 'mouseenter', () => {\n        this.tooltip.textContent = el.dataset.tooltip\n        const lyt = Doc.layoutMetrics(el)\n        var left = lyt.centerX - this.tooltip.offsetWidth / 2\n        if (left < 0) left = 5\n        if (left + this.tooltip.offsetWidth > document.body.offsetWidth) {\n          left = document.body.offsetWidth - this.tooltip.offsetWidth - 5\n        }\n        this.tooltip.style.left = `${left}px`\n        this.tooltip.style.top = `${lyt.bodyTop - this.tooltip.offsetHeight - 5}px`\n      })\n      bind(el, 'mouseleave', () => {\n        this.tooltip.style.left = '-10000px'\n      })\n    })\n  }\n\n  /* attachHeader attaches the header element, which unlike the main element,\n   * isn't replaced during page navigation.\n   */\n  attachHeader () {\n    this.header = idel(document.body, 'header')\n    this.popupNotes = idel(document.body, 'popupNotes')\n    this.popupTmpl = Doc.tmplElement(this.popupNotes, 'note')\n    this.popupTmpl.remove()\n    this.tooltip = idel(document.body, 'tooltip')\n    const pg = this.page = Doc.parsePage(this.header, [\n      'noteIndicator', 'noteList', 'noteTmpl', 'marketsMenuEntry',\n      'walletsMenuEntry', 'noteMenuEntry', 'loader', 'profileMenuEntry',\n      'profileIndicator', 'profileSignout', 'innerNoteIcon', 'innerProfileIcon',\n      'noteBox', 'profileBox', 'pokeCat', 'noteCat', 'pokeBox', 'pokeList',\n      'pokeTmpl'\n    ])\n    delete pg.noteTmpl.id\n    pg.noteTmpl.remove()\n    delete pg.pokeTmpl.id\n    pg.pokeTmpl.remove()\n    pg.loader.remove()\n    pg.loader.style.backgroundColor = 'rgba(0, 0, 0, 0.5)'\n    Doc.show(pg.loader)\n\n    bind(pg.noteMenuEntry, 'click', async () => {\n      Doc.hide(pg.pokeList)\n      Doc.show(pg.noteList)\n      this.ackNotes()\n      pg.noteCat.classList.add('active')\n      pg.pokeCat.classList.remove('active')\n      this.showDropdown(pg.noteMenuEntry, pg.noteBox)\n      Doc.hide(pg.noteIndicator)\n      for (const note of this.notes) {\n        if (note.acked) {\n          note.el.classList.remove('firstview')\n        }\n      }\n      this.setNoteTimes(pg.noteList)\n      this.setNoteTimes(pg.pokeList)\n      this.storeNotes()\n    })\n\n    bind(pg.profileMenuEntry, 'click', () => {\n      this.showDropdown(pg.profileMenuEntry, pg.profileBox)\n    })\n\n    bind(pg.innerNoteIcon, 'click', () => { Doc.hide(pg.noteBox) })\n    bind(pg.innerProfileIcon, 'click', () => { Doc.hide(pg.profileBox) })\n\n    bind(pg.profileSignout, 'click', async e => await this.signOut())\n\n    bind(pg.pokeCat, 'click', () => {\n      this.setNoteTimes(pg.pokeList)\n      pg.pokeCat.classList.add('active')\n      pg.noteCat.classList.remove('active')\n      Doc.hide(pg.noteList)\n      Doc.show(pg.pokeList)\n      this.ackNotes()\n    })\n\n    bind(pg.noteCat, 'click', () => {\n      this.setNoteTimes(pg.noteList)\n      pg.noteCat.classList.add('active')\n      pg.pokeCat.classList.remove('active')\n      Doc.hide(pg.pokeList)\n      Doc.show(pg.noteList)\n      this.ackNotes()\n    })\n  }\n\n  /*\n   * showDropdown sets the position and visibility of the specified dropdown\n   * dialog according to the position of its icon button.\n   */\n  showDropdown (icon, dialog) {\n    const ico = icon.getBoundingClientRect()\n    Doc.hide(this.page.noteBox, this.page.profileBox)\n    Doc.show(dialog)\n    dialog.style.right = `${window.innerWidth - ico.left - ico.width + 11}px`\n    dialog.style.top = `${ico.top - 9}px`\n\n    const hide = e => {\n      if (!Doc.mouseInElement(e, dialog)) {\n        Doc.hide(dialog)\n        unbind(document, 'click', hide)\n        if (dialog === this.page.noteBox && Doc.isDisplayed(this.page.noteList)) {\n          this.ackNotes()\n        }\n      }\n    }\n    bind(document, 'click', hide)\n  }\n\n  ackNotes () {\n    const acks = []\n    for (const note of this.notes) {\n      if (note.acked) {\n        note.el.classList.remove('firstview')\n      } else {\n        note.acked = true\n        if (note.id && note.severity > ntfn.POKE) acks.push(note.id)\n      }\n    }\n    if (acks.length) ws.request('acknotes', acks)\n    Doc.hide(this.page.noteIndicator)\n  }\n\n  setNoteTimes (noteList) {\n    for (const el of Array.from(noteList.children)) {\n      el.querySelector('span.note-time').textContent = Doc.timeSince(el.note.stamp)\n    }\n  }\n\n  /*\n   * bindInternalNavigation hijacks navigation by click on any local links that\n   * are descendents of ancestor.\n   */\n  bindInternalNavigation (ancestor) {\n    const pageURL = new URL(window.location)\n    ancestor.querySelectorAll('a').forEach(a => {\n      if (!a.href) return\n      const url = new URL(a.href)\n      if (url.origin === pageURL.origin) {\n        const token = url.pathname.substring(1)\n        var params = {}\n        if (url.search) {\n          url.searchParams.forEach((v, k) => {\n            params[k] = v\n          })\n        }\n        Doc.bind(a, 'click', e => {\n          e.preventDefault()\n          this.loadPage(token, params)\n        })\n      }\n    })\n  }\n\n  /*\n   * storeNotes stores the list of notifications in Window.localStorage. The\n   * actual stored list is stripped of information not necessary for display.\n   */\n  storeNotes () {\n    State.store('notifications', this.notes.map(n => {\n      return {\n        subject: n.subject,\n        details: n.details,\n        severity: n.severity,\n        stamp: n.stamp,\n        id: n.id,\n        acked: n.acked\n      }\n    }))\n  }\n\n  /*\n   * updateMenuItemsDisplay should be called when the user has signed in or out,\n   * and when the user registers a DEX.\n   */\n  updateMenuItemsDisplay () {\n    const pg = this.page\n    if (!pg) {\n      // initial page load, header elements not yet attached but menu items\n      // would already be hidden/displayed as appropriate.\n      return\n    }\n    if (!this.user.authed) {\n      Doc.hide(pg.noteMenuEntry, pg.walletsMenuEntry, pg.marketsMenuEntry, pg.profileMenuEntry)\n      return\n    }\n    Doc.show(pg.noteMenuEntry, pg.walletsMenuEntry, pg.profileMenuEntry)\n    if (Object.keys(this.user.exchanges).length > 0) {\n      Doc.show(pg.marketsMenuEntry)\n    } else {\n      Doc.hide(pg.marketsMenuEntry)\n    }\n  }\n\n  /* attachCommon scans the provided node and handles some common bindings. */\n  attachCommon (node) {\n    this.bindInternalNavigation(node)\n  }\n\n  /*\n   * updateExchangeRegistration updates the information for the exchange\n   * registration payment\n   */\n  updateExchangeRegistration (dexAddr, isPaid, confs) {\n    const dex = this.exchanges[dexAddr]\n\n    if (isPaid) {\n      // setting the null value in the 'confs' field indicates that the fee\n      // payment was completed\n      dex.confs = null\n      return\n    }\n\n    dex.confs = confs\n  }\n\n  /*\n   * handleFeePaymentNote is the handler for the 'feepayment'-type notification, which\n   * is used to update the dex registration status.\n   */\n  handleFeePaymentNote (note) {\n    switch (note.subject) {\n      case 'regupdate':\n        this.updateExchangeRegistration(note.dex, false, note.confirmations)\n        break\n      case 'Account registered':\n        this.updateExchangeRegistration(note.dex, true)\n        break\n      default:\n        break\n    }\n  }\n\n  /*\n   * setNotes sets the current notification cache and populates the notification\n   * display.\n   */\n  setNotes (notes) {\n    this.log('notes', 'setNotes', notes)\n    this.notes = []\n    Doc.empty(this.page.noteList)\n    for (let i = 0; i < notes.length; i++) {\n      this.prependNoteElement(notes[i], true)\n    }\n    this.storeNotes()\n  }\n\n  /*\n   * notify is the top-level handler for notifications received from the client.\n   * Notifications are propagated to the loadedPage.\n   */\n  notify (note) {\n    // Handle type-specific updates.\n    this.log('notes', 'notify', note)\n    switch (note.type) {\n      case 'order': {\n        const order = note.order\n        const mkt = this.user.exchanges[order.host].markets[order.market]\n        if (mkt.orders) {\n          for (const i in mkt.orders) {\n            if (mkt.orders[i].id === order.id) {\n              mkt.orders[i] = order\n              break\n            }\n          }\n        }\n        break\n      }\n      case 'balance': {\n        const wallet = this.user.assets[note.assetID].wallet\n        if (wallet) wallet.balance = note.balance\n        break\n      }\n      case 'feepayment':\n        this.handleFeePaymentNote(note)\n        break\n      case 'walletstate':\n      case 'walletconfig': {\n        const wallet = note.wallet\n        this.assets[wallet.assetID].wallet = wallet\n        this.walletMap[wallet.assetID] = wallet\n        const balances = this.main.querySelectorAll(`[data-balance-target=\"${wallet.assetID}\"]`)\n        balances.forEach(el => { el.textContent = (wallet.balance.available / 1e8).toFixed(8) })\n      }\n    }\n\n    // Inform the page.\n    if (this.loadedPage) this.loadedPage.notify(note)\n    // Discard data notifications.\n    if (note.severity < ntfn.POKE) return\n    // Poke notifications have their own display.\n    if (this.showPopups) {\n      const span = this.popupTmpl.cloneNode(true)\n      Doc.tmplElement(span, 'text').textContent = `${note.subject}: ${note.details}`\n      const indicator = Doc.tmplElement(span, 'indicator')\n      if (note.severity === ntfn.POKE) {\n        Doc.hide(indicator)\n      } else setSeverityClass(indicator, note.severity)\n      const pn = this.popupNotes\n      pn.appendChild(span)\n      // These take up screen space. Only show max 5 at a time.\n      while (pn.children.length > 5) pn.removeChild(pn.firstChild)\n      setTimeout(async () => {\n        await Doc.animate(500, progress => {\n          span.style.opacity = 1 - progress\n        })\n        span.remove()\n      }, 6000)\n    }\n    // Success and higher severity go to the bell dropdown.\n    if (note.severity === ntfn.POKE) this.prependPokeElement(note)\n    else this.prependNoteElement(note)\n  }\n\n  /*\n   * log prints to the console if a logger has been enabled. Loggers are created\n   * implicitly by passing a loggerID to log. i.e. you don't create a logger,\n   * you just log to it. Loggers are enabled by invoking a global function,\n   * enableLogger(loggerID, onOffBoolean), from the browser's js console. Your\n   * choices are stored across sessions. Some common and useful loggers are\n   * listed below, but this list is not meant to be comprehensive.\n   *\n   * LoggerID   Description\n   * --------   -----------\n   * notes      Notifications of all levels.\n   * book       Order book feed.\n   * ws.........Websocket connection status changes.\n   */\n  log (loggerID, ...msg) {\n    if (this.loggers[loggerID]) console.log(`${nowString()}[${loggerID}]:`, ...msg)\n    if (this.recorders[loggerID]) {\n      this.recorders[loggerID].push({\n        time: nowString(),\n        msg: msg\n      })\n    }\n  }\n\n  prependPokeElement (note) {\n    this.pokes.push(note)\n    while (this.pokes.length > noteCacheSize) this.pokes.shift()\n    const el = this.makePoke(note)\n    this.prependListElement(this.page.pokeList, note, el)\n  }\n\n  prependNoteElement (note, skipSave) {\n    this.notes.push(note)\n    while (this.notes.length > noteCacheSize) this.notes.shift()\n    const noteList = this.page.noteList\n    const el = this.makeNote(note)\n    this.prependListElement(noteList, note, el)\n    if (!skipSave) this.storeNotes()\n    // Set the indicator color.\n    if (this.notes.length === 0 || (Doc.isDisplayed(this.page.noteBox) && Doc.isDisplayed(noteList))) return\n    var unacked = 0\n    const severity = this.notes.reduce((s, note) => {\n      if (!note.acked) unacked++\n      if (!note.acked && note.severity > s) return note.severity\n      return s\n    }, ntfn.IGNORE)\n    const ni = this.page.noteIndicator\n    setSeverityClass(ni, severity)\n    if (unacked) {\n      ni.textContent = (unacked > noteCacheSize - 1) ? `${noteCacheSize - 1}+` : unacked\n      Doc.show(ni)\n    } else Doc.hide(ni)\n  }\n\n  prependListElement (noteList, note, el) {\n    note.el = el\n    el.note = note\n    noteList.prepend(el)\n    while (noteList.children.length > noteCacheSize) noteList.removeChild(noteList.lastChild)\n    this.setNoteTimes(noteList)\n  }\n\n  /*\n   * makeNote constructs a single notification element for the drop-down\n   * notification list.\n   */\n  makeNote (note) {\n    const el = this.page.noteTmpl.cloneNode(true)\n    if (note.severity > ntfn.POKE) {\n      const cls = note.severity === ntfn.SUCCESS ? 'good' : note.severity === ntfn.WARNING ? 'warn' : 'bad'\n      el.querySelector('div.note-indicator').classList.add(cls)\n    }\n\n    el.querySelector('div.note-subject').textContent = note.subject\n    el.querySelector('div.note-details').textContent = note.details\n    return el\n  }\n\n  makePoke (note) {\n    const el = this.page.pokeTmpl.cloneNode(true)\n    const d = new Date(note.stamp)\n    Doc.tmplElement(el, 'dateTime').textContent = `${d.toLocaleDateString()}, ${d.toLocaleTimeString()}`\n    Doc.tmplElement(el, 'details').textContent = `${note.subject}: ${note.details}`\n    return el\n  }\n\n  /*\n   * loading appends the loader to the specified element and displays the\n   * loading icon. The loader will block all interaction with the specified\n   * element until Application.loaded is called.\n   */\n  loading (el) {\n    el.appendChild(this.page.loader)\n  }\n\n  /* loaded hides the loading element as shown with Application.loading. */\n  loaded () {\n    this.page.loader.remove()\n  }\n\n  /* orders retrieves a list of orders for the specified dex and market. */\n  orders (host, mktID) {\n    var o = this.user.exchanges[host].markets[mktID].orders\n    if (!o) {\n      o = []\n      this.user.exchanges[host].markets[mktID].orders = o\n    }\n    return o\n  }\n\n  /* order attempts to locate an order by order ID. */\n  order (oid) {\n    for (const xc of Object.values(this.user.exchanges)) {\n      for (const market of Object.values(xc.markets)) {\n        if (!market.orders) continue\n        for (const ord of market.orders) {\n          if (ord.id === oid) return ord\n        }\n      }\n    }\n  }\n\n  /*\n   * checkResponse checks the response object as returned from the functions in\n   * the http module. If the response indicates that the request failed, a\n   * message will be displayed in the drop-down notifications and false will be\n   * returned.\n   */\n  checkResponse (resp, skipNote) {\n    if (!resp.requestSuccessful || !resp.ok) {\n      if (this.user.inited && !skipNote) this.notify(ntfn.make('API error', resp.msg, ntfn.ERROR))\n      return false\n    }\n    return true\n  }\n\n  /**\n   * signOut call to /api/logout, if response with no errors occurred clear all\n   * store, remove auth, darkMode cookies and reload the page, otherwise will\n   * show a notification\n   */\n  async signOut () {\n    const res = await postJSON('/api/logout')\n    if (!this.checkResponse(res)) {\n      Doc.hide(this.page.profileBox)\n      return\n    }\n    State.clearAllStore()\n    State.removeAuthCK()\n    window.location.href = '/login'\n  }\n}\n\n/* getSocketURI returns the websocket URI for the client. */\nfunction getSocketURI () {\n  var protocol = (window.location.protocol === 'https:') ? 'wss' : 'ws'\n  return `${protocol}://${window.location.host}/ws`\n}\n\n/*\n * severityClassMap maps a notification severity level to a CSS class that\n * assigns a background color.\n */\nconst severityClassMap = {\n  [ntfn.SUCCESS]: 'good',\n  [ntfn.ERROR]: 'bad',\n  [ntfn.WARNING]: 'warn'\n}\n\n/* handlerFromPath parses the handler name from the path. */\nfunction handlerFromPath (path) {\n  return path.replace(/^\\//, '').split('/')[0].split('?')[0].split('#')[0]\n}\n\n/* nowString creates a string formatted like HH:MM:SS.xxx */\nfunction nowString () {\n  const stamp = new Date()\n  const h = stamp.getHours().toString().padStart(2, '0')\n  const m = stamp.getMinutes().toString().padStart(2, '0')\n  const s = stamp.getSeconds().toString().padStart(2, '0')\n  const ms = stamp.getMilliseconds().toString().padStart(3, '0')\n  return `${h}:${m}:${s}.${ms}`\n}\n\nfunction setSeverityClass (el, severity) {\n  el.classList.remove('bad', 'warn', 'good')\n  el.classList.add(severityClassMap[severity])\n}\n","import Application from './js/app'\nimport './css/application.scss'\nconst app = new Application()\napp.start()\n"],"sourceRoot":""}