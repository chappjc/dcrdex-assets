{"version":3,"sources":["webpack://dexclient/./src/js/doc.js","webpack://dexclient/./src/js/state.js","webpack://dexclient/./src/js/forms.js","webpack://dexclient/./src/js/basepage.js","webpack://dexclient/./src/js/http.js","webpack://dexclient/./src/js/register.js","webpack://dexclient/./src/js/login.js","webpack://dexclient/./src/js/notifications.js","webpack://dexclient/./src/js/wallets.js","webpack://dexclient/./src/js/settings.js","webpack://dexclient/./src/js/orderbook.js","webpack://dexclient/./src/js/charts.js","webpack://dexclient/./src/js/orderutil.js","webpack://dexclient/./src/js/ws.js","webpack://dexclient/./src/js/markets.js","webpack://dexclient/./src/js/orders.js","webpack://dexclient/./src/js/order.js","webpack://dexclient/./src/js/app.js","webpack://dexclient/./src/index.js"],"names":["parser","window","DOMParser","BipSymbols","Object","values","0","42","2","22","28","3","145","fullPrecisionSpecs","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","Doc","el","id","querySelector","ev","f","addEventListener","removeEventListener","html","parseFromString","e","rect","getBoundingClientRect","pageX","left","right","pageY","top","bottom","box","docEl","document","documentElement","scrollTop","scrollLeft","w","offsetWidth","h","offsetHeight","bodyTop","bodyLeft","width","height","centerX","centerY","firstChild","removeChild","els","classList","add","remove","contains","duration","easingAlgo","easer","Easing","linear","start","Date","getTime","end","range","now","sleep","main","ids","page","forEach","s","idel","x","toLocaleString","split","whole","frac","substring","replace","symbol","indexOf","ancestor","t","y","mo","d","m","seconds","Math","floor","result","count","n","timeMod","aYear","aMonth","aDay","anHour","aMinute","inputFields","inputField","preventDefault","easeIn","easeOut","easeInHard","easeOutHard","WalletIcons","stateElement","name","this","icons","sleeping","locked","unlocked","nowallet","syncing","status","i","hide","show","textContent","wallet","icon","running","synced","dataset","tooltip","syncProgress","toFixed","setSyncing","open","console","error","ms","Promise","resolve","setTimeout","dur","darkModeCK","popupsCK","State","cname","cvalue","setTime","expires","toUTCString","cookie","k","v","trim","dark","setCookie","body","filter","item","includes","length","localStorage","setItem","JSON","stringify","clear","getItem","parse","getCookie","app","BasePage","note","notifiers","type","requestJSON","method","addr","reqBody","response","fetch","headers","Headers","obj","json","requestSuccessful","msg","text","postJSON","data","NewWalletForm","application","form","success","currentAsset","fields","parsePage","subform","WalletConfigForm","walletSettings","bind","submitAdd","nwAppPass","value","newWalletErr","createForm","assetID","parseInt","pass","newWalletPass","config","map","appPass","loaded","loading","res","checkResponse","setError","asset","nwAssetLogo","src","logoPath","nwAssetName","info","update","errMsg","setLoadedConfig","sectionize","configElements","configOpts","allSettings","tmplElement","dynamicOpts","textInputTmpl","checkboxTmpl","fileSelector","fileInput","showOther","showIcon","hideIcon","showHideMsg","otherSettings","loadedSettingsMsg","loadedSettings","defaultSettingsMsg","defaultSettings","click","fileInputChanged","setOtherSettingsViz","files","configtext","keys","append","setConfig","reorder","children","loadedOpts","defaultOpts","walletInfo","configopts","defaultedOpts","addOpt","opt","elID","key","isboolean","cloneNode","input","configOpt","label","htmlFor","prepend","displayname","appendChild","noecho","description","checked","push","bindTooltips","visible","cfg","finds","querySelectorAll","toLowerCase","bindOpenWallet","setAsset","uwAssetLogo","uwAssetName","uwAppPass","submitUnlock","unlockErr","submitBttn","handler","wrapper","RegistrationPage","bindForm","appPWForm","appPWSubmit","setAppPass","walletForm","newWalletForm","changeForm","dexAddrForm","unlockWalletForm","defaultTLSText","selectedCert","certFile","readCert","removeCert","resetCert","addCert","submitDEXAddr","checkDEX","dexShowMore","dexCertBox","confirmRegForm","submitConfirm","registerDEX","user","authed","auth","fetchUser","assets","loadDefaults","form1","form2","shift","animate","progress","style","focus","appPWErrMsg","pw","appPW","pwAgain","appPWAgain","setNotes","appErrMsg","updateMenuItemsDisplay","dexAddrErr","dexAddr","cert","fee","xc","feeAsset","amount","feeDisplay","formatCoinValue","dcrAsset","dexDCRLotSize","lotSize","dexNeedCert","regErr","registration","loadPage","LoginPage","forms","loginForm","submit","login","notes","reverse","make","subject","details","severity","stamp","WalletsPage","firstRow","getAction","row","rowInfos","walletTable","tr","rowInfo","stateIcons","actions","connect","unlock","withdraw","deposit","create","lock","settings","dexTitle","removeAttribute","oneMarket","markets","displayed","animation","openAsset","walletAsset","reconfigAsset","createWalletSuccess","walletReconfig","reconfigInputs","openForm","openWalletSuccess","withdrawForm","submitWithdraw","submitReconfig","reconfig","showMarkets","rightBox","lastFormAsset","keyup","a","run","stopPropagation","doConnect","showWithdraw","showDeposit","showNewWallet","showOpen","showReconfig","entries","newDepAddrBttn","newDepositAddress","withdrawAvail","withdrawAmt","showChangePW","changeWalletPW","setPWSettingViz","balance","handleBalanceNote","walletstate","handleWalletStateNote","walletconfig","changePW","switchPWMsg","focuser","opacity","marketsBox","card","marketsCard","hideBox","marketsFor","exchanges","host","market","baseid","quoteid","header","mBox","prettyMarketName","counterSymbol","basesymbol","quotesymbol","pageData","base","quote","showBox","walletPass","reconfigErr","recfgAssetLogo","recfgAssetName","depositErr","depositLogo","walletMap","depositAsset","depositName","depositAddress","address","notify","ntfn","withdrawAddr","available","withdrawLogo","withdrawName","encrypted","withdrawErr","round","withdrawPW","req","newWalletPW","newPW","readWallet","toUpperCase","SettingsPage","darkMode","showPokes","showPopups","commitHash","addADex","showForm","onCertFileChange","clearCertFile","verifyDEX","authorizeAccountExportForm","authorizeExportAccountConfirm","exportAccount","disableAccountForm","disableAccountConfirm","disableAccount","exchangesDiv","exportAccountButton","prepareAccountExport","disableAccountButton","prepareAccountDisable","importAccount","prepareAccountImport","authorizeAccountImportForm","authorizeImportAccountConfirm","changeAppPW","changeAppPWForm","submitNewPW","accountFile","onAccountFileChange","removeAccount","clearAccountFile","addAccount","closePopups","mouseInElement","currentForm","exportAccountHost","exportAccountErr","disableAccountHost","disableAccountErr","exportAccountAppPass","accountForExport","account","createElement","setAttribute","disableAccountAppPW","location","reload","selectedAccount","importAccountErr","importAccountAppPass","accountString","message","importResponse","loginResponse","changePWErrMsg","clearValues","newAppPW","confirmNewPW","OrderBook","mktBook","baseSymbol","quoteSymbol","buys","book","sells","ord","side","sell","splice","rate","less","findIdx","token","removeFromSide","findOrder","qty","updateRemainingSide","epochIdx","approve","undefined","epoch","best","bestGapOrder","unbind","PIPI","PI","plusChar","String","fromCharCode","minusChar","darkTheme","axisLabel","gridBorder","gridLines","gapLine","zoom","zoomHover","sellLine","buyLine","sellFill","buyFill","crosshairs","legendFill","legendText","lightTheme","DepthChart","parent","reporters","theme","isDark","canvas","ctx","getContext","textAlign","textBaseline","dataExtents","zoomLevel","rateStep","lines","markers","mousePos","clientX","clientY","draw","wheelLimiter","wheeled","wheel","resize","resize_","clientHeight","parentHeight","clientWidth","plotExtents","Extents","xLblExtents","yLblExtents","plotRegion","Region","xRegion","yRegion","zoomInBttn","zoomOutBttn","deltaY","bigger","translator","unx","clearRect","baseTicker","quoteTicker","gap","midGap","gapWidth","minZoom","max","min","halfWindow","high","low","buyMarkers","sellMarkers","sort","b","buyDepth","buyEpoch","sellDepth","sellEpoch","volumeReport","buyBase","buyQuote","sellBase","sellQuote","sum","epochSum","floatCompare","mark","active","buySum","last","epochBuySum","sellSum","epochSellSum","extents","growthFactor","maxY","font","fillStyle","yLabels","makeLabels","yAxisWidth","widest","mouseData","xLabels","lineWidth","plot","tools","strokeStyle","extX","extY","beginPath","dataCoords","moveTo","lineTo","stroke","lbls","lbl","line","val","fillText","formatLabelValue","topCenterX","midX","topCenterY","zoomPct","xRange","zoomText","measureText","bttnLeft","bttnTop","bttnSize","setExtents","hover","midY","drawLine","color","save","setLineDash","restore","tolerance","hoverMarkers","marker","hovered","withinTolerance","size","tip","sqrt","closePath","fill","dataX","evalSide","trigger","ptX","dotColor","bestDepth","pt","depth","lastY","unitCenter","txt","lastX","drawDepth","radius","arc","dot","volume","mouse","firstPt","globalAlpha","bestGapBuy","bestGapSell","xMin","xMax","yMin","yMax","context","yRange","ext","region","screenMinX","screenW","screenMaxY","screenH","xFactor","yFactor","uny","drawFunc","skipMask","clip","tx","ty","transform","spacingGuess","step","unit","tickGuess","tick","absMax","abs","sigFigs","log10","pts","Number","toPrecision","unitW","arr","x0","y0","x1","y1","skipStroke","labelSpecs","sellString","typeString","tif","isMarketBuy","statusString","order","isLive","matches","match","revoked","hasLiveMatches","cancelling","settled","reduce","isCancel","forward","route","payload","handlers","err","code","uri","connection","queue","maxQlength","readyState","WebSocket","OPEN","log","send","reason","close","reloader","retrys","go","conn","timeout","onmessage","evt","onclose","clearTimeout","delay","pow","onopen","request","onerror","bookRoute","bookOrderRoute","unbookOrderRoute","epochOrderRoute","lastMarketKey","chartRatioKey","depthZoomKey","check","MarketsPage","parentElement","maxLoaded","registrationStatus","openFunc","currentCreate","preorderTimer","cancelData","metaOrders","depthLines","activeMarkerRate","hovers","ordersSortKey","ordersSortDirection","p","reportClick","reportVolume","reportMousePosition","z","reportZoom","chart","marketChart","wgt","balanceWgt","BalanceWidget","balanceTable","baseIcons","quoteIcons","walletUnlocked","expired","newWalletBttn","showCreate","cleanTemplates","rowTemplate","liveTemplate","marketList","MarketList","xcSections","marketRows","mkt","setMarket","baseID","quoteID","quoteUnits","baseUnits","buyBttn","swapBttns","sellBttn","maxLbl","setOrderBttnText","setOrderVisibility","drawChartLines","limitBttn","marketBttn","rateField","isSell","setMarketBuyOrderEstimate","maxOrd","lotField","maxSell","swap","lots","maxBuys","adjustedRate","lotChanged","qtyField","mktBuyField","ws","handleBookRoute","handleBookOrderRoute","handleUnbookOrderRoute","handleUpdateRemainingRoute","handleEpochOrderRoute","createWallet","orderForm","stepSubmit","verifyForm","vSubmit","submitOrder","cancelForm","cancelSubmit","submitCancel","liveTable","th","setOrdersSortCol","ordercol","unsetOrdersSortColClasses","refreshActiveOrders","setOrdersSortColClasses","sortCls","vPass","cancelPass","quantityChanged","marketBuyChanged","rateFieldChanged","previewQuoteAmt","marketSearch","filterMarkets","clearChartLines","buyRows","sellRows","liveList","setMarkers","selected","setChartRatio","r","chartDivRatio","chartResizer","button","chartRatio","trackMouse","ee","rightSide","store","handleOrderNote","handleEpochNote","handleConnNote","feepayment","handleFeePayment","makeMarket","exists","first","secondTicker","setInterval","metaOrder","timeSince","setRegistrationStatusVisibility","setBalanceVisibility","dex","confs","confsrequired","isLimit","priceBox","tifBox","qtyBox","maxBox","mktBuyBox","feePaid","hasFeePending","assetsAreSupported","hasWallets","loaderMsg","baseCfg","quoteCfg","titleContent","confStatusMsg","titleClass","regStatusTitle","regStatusConfsDisplay","confirmationsRequired","confirmations","confReq","regStatusDex","setRegistrationStatusView","feePending","connected","updateRegistrationStatusView","toggle","resolveOrderFormVisibility","isHidden","chartErrMsg","marketLoader","sid","marketID","setLoaderMsgVisibility","sellBookedBase","sellBookedQuote","buyBookedBase","buyBookedQuote","metaOrd","hoverPrice","hoverVolume","chartLegend","hoverData","limit","asAtoms","tifnow","tifNow","parseOrder","orderErr","preSell","preBuy","orderPreview","quoteAsset","total","baseWallet","setMaxOrder","schedulePreOrder","sellBalance","quoteWallet","aLot","maxBuy","buyBalance","path","args","bid","qid","bWallet","qWallet","maxLotBox","maxAboveZero","maxFromLots","maxFromLotsLbl","warn","maxOrder","toString","maxFromAmt","maxFromTicker","maxToAmt","maxToTicker","q","loadTable","addTableOrder","set","buffer","buybuffer","minMktBuy","Order","localeCompare","filled","oid","orders","compare","ordersSortCompare","updateUserOrderRow","showCancel","href","bindInternalNavigation","handleBook","select","setWallets","removeTableOrder","updateRemaining","updateTableOrder","baseAsset","toAsset","fromAsset","vQty","vSideHeader","vSideSubmit","vBaseSubmit","verifyLimit","verifyMarket","vRate","vQuote","vTotal","vBase","vSide","received","vmTotal","vmAsset","vmLots","buyBtnClass","sellBtnClass","vHeader","orderID","bttn","remaining","cancelRemain","cancelUnit","validateOrder","showVerify","oldStatus","setEpoch","clearOrderTableEpochs","alreadyMatched","statusTD","updateAsset","avail","finalize","adjusted","mktBuyLots","mktBuyScore","loadTableSide","bookSide","tbody","cssClass","orderTableRow","insertBefore","addQty","nextSibling","Array","from","innerText","newEpoch","clearOrderTableEpochSide","qtyTD","td","setConnectionStatus","filterTxt","setFilter","setLines","unattach","clearInterval","div","xcTmpl","ExchangeSection","sortedSections","xcSection","firstXC","firstMkt","marketRow","setConnected","tmpl","disconnectedIcon","rows","rowTmpl","MarketRow","sortedMarkets","isConnected","table","logo","baseImg","baseAvail","newWalletRow","baseNewWalletRow","baseNewButton","baseLocked","immature","baseImmature","unsupported","baseUnsupported","baseExpired","baseConnect","spinner","baseSpinner","iconBox","baseWalletState","quoteImg","quoteAvail","quoteNewWalletRow","quoteNewButton","quoteLocked","quoteImmature","quoteUnsupported","quoteExpired","quoteConnect","quoteSpinner","quoteWalletState","updateWallet","bal","fetchBalance","contractlocked","parseFloat","before","updateDataCol","col","tmpls","OrdersPage","offset","orderTmpl","filterState","hosts","statuses","search","URLSearchParams","readFilter","filterKey","get","subFilter","hostFilter","assetFilter","statusFilter","applyButtons","monitorFilter","applyBttn","submitFilter","filter1","filter2","entry","compareSubFilter","parseSubFilter","ordersTable","nextPage","tableBody","appendOrders","tmplID","mktID","to","fromQty","toQty","dateTime","url","URL","setQuery","join","history","replaceState","setOrders","fetchOrders","currentFilter","orderLoader","net","OrderPage","stampers","fetchOrder","cancelBttn","link","setCoinHref","setStamp","span","handleMatchNote","processMatch","matchBox","matchID","setCoin","divName","linkName","coin","coinLink","stringID","explorerCoin","counterSwap","redeem","counterRedeem","refund","swapSpan","cSwapSpan","inCounterSwapCast","inSwapCast","confirmationString","required","assetExplorer","CoinExplorers","explorerId","formatter","cid","txid","vout","loggersKey","recordersKey","constructors","register","wallets","unauthedPages","Application","pokes","accounts","process","loggers","enableLogger","loggerID","state","recorderKeys","recorders","recordLogger","on","dumpLogger","record","btoa","download","handlerFromPath","pathname","attachHeader","attachCommon","attach","protocol","reconnected","getJSON","skipNote","skipPush","noteBox","profileBox","origin","requestedHandler","ok","doc","noderize","delivered","pushState","title","replaceWith","handlerID","loadedPage","unload","constructor","lyt","layoutMetrics","popupNotes","popupTmpl","pg","noteTmpl","pokeTmpl","loader","backgroundColor","noteMenuEntry","pokeList","noteList","ackNotes","noteCat","pokeCat","showDropdown","noteIndicator","acked","setNoteTimes","storeNotes","profileMenuEntry","innerNoteIcon","innerProfileIcon","profileSignout","signOut","dialog","ico","innerWidth","isDisplayed","acks","pageURL","params","searchParams","walletsMenuEntry","marketsMenuEntry","node","isPaid","updateExchangeRegistration","prependNoteElement","updateOrder","handleFeePaymentNote","updateMatch","indicator","setSeverityClass","pn","prependPokeElement","nowString","time","makePoke","prependListElement","skipSave","makeNote","unacked","ni","noteCacheSize","lastChild","cls","toLocaleDateString","toLocaleTimeString","o","resp","inited","severityClassMap","getHours","padStart","getMinutes","getSeconds","getMilliseconds"],"mappings":"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","file":"entry.js","sourcesContent":["const parser = new window.DOMParser()\n\nconst FPS = 30\n\nconst BipIDs = {\n  0: 'btc',\n  42: 'dcr',\n  2: 'ltc',\n  22: 'mona',\n  28: 'vtc',\n  3: 'doge',\n  145: 'bch'\n}\n\nconst BipSymbols = Object.values(BipIDs)\n\n// Parameters for printing asset values.\nconst fullPrecisionSpecs = {\n  minimumSignificantDigits: 4,\n  maximumSignificantDigits: 8,\n  minimumFractionDigits: 8,\n  maximumFractionDigits: 8\n}\n\n// Helpers for working with the DOM.\nexport default class Doc {\n  /*\n   * idel is the element with the specified id that is the descendent of the\n   * specified node.\n   */\n  static idel (el, id) {\n    return el.querySelector(`#${id}`)\n  }\n\n  /* bind binds the function to the event for the element. */\n  static bind (el, ev, f) {\n    el.addEventListener(ev, f)\n  }\n\n  /* unbind removes the handler for the event from the element. */\n  static unbind (el, ev, f) {\n    el.removeEventListener(ev, f)\n  }\n\n  /* noderize creates a Document object from a string of HTML. */\n  static noderize (html) {\n    return parser.parseFromString(html, 'text/html')\n  }\n\n  /*\n   * mouseInElement returns true if the position of mouse event, e, is within\n   * the bounds of the specified element.\n   */\n  static mouseInElement (e, el) {\n    const rect = el.getBoundingClientRect()\n    return e.pageX >= rect.left && e.pageX <= rect.right &&\n      e.pageY >= rect.top && e.pageY <= rect.bottom\n  }\n\n  /*\n   * layoutMetrics gets information about the elements position on the page.\n   */\n  static layoutMetrics (el) {\n    const box = el.getBoundingClientRect()\n    const docEl = document.documentElement\n    const top = box.top + docEl.scrollTop\n    const left = box.left + docEl.scrollLeft\n    const w = el.offsetWidth\n    const h = el.offsetHeight\n    return {\n      bodyTop: top,\n      bodyLeft: left,\n      width: w,\n      height: h,\n      centerX: left + w / 2,\n      centerY: top + h / 2\n    }\n  }\n\n  /* empty removes all child nodes from the specified element. */\n  static empty (el) {\n    while (el.firstChild) el.removeChild(el.firstChild)\n  }\n\n  /*\n   * hide hides the specified elements. This is accomplished by adding the\n   * bootstrap d-hide class to the element. Use Doc.show to undo.\n   */\n  static hide (...els) {\n    for (const el of els) el.classList.add('d-hide')\n  }\n\n  /*\n   * show shows the specified elements. This is accomplished by removing the\n   * bootstrap d-hide class as added with Doc.hide.\n   */\n  static show (...els) {\n    for (const el of els) el.classList.remove('d-hide')\n  }\n\n  /* isHidden returns true if the specified element is hidden */\n  static isHidden (el) {\n    return el.classList.contains('d-hide')\n  }\n\n  /* isDisplayed returns true if the specified element is not hidden */\n  static isDisplayed (el) {\n    return !el.classList.contains('d-hide')\n  }\n\n  /*\n   * animate runs the supplied function, which should be a \"progress\" function\n   * accepting one argument. The progress function will be called repeatedly\n   * with the argument varying from 0.0 to 1.0. The exact path that animate\n   * takes from 0.0 to 1.0 will vary depending on the choice of easing\n   * algorithm. See the Easing object for the available easing algo choices. The\n   * default easing algorithm is linear.\n   */\n  static async animate (duration, f, easingAlgo) {\n    const easer = easingAlgo ? Easing[easingAlgo] : Easing.linear\n    const start = new Date().getTime()\n    const end = start + duration\n    const range = end - start\n    const frameDuration = 1000 / FPS\n    let now = start\n    while (now < end) {\n      f(easer((now - start) / range))\n      await sleep(frameDuration)\n      now = new Date().getTime()\n    }\n    f(1)\n  }\n\n  /*\n   * parsePage constructs a page object from the supplied list of id strings.\n   * The properties of the returned object have names matching the supplied\n   * id strings, with the corresponding value being the Element object. It is\n   * not an error if an element does not exist for an id in the list.\n   */\n  static parsePage (main, ids) {\n    const get = s => Doc.idel(main, s)\n    const page = {}\n    ids.forEach(id => { page[id] = get(id) })\n    return page\n  }\n\n  // formatCoinValue formats the asset value to a string.\n  static formatCoinValue (x) {\n    let [whole, frac] = x.toLocaleString('en-us', fullPrecisionSpecs).split('.')\n    // toLocalString gives precedence to minimumSignificantDigits, so the result\n    // can have no fractional part, despite the minimumFractionDigits setting.\n    if (!frac) return whole\n    // ... or it can have more than 8 fractional digits, despite of the\n    // maximumFractionDigits setting.\n    frac = frac.substring(0, 8)\n    if (frac === '00000000') return whole\n    // Trim trailing zeros.\n    return `${whole}.${frac.replace(/,+$/, '')}`\n  }\n\n  /*\n   * logoPath creates a path to a png logo for the specified ticker symbol. If\n   * the symbol is not a supported asset, the generic letter logo will be\n   * requested instead.\n   */\n  static logoPath (symbol) {\n    if (BipSymbols.indexOf(symbol) === -1) symbol = symbol.substring(0, 1)\n    return `/img/coins/${symbol}.png`\n  }\n\n  /*\n  * tmplElement is a helper function for grabbing sub-elements of the market list\n  * template.\n  */\n  static tmplElement (ancestor, s) {\n    return ancestor.querySelector(`[data-tmpl=\"${s}\"]`)\n  }\n\n  /*\n   * timeSince returns a string representation of the duration since the specified\n   * unix timestamp.\n   */\n  static timeSince (t) {\n    let seconds = Math.floor(((new Date().getTime()) - t))\n    let result = ''\n    let count = 0\n    const add = (n, s) => {\n      if (n > 0 || count > 0) count++\n      if (n > 0) result += `${n} ${s} `\n      return count >= 2\n    }\n    let y, mo, d, h, m, s\n    [y, seconds] = timeMod(seconds, aYear)\n    if (add(y, 'y')) { return result }\n    [mo, seconds] = timeMod(seconds, aMonth)\n    if (add(mo, 'mo')) { return result }\n    [d, seconds] = timeMod(seconds, aDay)\n    if (add(d, 'd')) { return result }\n    [h, seconds] = timeMod(seconds, anHour)\n    if (add(h, 'h')) { return result }\n    [m, seconds] = timeMod(seconds, aMinute)\n    if (add(m, 'm')) { return result }\n    [s, seconds] = timeMod(seconds, 1000)\n    add(s, 's')\n    return result || '0 s'\n  }\n\n  /*\n   * disableMouseWheel can be used to disable the mouse wheel for any\n   * input. It is very easy to unknowingly scroll up on a number input\n   * and then submit an unexpected value. This function prevents the\n   * scroll increment/decrement behavior for a wheel action on a\n   * number input.\n   */\n  static disableMouseWheel (...inputFields) {\n    for (const inputField of inputFields) {\n      inputField.addEventListener('wheel', (ev) => {\n        ev.preventDefault()\n      })\n    }\n  }\n}\n\n/* Easing algorithms for animations. */\nconst Easing = {\n  linear: t => t,\n  easeIn: t => t * t,\n  easeOut: t => t * (2 - t),\n  easeInHard: t => t * t * t,\n  easeOutHard: t => (--t) * t * t + 1\n}\n\n/* WalletIcons are used for controlling wallets in various places. */\nexport class WalletIcons {\n  constructor (box) {\n    const stateElement = (name) => box.querySelector(`[data-state=${name}]`)\n    this.icons = {}\n    this.icons.sleeping = stateElement('sleeping')\n    this.icons.locked = stateElement('locked')\n    this.icons.unlocked = stateElement('unlocked')\n    this.icons.nowallet = stateElement('nowallet')\n    this.icons.syncing = stateElement('syncing')\n    this.status = stateElement('status')\n  }\n\n  /* sleeping sets the icons to indicate that the wallet is not connected. */\n  sleeping () {\n    const i = this.icons\n    Doc.hide(i.locked, i.unlocked, i.nowallet, i.syncing)\n    Doc.show(i.sleeping)\n    if (this.status) this.status.textContent = 'off'\n  }\n\n  /*\n   * locked sets the icons to indicate that the wallet is connected, but locked.\n   */\n  locked () {\n    const i = this.icons\n    Doc.hide(i.unlocked, i.nowallet, i.sleeping)\n    Doc.show(i.locked)\n    if (this.status) this.status.textContent = 'locked'\n  }\n\n  /*\n   * unlocked sets the icons to indicate that the wallet is connected and\n   * unlocked.\n   */\n  unlocked () {\n    const i = this.icons\n    Doc.hide(i.locked, i.nowallet, i.sleeping)\n    Doc.show(i.unlocked)\n    if (this.status) this.status.textContent = 'ready'\n  }\n\n  /* sleeping sets the icons to indicate that no wallet exists. */\n  nowallet () {\n    const i = this.icons\n    Doc.hide(i.locked, i.unlocked, i.sleeping, i.syncing)\n    Doc.show(i.nowallet)\n    if (this.status) this.status.textContent = 'no wallet'\n  }\n\n  setSyncing (wallet) {\n    const icon = this.icons.syncing\n    if (!wallet || !wallet.running) {\n      Doc.hide(icon)\n      return\n    }\n    if (!wallet.synced) {\n      Doc.show(icon)\n      icon.dataset.tooltip = `wallet is ${(wallet.syncProgress * 100).toFixed(1)}% synced`\n    } else Doc.hide(icon)\n  }\n\n  /* reads the core.Wallet state and sets the icon visibility. */\n  readWallet (wallet) {\n    this.setSyncing(wallet)\n    switch (true) {\n      case (!wallet):\n        this.nowallet()\n        break\n      case (!wallet.running):\n        this.sleeping()\n        break\n      case (!wallet.open):\n        this.locked()\n        break\n      case (wallet.open):\n        this.unlocked()\n        break\n      default:\n        console.error('wallet in unknown state', wallet)\n    }\n  }\n}\n\n/* sleep can be used by async functions to pause for a specified period. */\nfunction sleep (ms) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nconst aYear = 31536000000\nconst aMonth = 2592000000\nconst aDay = 86400000\nconst anHour = 3600000\nconst aMinute = 60000\n\n/* timeMod returns the quotient and remainder of t / dur. */\nfunction timeMod (t, dur) {\n  const n = Math.floor(t / dur)\n  return [n, t - n * dur]\n}\n","const darkModeCK = 'darkMode'\nconst authCK = 'dexauth'\nconst popupsCK = 'popups'\n\n// State is a set of static methods for working with the user state. It has\n// utilities for setting and retrieving cookies and storing user configuration\n// to localStorage.\nexport default class State {\n  static setCookie (cname, cvalue) {\n    const d = new Date()\n    // Set cookie to expire in ten years.\n    d.setTime(d.getTime() + (86400 * 365 * 10 * 1000))\n    const expires = 'expires=' + d.toUTCString()\n    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/'\n  }\n\n  /*\n   * getCookie returns the value at the specified cookie name, otherwise null.\n   */\n  static getCookie (cname) {\n    for (const cstr of document.cookie.split(';')) {\n      const [k, v] = cstr.split('=')\n      if (k.trim() === cname) return v\n    }\n    return null\n  }\n\n  /* dark sets the dark-mode cookie. */\n  static dark (dark) {\n    this.setCookie(darkModeCK, dark ? '1' : '0')\n    if (dark) {\n      document.body.classList.add('dark')\n    } else {\n      document.body.classList.remove('dark')\n    }\n  }\n\n  /*\n   * isDark returns true if the dark-mode cookie is currently set to '1' = true.\n   */\n  static isDark () {\n    return document.cookie.split(';').filter((item) => item.includes(`${darkModeCK}=1`)).length\n  }\n\n  /* store puts the key-value pair into Window.localStorage. */\n  static store (k, v) {\n    window.localStorage.setItem(k, JSON.stringify(v))\n  }\n\n  /* clearAllStore remove all the key-value pair in Window.localStorage. */\n  static clearAllStore () {\n    window.localStorage.clear()\n  }\n\n  static removeAuthCK () {\n    document.cookie = `${authCK}=;expires=Thu, 01 Jan 1970 00:00:01 GMT;`\n  }\n\n  /*\n  * fetch fetches the value associated with the key in Window.localStorage, or\n  * null if the no value exists for the key.\n  */\n  static fetch (k) {\n    const v = window.localStorage.getItem(k)\n    if (v !== null) {\n      return JSON.parse(v)\n    }\n    return null\n  }\n}\n\n// If the dark-mode cookie is not set, set it to dark mode on.\nif (State.getCookie(darkModeCK) === null) State.setCookie(darkModeCK, '1')\nif (State.getCookie(popupsCK) === null) State.setCookie(popupsCK, '1')\n","import Doc from './doc'\nimport { postJSON } from './http'\n\nlet app\n\n/*\n * bindNewWallet should be used with the \"newWalletForm\" template. The enclosing\n * <form> element should be the second argument.\n */\nexport class NewWalletForm {\n  constructor (application, form, success) {\n    this.form = form\n    this.currentAsset = null\n    const fields = this.fields = Doc.parsePage(form, [\n      'nwAssetLogo', 'nwAssetName', 'newWalletPass', 'nwAppPass',\n      'walletSettings', 'selectCfgFile', 'cfgFile', 'submitAdd', 'newWalletErr'\n    ])\n\n    // WalletConfigForm will set the global app variable.\n    this.subform = new WalletConfigForm(application, fields.walletSettings, true)\n\n    bind(form, fields.submitAdd, async () => {\n      if (fields.nwAppPass.value === '') {\n        fields.newWalletErr.textContent = 'app password cannot be empty'\n        Doc.show(fields.newWalletErr)\n        return\n      }\n      Doc.hide(fields.newWalletErr)\n\n      const createForm = {\n        assetID: parseInt(this.currentAsset.id),\n        pass: fields.newWalletPass.value || '',\n        config: this.subform.map(),\n        appPass: fields.nwAppPass.value\n      }\n      fields.nwAppPass.value = ''\n      const loaded = app.loading(form)\n      const res = await postJSON('/api/newwallet', createForm)\n      loaded()\n      if (!app.checkResponse(res)) {\n        this.setError(res.msg)\n        return\n      }\n      fields.newWalletPass.value = ''\n      success()\n    })\n  }\n\n  async setAsset (asset) {\n    const fields = this.fields\n    if (this.currentAsset && this.currentAsset.id === asset.id) return\n    this.currentAsset = asset\n    fields.nwAssetLogo.src = Doc.logoPath(asset.symbol)\n    fields.nwAssetName.textContent = asset.info.name\n    fields.newWalletPass.value = ''\n    this.subform.update(asset.info)\n    Doc.hide(fields.newWalletErr)\n  }\n\n  /* setError sets and shows the in-form error message. */\n  async setError (errMsg) {\n    this.fields.newWalletErr.textContent = errMsg\n    Doc.show(this.fields.newWalletErr)\n  }\n\n  /*\n   * loadDefaults attempts to load the ExchangeWallet configuration from the\n   * default wallet config path on the server and will auto-fill the fields on\n   * the subform if settings are found.\n   */\n  async loadDefaults () {\n    const loaded = app.loading(this.form)\n    const res = await postJSON('/api/defaultwalletcfg', { assetID: this.currentAsset.id })\n    loaded()\n    if (!app.checkResponse(res)) {\n      this.setError(res.msg)\n      return\n    }\n    this.subform.setLoadedConfig(res.config)\n  }\n}\n\n/*\n * WalletConfigForm is a dynamically generated sub-form for setting\n * asset-specific wallet configuration options.\n*/\nexport class WalletConfigForm {\n  constructor (application, form, sectionize) {\n    app = application\n    this.form = form\n    // A configElement is a div containing an input and its label.\n    this.configElements = {}\n    // configOpts is the wallet options provided by core.\n    this.configOpts = []\n    this.sectionize = sectionize\n\n    // Get template elements\n    this.allSettings = Doc.tmplElement(form, 'allSettings')\n    this.dynamicOpts = Doc.tmplElement(form, 'dynamicOpts')\n    this.textInputTmpl = Doc.tmplElement(form, 'textInput')\n    this.textInputTmpl.remove()\n    this.checkboxTmpl = Doc.tmplElement(form, 'checkbox')\n    this.checkboxTmpl.remove()\n    this.fileSelector = Doc.tmplElement(form, 'fileSelector')\n    this.fileInput = Doc.tmplElement(form, 'fileInput')\n    this.errMsg = Doc.tmplElement(form, 'errMsg')\n    this.showOther = Doc.tmplElement(form, 'showOther')\n    this.showIcon = Doc.tmplElement(form, 'showIcon')\n    this.hideIcon = Doc.tmplElement(form, 'hideIcon')\n    this.showHideMsg = Doc.tmplElement(form, 'showHideMsg')\n    this.otherSettings = Doc.tmplElement(form, 'otherSettings')\n    this.loadedSettingsMsg = Doc.tmplElement(form, 'loadedSettingsMsg')\n    this.loadedSettings = Doc.tmplElement(form, 'loadedSettings')\n    this.defaultSettingsMsg = Doc.tmplElement(form, 'defaultSettingsMsg')\n    this.defaultSettings = Doc.tmplElement(form, 'defaultSettings')\n\n    if (!sectionize) Doc.hide(this.showOther)\n\n    Doc.bind(this.fileSelector, 'click', () => this.fileInput.click())\n\n    // config file upload\n    Doc.bind(this.fileInput, 'change', async () => this.fileInputChanged())\n\n    Doc.bind(this.showOther, 'click', () => {\n      this.setOtherSettingsViz(this.hideIcon.classList.contains('d-hide'))\n    })\n  }\n\n  /*\n   * fileInputChanged will read the selected file and attempt to load the\n   * configuration settings. All loaded settings will be made visible for\n   * inspection by the user.\n   */\n  async fileInputChanged () {\n    if (!this.fileInput.value) return\n    const loaded = app.loading(this.form)\n    const config = await this.fileInput.files[0].text()\n    if (!config) return\n    const res = await postJSON('/api/parseconfig', {\n      configtext: config\n    })\n    loaded()\n    if (!app.checkResponse(res)) {\n      this.errMsg.textContent = res.msg\n      Doc.show(this.errMsg)\n      return\n    }\n    if (Object.keys(res.map).length === 0) return\n    this.dynamicOpts.append(...this.setConfig(res.map))\n    this.reorder(this.dynamicOpts)\n    const [loadedOpts, defaultOpts] = [this.loadedSettings.children.length, this.defaultSettings.children.length]\n    if (loadedOpts === 0) Doc.hide(this.loadedSettings, this.loadedSettingsMsg)\n    if (defaultOpts === 0) Doc.hide(this.defaultSettings, this.defaultSettingsMsg)\n    if (loadedOpts + defaultOpts === 0) Doc.hide(this.showOther, this.otherSettings)\n  }\n\n  /*\n   * update creates the dynamic form.\n   */\n  update (walletInfo) {\n    this.configElements = {}\n    this.configOpts = walletInfo.configopts\n    Doc.empty(this.dynamicOpts, this.otherSettings)\n    this.setOtherSettingsViz(false)\n    Doc.hide(\n      this.loadedSettingsMsg, this.loadedSettings,\n      this.defaultSettingsMsg, this.defaultSettings,\n      this.errMsg\n    )\n    const defaultedOpts = []\n    const addOpt = (box, opt) => {\n      const elID = 'wcfg-' + opt.key\n      const el = opt.isboolean ? this.checkboxTmpl.cloneNode(true) : this.textInputTmpl.cloneNode(true)\n      this.configElements[opt.key] = el\n      const input = el.querySelector('input')\n      input.id = elID\n      input.configOpt = opt\n      const label = el.querySelector('label')\n      label.htmlFor = elID // 'for' attribute, but 'for' is a keyword\n      label.prepend(opt.displayname)\n      box.appendChild(el)\n      if (opt.noecho) input.type = 'password'\n      if (opt.description) label.dataset.tooltip = opt.description\n      if (opt.isboolean) input.checked = opt.default\n      else input.value = opt.default !== null ? opt.default : ''\n    }\n    for (const opt of this.configOpts) {\n      if (this.sectionize && opt.default !== null) defaultedOpts.push(opt)\n      else addOpt(this.dynamicOpts, opt)\n    }\n    if (defaultedOpts.length) {\n      for (const opt of defaultedOpts) addOpt(this.defaultSettings, opt)\n      Doc.show(this.showOther, this.defaultSettingsMsg, this.defaultSettings)\n    } else {\n      Doc.hide(this.showOther)\n    }\n    app.bindTooltips(this.allSettings)\n  }\n\n  /*\n   * setOtherSettingsViz sets the visibility of the additional settings section.\n   */\n  setOtherSettingsViz (visible) {\n    if (visible) {\n      Doc.hide(this.showIcon)\n      Doc.show(this.hideIcon, this.otherSettings)\n      this.showHideMsg.textContent = 'hide additional settings'\n      return\n    }\n    Doc.hide(this.hideIcon, this.otherSettings)\n    Doc.show(this.showIcon)\n    this.showHideMsg.textContent = 'show additional settings'\n  }\n\n  /*\n   * setConfig looks for inputs with configOpt keys matching the cfg object, and\n   * sets the inputs value to the corresponding cfg value. A list of matching\n   * configElements is returned.\n   */\n  setConfig (cfg) {\n    const finds = []\n    this.allSettings.querySelectorAll('input').forEach(input => {\n      const k = input.configOpt.key\n      const v = cfg[k]\n      if (typeof v === 'undefined') return\n      finds.push(this.configElements[k])\n      if (input.configOpt.isboolean) input.checked = isTruthyString(v)\n      else input.value = v\n    })\n    return finds\n  }\n\n  /*\n   * setLoadedConfig sets the input values for the entries in cfg, and moves\n   * them to the loadedSettings box.\n   */\n  setLoadedConfig (cfg) {\n    const finds = this.setConfig(cfg)\n    if (!this.sectionize || finds.length === 0) return\n    this.loadedSettings.append(...finds)\n    this.reorder(this.loadedSettings)\n    Doc.show(this.loadedSettings, this.loadedSettingsMsg)\n    if (this.defaultSettings.children.length === 0) Doc.hide(this.defaultSettings, this.defaultSettingsMsg)\n  }\n\n  /*\n   * map reads all inputs and constructs an object from the configOpt keys and\n   * values.\n   */\n  map () {\n    const config = {}\n    this.allSettings.querySelectorAll('input').forEach(input => {\n      if (input.configOpt.isboolean && input.configOpt.key) config[input.configOpt.key] = input.checked ? '1' : '0'\n      else if (input.value) config[input.configOpt.key] = input.value\n    })\n\n    return config\n  }\n\n  /*\n   * reorder sorts the configElements in the box by the order of the\n   * server-provided configOpts array.\n   */\n  reorder (box) {\n    const els = {}\n    box.querySelectorAll('input').forEach(el => {\n      const k = el.configOpt.key\n      els[k] = this.configElements[k]\n    })\n    for (const opt of this.configOpts) {\n      const el = els[opt.key]\n      if (el) box.append(el)\n    }\n  }\n}\n/*\n * bindOpenWallet should be used with the \"unlockWalletForm\" template. The\n * enclosing <form> element should be second argument.\n */\nexport function bindOpenWallet (app, form, success) {\n  const fields = Doc.parsePage(form, [\n    'uwAssetLogo', 'uwAssetName',\n    'uwAppPass', 'submitUnlock', 'unlockErr'\n  ])\n  let currentAsset\n  form.setAsset = asset => {\n    currentAsset = asset\n    fields.uwAssetLogo.src = Doc.logoPath(asset.symbol)\n    fields.uwAssetName.textContent = asset.info.name\n    fields.uwAppPass.value = ''\n  }\n  bind(form, fields.submitUnlock, async () => {\n    if (fields.uwAppPass.value === '') {\n      fields.unlockErr.textContent = 'app password cannot be empty'\n      Doc.show(fields.unlockErr)\n      return\n    }\n    Doc.hide(fields.unlockErr)\n    const open = {\n      assetID: parseInt(currentAsset.id),\n      pass: fields.uwAppPass.value\n    }\n    fields.uwAppPass.value = ''\n    const loaded = app.loading(form)\n    const res = await postJSON('/api/openwallet', open)\n    loaded()\n    if (!app.checkResponse(res)) {\n      fields.unlockErr.textContent = res.msg\n      Doc.show(fields.unlockErr)\n      return\n    }\n    success()\n  })\n}\n\n/*\n * bind binds the click and submit events and prevents page reloading on\n * submission.\n */\nexport function bind (form, submitBttn, handler) {\n  const wrapper = e => {\n    if (e.preventDefault) e.preventDefault()\n    handler(e)\n  }\n  Doc.bind(submitBttn, 'click', wrapper)\n  Doc.bind(form, 'submit', wrapper)\n}\n\n// isTruthyString will be true if the provided string is recognized as a\n// value representing true.\nfunction isTruthyString (s) {\n  return s === '1' || s.toLowerCase() === 'true'\n}\n","export default class BasePage {\n  /* notify is called when a notification is received by the app. */\n  notify (note) {\n    if (!this.notifiers || !this.notifiers[note.type]) return\n    this.notifiers[note.type](note)\n  }\n\n  /* unload is called when the user navigates away from the page. */\n  unload () {}\n}\n","/*\n * requestJSON encodes the object and sends the JSON to the specified address.\n */\nexport async function requestJSON (method, addr, reqBody) {\n  try {\n    const response = await window.fetch(addr, {\n      method: method,\n      headers: new window.Headers({ 'content-type': 'application/json' }),\n      // credentials: \"same-origin\",\n      body: reqBody\n    })\n    if (response.status !== 200) { throw response }\n    const obj = await response.json()\n    obj.requestSuccessful = true\n    return obj\n  } catch (response) {\n    response.requestSuccessful = false\n    response.msg = await response.text()\n    return response\n  }\n}\n\n/*\n * postJSON sends a POST request with JSON-formatted data and returns the\n * response.\n */\nexport async function postJSON (addr, data) {\n  return requestJSON('POST', addr, JSON.stringify(data))\n}\n\n/*\n * getJSON sends a GET request and returns the response.\n */\nexport async function getJSON (addr) {\n  return requestJSON('GET', addr)\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport { postJSON } from './http'\nimport { NewWalletForm, bindOpenWallet, bind as bindForm } from './forms'\n\nconst DCR_ID = 42\nconst animationLength = 300\n\nlet app\n\nexport default class RegistrationPage extends BasePage {\n  constructor (application, body) {\n    super()\n    app = application\n    this.body = body\n    this.notifiers = {}\n    const page = this.page = Doc.parsePage(body, [\n      // Form 1: Set the application password\n      'appPWForm', 'appPW', 'appPWAgain', 'appPWSubmit', 'appPWErrMsg',\n      // Form 2: Create Decred wallet\n      'newWalletForm',\n      // Form 3: Unlock Decred wallet\n      'unlockWalletForm',\n      // Form 4: Configure DEX server\n      'dexAddrForm', 'dexAddr', 'certFile', 'selectedCert', 'removeCert',\n      'addCert', 'submitDEXAddr', 'dexAddrErr', 'dexCertFile', 'dexNeedCert',\n      'dexShowMore',\n      // Form 5: Confirm DEX registration and pay fee\n      'confirmRegForm', 'feeDisplay', 'dexDCRLotSize', 'appPass', 'submitConfirm', 'regErr',\n      'dexCertBox'\n    ])\n\n    // Hide the form closers for the registration process.\n    body.querySelectorAll('.form-closer').forEach(el => Doc.hide(el))\n\n    // SET APP PASSWORD\n    bindForm(page.appPWForm, page.appPWSubmit, () => this.setAppPass())\n\n    // NEW DCR WALLET\n    // This form is only shown if there is no DCR wallet yet.\n    this.walletForm = new NewWalletForm(app, page.newWalletForm, () => {\n      this.changeForm(page.newWalletForm, page.dexAddrForm)\n    })\n\n    // OPEN DCR WALLET\n    // This form is only shown if there is a wallet, but it's not open.\n    bindOpenWallet(app, page.unlockWalletForm, () => {\n      this.changeForm(page.unlockWalletForm, page.dexAddrForm)\n    })\n\n    // ADD DEX\n    // tls certificate upload\n    this.defaultTLSText = 'none selected'\n    page.selectedCert.textContent = this.defaultTLSText\n    Doc.bind(page.certFile, 'change', () => this.readCert())\n    Doc.bind(page.removeCert, 'click', () => this.resetCert())\n    Doc.bind(page.addCert, 'click', () => page.certFile.click())\n    bindForm(page.dexAddrForm, page.submitDEXAddr, () => this.checkDEX())\n    Doc.bind(page.dexShowMore, 'click', () => {\n      Doc.hide(page.dexShowMore)\n      Doc.show(page.dexCertBox)\n    })\n\n    // SUBMIT DEX REGISTRATION\n    bindForm(page.confirmRegForm, page.submitConfirm, () => this.registerDEX())\n\n    // Attempt to load the dcrwallet configuration from the default location.\n    if (app.user.authed) this.auth()\n  }\n\n  // auth should be called once user is known to be authed with the server.\n  async auth () {\n    await app.fetchUser()\n    this.walletForm.setAsset(app.assets[DCR_ID])\n    this.page.unlockWalletForm.setAsset(app.assets[DCR_ID])\n    this.walletForm.loadDefaults()\n  }\n\n  /* Swap this currently displayed form1 for form2 with an animation. */\n  async changeForm (form1, form2) {\n    const shift = this.body.offsetWidth / 2\n    await Doc.animate(animationLength, progress => {\n      form1.style.right = `${progress * shift}px`\n    }, 'easeInHard')\n    Doc.hide(form1)\n    form1.style.right = '0'\n    form2.style.right = -shift\n    Doc.show(form2)\n    form2.querySelector('input').focus()\n    await Doc.animate(animationLength, progress => {\n      form2.style.right = `${-shift + progress * shift}px`\n    }, 'easeOutHard')\n    form2.style.right = '0'\n  }\n\n  /* Set the application password. Attached to form submission. */\n  async setAppPass () {\n    const page = this.page\n    Doc.hide(page.appPWErrMsg)\n    const pw = page.appPW.value\n    const pwAgain = page.appPWAgain.value\n    if (pw === '') {\n      page.appPWErrMsg.textContent = 'password cannot be empty'\n      Doc.show(page.appPWErrMsg)\n      return\n    }\n    if (pw !== pwAgain) {\n      page.appPWErrMsg.textContent = 'passwords do not match'\n      Doc.show(page.appPWErrMsg)\n      return\n    }\n    // Clear the notification cache. Useful for development purposes, since\n    // the Application will only clear them on login, which would leave old\n    // browser-cached notifications in place after registering even if the\n    // client db is wiped.\n    app.setNotes([])\n    page.appPW.value = ''\n    page.appPWAgain.value = ''\n    const loaded = app.loading(page.appPWForm)\n    const res = await postJSON('/api/init', { pass: pw })\n    loaded()\n    if (!app.checkResponse(res)) {\n      page.appErrMsg.textContent = res.msg\n      Doc.show(page.appErrMsg)\n      return\n    }\n    this.auth()\n    app.updateMenuItemsDisplay()\n    this.changeForm(page.appPWForm, page.newWalletForm)\n  }\n\n  /* Get the reg fees for the DEX. */\n  async checkDEX () {\n    const page = this.page\n    Doc.hide(page.dexAddrErr)\n    const addr = page.dexAddr.value\n    if (addr === '') {\n      page.dexAddrErr.textContent = 'DEX address cannot be empty'\n      Doc.show(page.dexAddrErr)\n      return\n    }\n\n    let cert = ''\n    if (page.certFile.value) {\n      cert = await page.certFile.files[0].text()\n    }\n\n    const loaded = app.loading(page.dexAddrForm)\n    const res = await postJSON('/api/getdexinfo', {\n      addr: addr,\n      cert: cert\n    })\n    loaded()\n    if (!app.checkResponse(res, true)) {\n      if (res.msg === 'certificate required') {\n        Doc.hide(page.dexShowMore)\n        Doc.show(page.dexCertBox, page.dexNeedCert)\n      } else {\n        page.dexAddrErr.textContent = res.msg\n        Doc.show(page.dexAddrErr)\n      }\n\n      return\n    }\n    this.fee = res.xc.feeAsset.amount\n\n    page.feeDisplay.textContent = Doc.formatCoinValue(this.fee / 1e8)\n    const dcrAsset = res.xc.assets['42']\n    if (dcrAsset) page.dexDCRLotSize.textContent = Doc.formatCoinValue(dcrAsset.lotSize / 1e8)\n    await this.changeForm(page.dexAddrForm, page.confirmRegForm)\n  }\n\n  /* Authorize DEX registration. */\n  async registerDEX () {\n    const page = this.page\n    Doc.hide(page.regErr)\n    let cert = ''\n    if (page.certFile.value) {\n      cert = await page.certFile.files[0].text()\n    }\n    const registration = {\n      addr: page.dexAddr.value,\n      pass: page.appPass.value,\n      fee: this.fee,\n      cert: cert\n    }\n    page.appPass.value = ''\n    const loaded = app.loading(page.confirmRegForm)\n    const res = await postJSON('/api/register', registration)\n    loaded()\n    if (!app.checkResponse(res)) {\n      page.regErr.textContent = res.msg\n      Doc.show(page.regErr)\n      return\n    }\n    // Need to get a fresh market list. May consider handling this with a\n    // websocket update instead.\n    await app.fetchUser()\n    app.loadPage('markets')\n  }\n\n  async readCert () {\n    const page = this.page\n    const files = page.certFile.files\n    if (!files.length) return\n    page.selectedCert.textContent = files[0].name\n    Doc.show(page.removeCert)\n    Doc.hide(page.addCert)\n  }\n\n  resetCert () {\n    const page = this.page\n    page.certFile.value = ''\n    page.selectedCert.textContent = this.defaultTLSText\n    Doc.hide(page.removeCert)\n    Doc.show(page.addCert)\n  }\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport { postJSON } from './http'\nimport * as forms from './forms'\n\nlet app\n\nexport default class LoginPage extends BasePage {\n  constructor (application, body) {\n    super()\n    app = application\n    const page = this.page = Doc.parsePage(body, [\n      'submit', 'errMsg', 'loginForm', 'pw'\n    ])\n    forms.bind(page.loginForm, page.submit, () => { this.login() })\n    page.pw.focus()\n  }\n\n  /* login submits the sign-in form and parses the result. */\n  async login (e) {\n    const page = this.page\n    Doc.hide(page.errMsg)\n    const pw = page.pw.value\n    page.pw.value = ''\n    if (pw === '') {\n      page.errMsg.textContent = 'password cannot be empty'\n      Doc.show(page.errMsg)\n      return\n    }\n    const loaded = app.loading(page.loginForm)\n    const res = await postJSON('/api/login', { pass: pw })\n    loaded()\n    if (!app.checkResponse(res)) {\n      page.errMsg.textContent = res.msg\n      Doc.show(page.errMsg)\n      return\n    }\n    if (res.notes) {\n      res.notes.reverse()\n    }\n    app.setNotes(res.notes || [])\n    await app.fetchUser()\n    app.loadPage('markets')\n  }\n}\n","export const IGNORE = 0\nexport const DATA = 1\nexport const POKE = 2\nexport const SUCCESS = 3\nexport const WARNING = 4\nexport const ERROR = 5\n\n/*\n * make constructs a new notification. The notification structure is a mirror of\n * the structure of notifications sent from the web server.\n * NOTE: I'm hoping to make this function obsolete, since errors generated in\n * javascript should usually be displayed/cached somewhere better. For example,\n * if the error is generated during submission of a form, the error should be\n * displayed on or near the form itself, not in the notifications.\n */\nexport function make (subject, details, severity) {\n  return {\n    subject: subject,\n    details: details,\n    severity: severity,\n    stamp: new Date().getTime()\n  }\n}\n","import Doc, { WalletIcons } from './doc'\nimport BasePage from './basepage'\nimport { postJSON } from './http'\nimport { NewWalletForm, WalletConfigForm, bindOpenWallet, bind as bindForm } from './forms'\nimport * as ntfn from './notifications'\n\nconst bind = Doc.bind\nconst animationLength = 300\nlet app\n\nexport default class WalletsPage extends BasePage {\n  constructor (application, body) {\n    super()\n    app = application\n    this.body = body\n    const page = this.page = Doc.parsePage(body, [\n      'rightBox',\n      // Table Rows\n      'assetArrow', 'balanceArrow', 'statusArrow', 'walletTable',\n      // Available markets\n      'markets', 'dexTitle', 'marketsBox', 'oneMarket', 'marketsFor',\n      'marketsCard',\n      // New wallet, unlock wallet, wallet settings\n      'walletForm', 'openForm',\n      // Wallet configuration\n      'walletReconfig', 'recfgAssetLogo', 'recfgAssetName', 'reconfigInputs',\n      'submitReconfig', 'reconfigErr', 'appPW', 'showChangePW', 'changePW',\n      'switchPWMsg', 'hideIcon', 'showIcon', 'newPW',\n      // Deposit\n      'deposit', 'depositName', 'depositAddress', 'newDepAddrBttn',\n      'depositErr', 'depositLogo',\n      // Withdraw\n      'withdrawForm', 'withdrawLogo', 'withdrawName', 'withdrawAddr',\n      'withdrawAmt', 'withdrawAvail', 'submitWithdraw', // 'withdrawFee',\n      'withdrawUnit', 'withdrawPW', 'withdrawErr'\n    ])\n\n    // Read the document, storing some info about each asset's row.\n    const getAction = (row, name) => row.querySelector(`[data-action=${name}]`)\n    const rowInfos = this.rowInfos = {}\n    const rows = page.walletTable.querySelectorAll('tr')\n    let firstRow\n    for (const tr of rows) {\n      const assetID = parseInt(tr.dataset.assetID)\n      const rowInfo = rowInfos[assetID] = {}\n      if (!firstRow) firstRow = rowInfo\n      rowInfo.assetID = assetID\n      rowInfo.tr = tr\n      rowInfo.symbol = tr.dataset.symbol\n      rowInfo.name = tr.dataset.name\n      rowInfo.stateIcons = new WalletIcons(tr)\n      rowInfo.actions = {\n        connect: getAction(tr, 'connect'),\n        unlock: getAction(tr, 'unlock'),\n        withdraw: getAction(tr, 'withdraw'),\n        deposit: getAction(tr, 'deposit'),\n        create: getAction(tr, 'create'),\n        lock: getAction(tr, 'lock'),\n        settings: getAction(tr, 'settings')\n      }\n    }\n\n    // Prepare templates\n    page.dexTitle.removeAttribute('id')\n    page.dexTitle.remove()\n    page.oneMarket.removeAttribute('id')\n    page.oneMarket.remove()\n    page.markets.removeAttribute('id')\n    page.markets.remove()\n\n    // Methods to switch the item displayed on the right side, with a little\n    // fade-in animation.\n    this.displayed = null // The currently displayed right-side element.\n    this.animation = null // Store Promise of currently running animation.\n\n    this.openAsset = null\n    this.walletAsset = null\n    this.reconfigAsset = null\n\n    // Bind the new wallet form.\n    this.walletForm = new NewWalletForm(app, page.walletForm, () => { this.createWalletSuccess() })\n\n    // Bind the wallet reconfig form.\n    this.walletReconfig = new WalletConfigForm(app, page.reconfigInputs, false)\n\n    // Bind the wallet unlock form.\n    bindOpenWallet(app, page.openForm, () => { this.openWalletSuccess() })\n\n    // Bind the withdraw form.\n    bindForm(page.withdrawForm, page.submitWithdraw, () => { this.withdraw() })\n\n    // Bind the wallet reconfiguration submission.\n    bindForm(page.walletReconfig, page.submitReconfig, () => this.reconfig())\n\n    // Bind the row clicks, which shows the available markets for the asset.\n    for (const rowInfo of Object.values(rowInfos)) {\n      bind(rowInfo.tr, 'click', () => {\n        this.showMarkets(rowInfo.assetID)\n      })\n    }\n\n    page.rightBox.querySelectorAll('.form-closer').forEach(el => {\n      Doc.bind(el, 'click', () => {\n        this.showMarkets(this.lastFormAsset)\n      })\n    })\n\n    this.keyup = e => {\n      if (e.key === 'Escape') {\n        this.showMarkets(this.lastFormAsset)\n      }\n    }\n    bind(document, 'keyup', this.keyup)\n\n    // Bind buttons\n    for (const [k, asset] of Object.entries(rowInfos)) {\n      const assetID = parseInt(k) // keys are string asset ID.\n      const a = asset.actions\n      const run = (e, f) => {\n        e.stopPropagation()\n        f(assetID, asset)\n      }\n      bind(a.connect, 'click', e => { run(e, this.doConnect.bind(this)) })\n      bind(a.withdraw, 'click', e => { run(e, this.showWithdraw.bind(this)) })\n      bind(a.deposit, 'click', e => { run(e, this.showDeposit.bind(this)) })\n      bind(a.create, 'click', e => { run(e, this.showNewWallet.bind(this)) })\n      bind(a.unlock, 'click', e => { run(e, this.showOpen.bind(this)) })\n      bind(a.lock, 'click', async e => { run(e, this.lock.bind(this)) })\n      bind(a.settings, 'click', e => { run(e, this.showReconfig.bind(this)) })\n    }\n\n    // New deposit address button.\n    bind(page.newDepAddrBttn, 'click', async () => { this.newDepositAddress() })\n\n    // Clicking on the available amount on the withdraw form populates the\n    // amount field.\n    bind(page.withdrawAvail, 'click', () => {\n      page.withdrawAmt.value = page.withdrawAvail.textContent\n    })\n\n    // A link on the wallet reconfiguration form to show/hide the password field.\n    bind(page.showChangePW, 'click', () => {\n      this.changeWalletPW = !this.changeWalletPW\n      this.setPWSettingViz(this.changeWalletPW)\n    })\n\n    if (!firstRow) return\n    this.showMarkets(firstRow.assetID)\n\n    this.notifiers = {\n      balance: note => { this.handleBalanceNote(note) },\n      walletstate: note => { this.handleWalletStateNote(note) },\n      walletconfig: note => { this.handleWalletStateNote(note) }\n    }\n  }\n\n  /*\n   * setPWSettingViz sets the visibility of the password field section.\n   */\n  setPWSettingViz (visible) {\n    if (visible) {\n      Doc.hide(this.page.showIcon)\n      Doc.show(this.page.hideIcon, this.page.changePW)\n      this.page.switchPWMsg.textContent = 'keep current wallet password'\n      return\n    }\n    Doc.hide(this.page.hideIcon, this.page.changePW)\n    Doc.show(this.page.showIcon)\n    this.page.switchPWMsg.textContent = 'set a new wallet password'\n  }\n\n  /*\n   * hideBox hides the displayed box after waiting for the currently running\n   * animation to complete.\n   */\n  async hideBox () {\n    if (this.animation) await this.animation\n    if (!this.displayed) return\n    Doc.hide(this.displayed)\n  }\n\n  /*\n   * showBox shows the box with a fade-in animation.\n   */\n  async showBox (box, focuser) {\n    box.style.opacity = '0'\n    Doc.show(box)\n    if (focuser) focuser.focus()\n    await Doc.animate(animationLength, progress => {\n      box.style.opacity = `${progress}`\n    }, 'easeOut')\n    box.style.opacity = '1'\n    this.displayed = box\n  }\n\n  /*\n   * Show the markets box, which lists the markets available for a selected\n   * asset.\n   */\n  async showMarkets (assetID) {\n    const page = this.page\n    const box = page.marketsBox\n    const card = page.marketsCard\n    const rowInfo = this.rowInfos[assetID]\n    await this.hideBox()\n    Doc.empty(card)\n    page.marketsFor.textContent = rowInfo.name\n    for (const [host, xc] of Object.entries(app.user.exchanges)) {\n      let count = 0\n      for (const market of Object.values(xc.markets)) {\n        if (market.baseid === assetID || market.quoteid === assetID) count++\n      }\n      if (count === 0) continue\n      const header = page.dexTitle.cloneNode(true)\n      header.textContent = host\n      card.appendChild(header)\n      const marketsBox = page.markets.cloneNode(true)\n      card.appendChild(marketsBox)\n      for (const market of Object.values(xc.markets)) {\n        // Only show markets where this is the base or quote asset.\n        if (market.baseid !== assetID && market.quoteid !== assetID) continue\n        const mBox = page.oneMarket.cloneNode(true)\n        mBox.querySelector('span').textContent = prettyMarketName(market)\n        let counterSymbol = market.basesymbol\n        if (market.baseid === assetID) counterSymbol = market.quotesymbol\n        mBox.querySelector('img').src = Doc.logoPath(counterSymbol)\n        // Bind the click to a load of the markets page.\n        const pageData = { host: host, base: market.baseid, quote: market.quoteid }\n        bind(mBox, 'click', () => { app.loadPage('markets', pageData) })\n        marketsBox.appendChild(mBox)\n      }\n    }\n    this.animation = this.showBox(box)\n  }\n\n  /* Show the new wallet form. */\n  async showNewWallet (assetID) {\n    const page = this.page\n    const box = page.walletForm\n    const asset = app.assets[assetID]\n    await this.hideBox()\n    this.walletAsset = this.lastFormAsset = assetID\n    this.walletForm.setAsset(asset)\n    this.animation = this.showBox(box)\n    await this.walletForm.loadDefaults()\n  }\n\n  /* Show the form used to unlock a wallet. */\n  async showOpen (assetID) {\n    const page = this.page\n    this.openAsset = this.lastFormAsset = assetID\n    await this.hideBox()\n    page.openForm.setAsset(app.assets[assetID])\n    this.animation = this.showBox(page.openForm, page.walletPass)\n  }\n\n  /* Show the form used to change wallet configuration settings. */\n  async showReconfig (assetID) {\n    const page = this.page\n    Doc.hide(page.reconfigErr)\n    // Hide update password section by default\n    this.changeWalletPW = false\n    this.setPWSettingViz(this.changeWalletPW)\n    const asset = app.assets[assetID]\n    this.walletReconfig.update(asset.info)\n    page.recfgAssetLogo.src = Doc.logoPath(asset.symbol)\n    page.recfgAssetName.textContent = asset.info.name\n    this.reconfigAsset = this.lastFormAsset = assetID\n    await this.hideBox()\n    this.animation = this.showBox(page.walletReconfig)\n    const loaded = app.loading(page.walletReconfig)\n    const res = await postJSON('/api/walletsettings', {\n      assetID: assetID\n    })\n    loaded()\n    if (!app.checkResponse(res, true)) {\n      page.reconfigErr.textContent = res.msg\n      Doc.show(page.reconfigErr)\n      return\n    }\n    this.walletReconfig.setConfig(res.map)\n  }\n\n  /* Display a deposit address. */\n  async showDeposit (assetID) {\n    const page = this.page\n    Doc.hide(page.depositErr)\n    const box = page.deposit\n    const asset = app.assets[assetID]\n    page.depositLogo.src = Doc.logoPath(asset.symbol)\n    const wallet = app.walletMap[assetID]\n    this.depositAsset = this.lastFormAsset = assetID\n    if (!wallet) {\n      app.notify(ntfn.make(`No wallet found for ${asset.info.name}`, 'Cannot retrieve deposit address.', ntfn.ERROR))\n      return\n    }\n    await this.hideBox()\n    page.depositName.textContent = asset.info.name\n    page.depositAddress.textContent = wallet.address\n    this.animation = this.showBox(box)\n  }\n\n  /* Fetch a new address from the wallet. */\n  async newDepositAddress () {\n    const page = this.page\n    Doc.hide(page.depositErr)\n    const loaded = app.loading(page.deposit)\n    const res = await postJSON('/api/depositaddress', {\n      assetID: this.depositAsset\n    })\n    loaded()\n    if (!app.checkResponse(res, true)) {\n      page.depositErr.textContent = res.msg\n      Doc.show(page.depositErr)\n      return\n    }\n    page.depositAddress.textContent = res.address\n  }\n\n  /* Show the form to withdraw funds. */\n  async showWithdraw (assetID) {\n    const page = this.page\n    const box = page.withdrawForm\n    const asset = app.assets[assetID]\n    const wallet = app.walletMap[assetID]\n    if (!wallet) {\n      app.notify(ntfn.make(`No wallet found for ${asset.info.name}`, 'Cannot withdraw.', ntfn.ERROR))\n    }\n    await this.hideBox()\n    page.withdrawAddr.value = ''\n    page.withdrawAmt.value = ''\n    page.withdrawAvail.textContent = (wallet.balance.available / 1e8).toFixed(8)\n    page.withdrawLogo.src = Doc.logoPath(asset.symbol)\n    page.withdrawName.textContent = asset.info.name\n    // page.withdrawFee.textContent = wallet.feerate\n    // page.withdrawUnit.textContent = wallet.units\n    box.dataset.assetID = this.lastFormAsset = assetID\n    this.animation = this.showBox(box, page.walletPass)\n  }\n\n  /* doConnect connects to a wallet via the connectwallet API route. */\n  async doConnect (assetID) {\n    const loaded = app.loading(this.body)\n    const res = await postJSON('/api/connectwallet', {\n      assetID: assetID\n    })\n    loaded()\n    if (!app.checkResponse(res)) return\n    const rowInfo = this.rowInfos[assetID]\n    Doc.hide(rowInfo.actions.connect)\n  }\n\n  /* createWalletSuccess is the success callback for wallet creation. */\n  async createWalletSuccess () {\n    const rowInfo = this.rowInfos[this.walletAsset]\n    this.showMarkets(rowInfo.assetID)\n    const a = rowInfo.actions\n    Doc.hide(a.create)\n    Doc.show(a.withdraw, a.deposit, a.settings)\n    await app.fetchUser()\n    if (app.walletMap[rowInfo.assetID].encrypted) {\n      Doc.show(a.lock)\n    }\n  }\n\n  /* openWalletSuccess is the success callback for wallet unlocking. */\n  async openWalletSuccess () {\n    const rowInfo = this.rowInfos[this.openAsset]\n    const a = rowInfo.actions\n    Doc.show(a.withdraw, a.deposit)\n    Doc.hide(a.unlock, a.connect)\n    if (app.walletMap[rowInfo.assetID].encrypted) {\n      Doc.show(a.lock)\n    }\n    this.showMarkets(this.openAsset)\n  }\n\n  /* withdraw submits the withdrawal form to the API. */\n  async withdraw () {\n    const page = this.page\n    Doc.hide(page.withdrawErr)\n    const assetID = parseInt(page.withdrawForm.dataset.assetID)\n    const open = {\n      assetID: assetID,\n      address: page.withdrawAddr.value,\n      value: parseInt(Math.round(page.withdrawAmt.value * 1e8)),\n      pw: page.withdrawPW.value\n    }\n    const loaded = app.loading(page.withdrawForm)\n    const res = await postJSON('/api/withdraw', open)\n    loaded()\n    if (!app.checkResponse(res, true)) {\n      page.withdrawErr.textContent = res.msg\n      Doc.show(page.withdrawErr)\n      return\n    }\n    this.showMarkets(assetID)\n  }\n\n  /* update wallet configuration */\n  async reconfig () {\n    const page = this.page\n    Doc.hide(page.reconfigErr)\n    if (!page.appPW.value) {\n      page.reconfigErr.textContent = 'app password cannot be empty'\n      Doc.show(page.reconfigErr)\n      return\n    }\n    const loaded = app.loading(page.walletReconfig)\n    const req = {\n      assetID: this.reconfigAsset,\n      config: this.walletReconfig.map(),\n      appPW: page.appPW.value\n    }\n    if (this.changeWalletPW) req.newWalletPW = page.newPW.value\n    const res = await postJSON('/api/reconfigurewallet', req)\n    page.appPW.value = ''\n    page.newPW.value = ''\n    loaded()\n    if (!app.checkResponse(res, true)) {\n      page.reconfigErr.textContent = res.msg\n      Doc.show(page.reconfigErr)\n      return\n    }\n    this.showMarkets(this.reconfigAsset)\n  }\n\n  /* lock instructs the API to lock the wallet. */\n  async lock (assetID, asset) {\n    const page = this.page\n    const loaded = app.loading(page.walletForm)\n    const res = await postJSON('/api/closewallet', { assetID: assetID })\n    loaded()\n    if (!app.checkResponse(res)) return\n    const a = asset.actions\n    Doc.hide(a.withdraw, a.lock, a.deposit)\n    Doc.show(a.unlock)\n  }\n\n  /* handleBalance handles notifications updating a wallet's balance. */\n  handleBalanceNote (note) {\n    const td = this.page.walletTable.querySelector(`[data-balance-target=\"${note.assetID}\"]`)\n    td.textContent = (note.balance.available / 1e8).toFixed(8)\n  }\n\n  /*\n   * handleWalletStateNote is a handler for both the 'walletstate' and\n   * 'walletconfig' notifications.\n   */\n  handleWalletStateNote (note) {\n    this.rowInfos[note.wallet.assetID].stateIcons.readWallet(note.wallet)\n  }\n\n  /*\n   * unload is called by the Application when the user navigates away from\n   * the /wallets page.\n   */\n  unload () {\n    Doc.unbind(document, 'keyup', this.keyup)\n  }\n}\n\n/*\n * Given a market object as created with makeMarket, prettyMarketName will\n * create a string ABC-XYZ, where ABC and XYZ are the upper-case ticker symbols\n * for the base and quote assets respectively.\n */\nfunction prettyMarketName (market) {\n  return `${market.basesymbol.toUpperCase()}-${market.quotesymbol.toUpperCase()}`\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport State from './state'\nimport { postJSON } from './http'\nimport * as forms from './forms'\n\nconst animationLength = 300\n\nlet app\n\nexport default class SettingsPage extends BasePage {\n  constructor (application, body) {\n    super()\n    app = application\n    this.body = body\n    const page = this.page = Doc.parsePage(body, [\n      'darkMode', 'commitHash',\n      'addADex',\n      // Form to configure DEX server\n      'dexAddrForm', 'dexAddr', 'certFile', 'selectedCert', 'removeCert', 'addCert',\n      'submitDEXAddr', 'dexAddrErr',\n      // Form to confirm DEX registration and pay fee\n      'forms', 'confirmRegForm', 'feeDisplay', 'dexDCRLotSize', 'appPass', 'submitConfirm', 'regErr',\n      // Export Account\n      'exchanges', 'authorizeAccountExportForm', 'exportAccountAppPass', 'authorizeExportAccountConfirm',\n      'exportAccountHost', 'exportAccountErr',\n      // Import Account\n      'importAccount', 'authorizeAccountImportForm', 'authorizeImportAccountConfirm', 'importAccountAppPass',\n      'accountFile', 'selectedAccount', 'removeAccount', 'addAccount', 'importAccountErr',\n      // Disable Account\n      'disableAccount', 'disableAccountForm', 'disableAccountConfirm', 'disableAccountAppPW',\n      'disableAccountHost', 'disableAccountErr',\n      // Change App Password\n      'changeAppPW', 'changeAppPWForm', 'appPW', 'newAppPW', 'confirmNewPW',\n      'submitNewPW', 'changePWErrMsg',\n      // Others\n      'showPokes'\n    ])\n\n    Doc.bind(page.darkMode, 'click', () => {\n      State.dark(page.darkMode.checked)\n      if (page.darkMode.checked) {\n        document.body.classList.add('dark')\n      } else {\n        document.body.classList.remove('dark')\n      }\n    })\n\n    Doc.bind(page.showPokes, 'click', () => {\n      const show = page.showPokes.checked\n      State.setCookie('popups', show ? '1' : '0')\n      app.showPopups = show\n    })\n\n    page.commitHash.textContent = app.commitHash.substring(0, 7)\n    Doc.bind(page.addADex, 'click', () => this.showForm(page.dexAddrForm))\n    Doc.bind(page.certFile, 'change', () => this.onCertFileChange())\n    Doc.bind(page.removeCert, 'click', () => this.clearCertFile())\n    Doc.bind(page.addCert, 'click', () => this.page.certFile.click())\n    forms.bind(page.dexAddrForm, page.submitDEXAddr, () => this.verifyDEX())\n    forms.bind(page.confirmRegForm, page.submitConfirm, () => this.registerDEX())\n    forms.bind(page.authorizeAccountExportForm, page.authorizeExportAccountConfirm, () => this.exportAccount())\n    forms.bind(page.disableAccountForm, page.disableAccountConfirm, () => this.disableAccount())\n\n    const exchangesDiv = page.exchanges\n    if (typeof app.user.exchanges !== 'undefined') {\n      for (const host of Object.keys(app.user.exchanges)) {\n        // Bind export account button click event.\n        const exportAccountButton = Doc.tmplElement(exchangesDiv, `exportAccount-${host}`)\n        Doc.bind(exportAccountButton, 'click', () => this.prepareAccountExport(host, page.authorizeAccountExportForm))\n        // Bind disable account button click event.\n        const disableAccountButton = Doc.tmplElement(exchangesDiv, `disableAccount-${host}`)\n        Doc.bind(disableAccountButton, 'click', () => this.prepareAccountDisable(host, page.disableAccountForm))\n      }\n    }\n\n    Doc.bind(page.importAccount, 'click', () => this.prepareAccountImport(page.authorizeAccountImportForm))\n    forms.bind(page.authorizeAccountImportForm, page.authorizeImportAccountConfirm, () => this.importAccount())\n\n    Doc.bind(page.changeAppPW, 'click', () => this.showForm(page.changeAppPWForm))\n    forms.bind(page.changeAppPWForm, page.submitNewPW, () => this.changeAppPW())\n\n    Doc.bind(page.accountFile, 'change', () => this.onAccountFileChange())\n    Doc.bind(page.removeAccount, 'click', () => this.clearAccountFile())\n    Doc.bind(page.addAccount, 'click', () => this.page.accountFile.click())\n\n    const closePopups = () => {\n      Doc.hide(page.forms)\n      page.appPass.value = ''\n    }\n\n    Doc.bind(page.forms, 'mousedown', e => {\n      if (!Doc.mouseInElement(e, this.currentForm)) { closePopups() }\n    })\n\n    this.keyup = e => {\n      if (e.key === 'Escape') {\n        closePopups()\n      }\n    }\n    Doc.bind(document, 'keyup', this.keyup)\n\n    page.forms.querySelectorAll('.form-closer').forEach(el => {\n      Doc.bind(el, 'click', () => { closePopups() })\n    })\n  }\n\n  async prepareAccountExport (host, authorizeAccountExportForm) {\n    const page = this.page\n    page.exportAccountHost.textContent = host\n    page.exportAccountErr.textContent = ''\n    this.showForm(authorizeAccountExportForm)\n  }\n\n  async prepareAccountDisable (host, disableAccountForm) {\n    const page = this.page\n    page.disableAccountHost.textContent = host\n    page.disableAccountErr.textContent = ''\n    this.showForm(disableAccountForm)\n  }\n\n  // exportAccount exports and downloads the account info.\n  async exportAccount () {\n    const page = this.page\n    const pw = page.exportAccountAppPass.value\n    const host = page.exportAccountHost.textContent\n    page.exportAccountAppPass.value = ''\n    const req = {\n      pw,\n      host\n    }\n    const loaded = app.loading(this.body)\n    const res = await postJSON('/api/exportaccount', req)\n    loaded()\n    if (!app.checkResponse(res)) {\n      page.exportAccountErr.textContent = res.msg\n      Doc.show(page.exportAccountErr)\n      return\n    }\n    const accountForExport = JSON.parse(JSON.stringify(res.account))\n    const a = document.createElement('a')\n    a.setAttribute('download', 'dcrAccount-' + host + '.json')\n    a.setAttribute('href', 'data:text/json,' + JSON.stringify(accountForExport, null, 2))\n    a.click()\n    Doc.hide(page.forms)\n  }\n\n  // disableAccount disables the account associated with the provided host.\n  async disableAccount () {\n    const page = this.page\n    const pw = page.disableAccountAppPW.value\n    const host = page.disableAccountHost.textContent\n    page.disableAccountAppPW.value = ''\n    const req = {\n      pw,\n      host\n    }\n    const loaded = app.loading(this.body)\n    const res = await postJSON('/api/disableaccount', req)\n    loaded()\n    if (!app.checkResponse(res, true)) {\n      page.disableAccountErr.textContent = res.msg\n      Doc.show(page.disableAccountErr)\n      return\n    }\n    Doc.hide(page.forms)\n    // Initial method of removing disabled account.\n    window.location.reload()\n  }\n\n  async onAccountFileChange () {\n    const page = this.page\n    const files = page.accountFile.files\n    if (!files.length) return\n    page.selectedAccount.textContent = files[0].name\n    Doc.show(page.removeAccount)\n    Doc.hide(page.addAccount)\n  }\n\n  /* clearAccountFile cleanup accountFile value and selectedAccount text */\n  clearAccountFile () {\n    const page = this.page\n    page.accountFile.value = ''\n    page.selectedAccount.textContent = this.defaultTLSText\n    Doc.hide(page.removeAccount)\n    Doc.show(page.addAccount)\n  }\n\n  async prepareAccountImport (authorizeAccountImportForm) {\n    const page = this.page\n    page.importAccountErr.textContent = ''\n    this.showForm(authorizeAccountImportForm)\n  }\n\n  // importAccount imports the account\n  async importAccount () {\n    const page = this.page\n    const pw = page.importAccountAppPass.value\n    page.importAccountAppPass.value = ''\n    let accountString = ''\n    if (page.accountFile.value) {\n      accountString = await page.accountFile.files[0].text()\n    }\n    let account\n    try {\n      account = JSON.parse(accountString)\n    } catch (e) {\n      page.importAccountErr.textContent = e.message\n      Doc.show(page.importAccountErr)\n      return\n    }\n    if (typeof account === 'undefined') {\n      page.importAccountErr.textContent = 'Account undefined.'\n      Doc.show(page.importAccountErr)\n      return\n    }\n    const req = {\n      pw: pw,\n      account: account\n    }\n    const loaded = app.loading(this.body)\n    const importResponse = await postJSON('/api/importaccount', req)\n    loaded()\n    if (!app.checkResponse(importResponse)) {\n      page.importAccountErr.textContent = importResponse.msg\n      Doc.show(page.importAccountErr)\n      return\n    }\n    const loginResponse = await postJSON('/api/login', { pass: pw })\n    if (!app.checkResponse(loginResponse)) {\n      page.importAccountErr.textContent = loginResponse.msg\n      Doc.show(page.importAccountErr)\n      return\n    }\n    await app.fetchUser()\n    Doc.hide(page.forms)\n    // Initial method of displaying imported account.\n    window.location.reload()\n  }\n\n  /* showForm shows a modal form with a little animation. */\n  async showForm (form) {\n    const page = this.page\n    this.currentForm = form\n    Doc.hide(page.dexAddrForm, page.confirmRegForm,\n      page.authorizeAccountExportForm, page.authorizeAccountImportForm,\n      page.disableAccountForm, page.changeAppPWForm)\n    form.style.right = '10000px'\n    Doc.show(page.forms, form)\n    const shift = (page.forms.offsetWidth + form.offsetWidth) / 2\n    await Doc.animate(animationLength, progress => {\n      form.style.right = `${(1 - progress) * shift}px`\n    }, 'easeOutHard')\n    form.style.right = '0'\n  }\n\n  /**\n   * onCertFileChange when the input certFile changed, read the file\n   * and setting cert name into text of selectedCert to display on the view\n   */\n  async onCertFileChange () {\n    const page = this.page\n    const files = page.certFile.files\n    if (!files.length) return\n    page.selectedCert.textContent = files[0].name\n    Doc.show(page.removeCert)\n    Doc.hide(page.addCert)\n  }\n\n  /* clearCertFile cleanup certFile value and selectedCert text */\n  clearCertFile () {\n    const page = this.page\n    page.certFile.value = ''\n    page.selectedCert.textContent = this.defaultTLSText\n    Doc.hide(page.removeCert)\n    Doc.show(page.addCert)\n  }\n\n  /* Get the reg fees for the DEX. */\n  async verifyDEX () {\n    const page = this.page\n    Doc.hide(page.dexAddrErr)\n    const addr = page.dexAddr.value\n    if (addr === '') {\n      page.dexAddrErr.textContent = 'URL cannot be empty'\n      Doc.show(page.dexAddrErr)\n      return\n    }\n\n    let cert = ''\n    if (page.certFile.value) {\n      cert = await page.certFile.files[0].text()\n    }\n\n    const loaded = app.loading(page.dexAddrForm)\n    const res = await postJSON('/api/getdexinfo', {\n      addr: addr,\n      cert: cert\n    })\n    loaded()\n    if (!app.checkResponse(res)) {\n      page.dexAddrErr.textContent = res.msg\n      Doc.show(page.dexAddrErr)\n      return\n    }\n    this.fee = res.xc.feeAsset.amount\n\n    page.feeDisplay.textContent = Doc.formatCoinValue(this.fee / 1e8)\n    const dcrAsset = res.xc.assets['42']\n    if (dcrAsset) page.dexDCRLotSize.textContent = Doc.formatCoinValue(dcrAsset.lotSize / 1e8)\n    await this.showForm(page.confirmRegForm)\n  }\n\n  /* Authorize DEX registration. */\n  async registerDEX () {\n    const page = this.page\n    Doc.hide(page.regErr)\n    let cert = ''\n    if (page.certFile.value) {\n      cert = await page.certFile.files[0].text()\n    }\n    const registration = {\n      addr: page.dexAddr.value,\n      pass: page.appPass.value,\n      fee: this.fee,\n      cert: cert\n    }\n    page.appPass.value = ''\n    const loaded = app.loading(page.confirmRegForm)\n    const res = await postJSON('/api/register', registration)\n    if (!app.checkResponse(res)) {\n      page.regErr.textContent = res.msg\n      Doc.show(page.regErr)\n      loaded()\n      return\n    }\n    page.dexAddr.value = ''\n    this.clearCertFile()\n    Doc.hide(page.forms)\n    await app.fetchUser()\n    loaded()\n    // Initial method of displaying added dex.\n    window.location.reload()\n  }\n\n  /* Change application password  */\n  async changeAppPW () {\n    const page = this.page\n    Doc.hide(page.changePWErrMsg)\n\n    const clearValues = () => {\n      page.appPW.value = ''\n      page.newAppPW.value = ''\n      page.confirmNewPW.value = ''\n    }\n    // Ensure password fields are nonempty.\n    if (!page.appPW.value || !page.newAppPW.value || !page.confirmNewPW.value) {\n      page.changePWErrMsg.textContent = 'app password cannot be empty'\n      Doc.show(page.changePWErrMsg)\n      clearValues()\n      return\n    }\n    // Ensure password confirmation matches.\n    if (page.newAppPW.value !== page.confirmNewPW.value) {\n      page.changePWErrMsg.textContent = 'password confirmation doesn\\'t match'\n      Doc.show(page.changePWErrMsg)\n      clearValues()\n      return\n    }\n    const loaded = app.loading(page.changeAppPW)\n    const req = {\n      appPW: page.appPW.value,\n      newAppPW: page.newAppPW.value\n    }\n    clearValues()\n    const res = await postJSON('/api/changeapppass', req)\n    loaded()\n    if (!app.checkResponse(res, true)) {\n      page.changePWErrMsg.textContent = res.msg\n      Doc.show(page.changePWErrMsg)\n      return\n    }\n    Doc.hide(page.forms)\n  }\n\n  /*\n   * unload is called by the Application when the user navigates away from\n   * the /settings page.\n   */\n  unload () {\n    Doc.unbind(document, 'keyup', this.keyup)\n  }\n}\n","export default class OrderBook {\n  constructor (mktBook, baseSymbol, quoteSymbol) {\n    this.base = mktBook.base\n    this.baseSymbol = baseSymbol\n    this.quote = mktBook.quote\n    this.quoteSymbol = quoteSymbol\n    // Books are sorted mid-gap first.\n    this.buys = mktBook.book.buys || []\n    this.sells = mktBook.book.sells || []\n  }\n\n  /* add adds an order to the order book. */\n  add (ord) {\n    const side = ord.sell ? this.sells : this.buys\n    side.splice(findIdx(side, ord.rate, !ord.sell), 0, ord)\n  }\n\n  /* remove removes an order from the order book. */\n  remove (token) {\n    if (this.removeFromSide(this.sells, token)) return\n    this.removeFromSide(this.buys, token)\n  }\n\n  /* removeFromSide removes an order from the list of orders. */\n  removeFromSide (side, token) {\n    const [ord, i] = this.findOrder(side, token)\n    if (ord) {\n      side.splice(i, 1)\n      return true\n    }\n    return false\n  }\n\n  /* findOrder finds an order in a specified side */\n  findOrder (side, token) {\n    for (const i in side) {\n      if (side[i].token === token) {\n        return [side[i], i]\n      }\n    }\n    return [null, -1]\n  }\n\n  /* updates the remaining quantity of an order. */\n  updateRemaining (token, qty) {\n    if (this.updateRemainingSide(this.sells, token, qty)) return\n    this.updateRemainingSide(this.buys, token, qty)\n  }\n\n  /*\n   * updateRemainingSide looks for the order in the side and updates the\n   * quantity, returning true on success, false if order not found.\n   */\n  updateRemainingSide (side, token, qty) {\n    const ord = this.findOrder(side, token)[0]\n    if (ord) {\n      ord.qty = qty\n      return true\n    }\n    return false\n  }\n\n  /*\n   * setEpoch sets the current epoch and clear any orders from previous epochs.\n   */\n  setEpoch (epochIdx) {\n    const approve = ord => ord.epoch === undefined || ord.epoch === 0 || ord.epoch === epochIdx\n    this.sells = this.sells.filter(approve)\n    this.buys = this.buys.filter(approve)\n  }\n\n  /* empty will return true if both the buys and sells lists are empty. */\n  empty () {\n    return !this.sells.length && !this.buys.length\n  }\n\n  /* count is the total count of both buy and sell orders. */\n  count () {\n    return this.sells.length + this.buys.length\n  }\n\n  /* bestGapOrder will return the best non-epoch order if one exists, or the\n   * best epoch order if there are only epoch orders, or null if there are no\n   * orders.\n   */\n  bestGapOrder (side) {\n    let best = null\n    for (const ord of side) {\n      if (!ord.epoch) return ord\n      if (!best) {\n        best = ord\n      }\n    }\n    return best\n  }\n\n  bestGapBuy () {\n    return this.bestGapOrder(this.buys)\n  }\n\n  bestGapSell () {\n    return this.bestGapOrder(this.sells)\n  }\n}\n\n/*\n * findIdx find the index at which to insert the order into the list of orders.\n */\nfunction findIdx (side, rate, less) {\n  for (const i in side) {\n    if ((side[i].rate < rate) === less) return i\n  }\n  return side.length\n}\n","import Doc from './doc'\nimport State from './state'\n\nconst bind = Doc.bind\nconst unbind = Doc.unbind\nconst PIPI = 2 * Math.PI\nconst plusChar = String.fromCharCode(59914)\nconst minusChar = String.fromCharCode(59915)\n\nconst darkTheme = {\n  axisLabel: '#b1b1b1',\n  gridBorder: '#3a3a3a',\n  gridLines: '#2a2a2a',\n  gapLine: '#6b6b6b',\n  value: '#9a9a9a',\n  zoom: '#5b5b5b',\n  zoomHover: '#aaa',\n  sellLine: '#ae3333',\n  buyLine: '#05a35a',\n  sellFill: '#591a1a',\n  buyFill: '#02572f',\n  crosshairs: '#888',\n  legendFill: 'black',\n  legendText: '#d5d5d5'\n}\n\nconst lightTheme = {\n  axisLabel: '#1b1b1b',\n  gridBorder: '#3a3a3a',\n  gridLines: '#dadada',\n  gapLine: '#595959',\n  value: '#4d4d4d',\n  zoom: '#777',\n  zoomHover: '#333',\n  sellLine: '#99302b',\n  buyLine: '#207a46',\n  sellFill: '#bd5959',\n  buyFill: '#4cad75',\n  crosshairs: '#595959',\n  legendFill: '#e6e6e6',\n  legendText: '#1b1b1b'\n}\n\n// DepthChart is a javascript Canvas-based depth chart renderer.\nexport class DepthChart {\n  constructor (parent, reporters, zoom) {\n    this.theme = State.isDark() ? darkTheme : lightTheme\n    this.canvas = document.createElement('canvas')\n    this.parent = parent\n    this.reporters = reporters\n    this.ctx = this.canvas.getContext('2d')\n    this.ctx.textAlign = 'center'\n    this.ctx.textBaseline = 'middle'\n    this.book = null\n    this.dataExtents = null\n    this.zoomLevel = zoom\n    this.lotSize = null\n    this.rateStep = null\n    this.lines = []\n    this.markers = {\n      buys: [],\n      sells: []\n    }\n    parent.appendChild(this.canvas)\n    // Mouse handling\n    this.mousePos = null\n    bind(this.canvas, 'mousemove', e => {\n      // this.rect will be set in resize().\n      this.mousePos = {\n        x: e.clientX - this.rect.left,\n        y: e.clientY - this.rect.y\n      }\n      this.draw()\n    })\n    bind(this.canvas, 'mouseleave', () => {\n      this.mousePos = null\n      this.draw()\n    })\n    // Scrolling by wheel is smoother when the rate is slightly limited.\n    this.wheelLimiter = null\n    this.wheeled = () => {\n      this.wheelLimiter = setTimeout(() => { this.wheelLimiter = null }, 100)\n    }\n\n    bind(this.canvas, 'wheel', e => { this.wheel(e) })\n    this.resize = h => { this.resize_(h) }\n    bind(window, 'resize', () => { this.resize(parent.clientHeight) })\n    bind(this.canvas, 'click', e => { this.click(e) })\n    this.resize(parent.clientHeight)\n  }\n\n  // The market handler will call unattach when the markets page is unloaded.\n  unattach () {\n    unbind(window, 'resize', this.resize)\n  }\n\n  // resize_ is a 'resize' event handler.\n  resize_ (parentHeight) {\n    this.canvas.width = this.parent.clientWidth\n    this.canvas.height = parentHeight - 20 // magic number derived from a soup of css values.\n    const xLblHeight = 30\n    const yGuess = 40 // y label width guess. Will be adjusted when drawn.\n    const plotExtents = new Extents(yGuess, this.canvas.width, 10, this.canvas.height - xLblHeight)\n    const xLblExtents = new Extents(yGuess, this.canvas.width, this.canvas.height - xLblHeight, this.canvas.height)\n    const yLblExtents = new Extents(0, yGuess, 10, this.canvas.height - xLblHeight)\n    this.plotRegion = new Region(this.ctx, plotExtents)\n    this.xRegion = new Region(this.ctx, xLblExtents)\n    this.yRegion = new Region(this.ctx, yLblExtents)\n    // The button region extents are set during drawing.\n    this.zoomInBttn = new Region(this.ctx, new Extents(0, 0, 0, 0))\n    this.zoomOutBttn = new Region(this.ctx, new Extents(0, 0, 0, 0))\n    this.rect = this.canvas.getBoundingClientRect()\n    if (this.book) this.draw()\n  }\n\n  // wheel is a mousewheel event handler.\n  wheel (e) {\n    this.zoom(e.deltaY < 0)\n    e.preventDefault()\n  }\n\n  // zoom zooms the current view in or out. bigger=true is zoom in.\n  zoom (bigger) {\n    if (!this.zoomLevel) return\n    if (this.wheelLimiter) return\n    if (!this.book.buys || !this.book.sells) return\n    this.wheeled()\n    // Zoom in to 66%, but out to 150% = 1 / (2/3) so that the same zoom levels\n    // are hit when reversing direction.\n    this.zoomLevel *= bigger ? 2 / 3 : 3 / 2\n    this.zoomLevel = clamp(this.zoomLevel, 0.005, 2)\n    this.draw()\n    this.reporters.zoom(this.zoomLevel)\n  }\n\n  // click is the canvas 'click' event handler.\n  click (e) {\n    if (!this.dataExtents) return\n    const x = e.clientX - this.rect.left\n    const y = e.clientY - this.rect.y\n    if (this.zoomInBttn.contains(x, y)) { this.zoom(true); return }\n    if (this.zoomOutBttn.contains(x, y)) { this.zoom(false); return }\n    const translator = this.plotRegion.translator(this.dataExtents)\n    this.reporters.click(translator.unx(x))\n  }\n\n  // clear the canvas.\n  clear () {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n  }\n\n  // set sets the current data set and draws.\n  set (book, lotSize, rateStep) {\n    this.book = book\n    this.lotSize = lotSize / 1e8\n    this.rateStep = rateStep / 1e8\n    this.baseTicker = book.baseSymbol.toUpperCase()\n    this.quoteTicker = book.quoteSymbol.toUpperCase()\n    if (!this.zoomLevel) {\n      const [midGap, gapWidth] = this.gap()\n      // Default to 5% zoom, but with a minimum of 5 * midGap, but still observing\n      // the hard cap of 200%.\n      const minZoom = Math.max(gapWidth / midGap * 5, 0.05)\n      this.zoomLevel = Math.min(minZoom, 2)\n    }\n    this.draw()\n  }\n\n  // Draw the chart.\n  // 1. Calculate the data extents and translate the order book data to a\n  //    cumulative form.\n  // 2. Draw axis ticks and grid, mid-gap line and value, zoom buttons, mouse\n  //    position indicator...\n  // 4. Tick labels.\n  // 5. Data.\n  // 6. Epoch line legend.\n  // 7. Hover legend.\n  draw () {\n    // if connection fails it is not possible to get book.\n    if (!this.book) return\n\n    this.clear()\n    // if (!this.book || this.book.empty()) return\n\n    this.ctx.textAlign = 'center'\n    this.ctx.textBaseline = 'middle'\n    const mousePos = this.mousePos\n    const buys = this.book.buys\n    const sells = this.book.sells\n    const [midGap, gapWidth] = this.gap()\n\n    const halfWindow = this.zoomLevel * midGap / 2\n    const high = midGap + halfWindow\n    const low = midGap - halfWindow\n\n    // Get a sorted copy of the markers list.\n    const buyMarkers = [...this.markers.buys]\n    const sellMarkers = [...this.markers.sells]\n    buyMarkers.sort((a, b) => b.rate - a.rate)\n    sellMarkers.sort((a, b) => a.rate - b.rate)\n    const markers = []\n\n    const buyDepth = []\n    const buyEpoch = []\n    const sellDepth = []\n    const sellEpoch = []\n    const volumeReport = {\n      buyBase: 0,\n      buyQuote: 0,\n      sellBase: 0,\n      sellQuote: 0\n    }\n    let sum = 0\n    // The epoch line is above the non-epoch region, so the epochSum y value\n    // must account for non-epoch orders too.\n    let epochSum = 0\n\n    for (let i = 0; i < buys.length; i++) {\n      const ord = buys[i]\n      epochSum += ord.qty\n      if (ord.rate >= low) buyEpoch.push([ord.rate, epochSum])\n      if (ord.epoch) continue\n      sum += ord.qty\n      buyDepth.push([ord.rate, sum])\n      volumeReport.buyBase += ord.qty\n      volumeReport.buyQuote += ord.qty * ord.rate\n      while (buyMarkers.length && floatCompare(buyMarkers[0].rate, ord.rate)) {\n        const mark = buyMarkers.shift()\n        markers.push({\n          rate: mark.rate,\n          qty: ord.epoch ? epochSum : sum,\n          sell: ord.sell,\n          active: mark.active\n        })\n      }\n    }\n    const buySum = buyDepth.length ? last(buyDepth)[1] : 0\n    buyDepth.push([low, buySum])\n    const epochBuySum = buyEpoch.length ? last(buyEpoch)[1] : 0\n    buyEpoch.push([low, epochBuySum])\n\n    epochSum = sum = 0\n    for (let i = 0; i < sells.length; i++) {\n      const ord = sells[i]\n      epochSum += ord.qty\n      if (ord.rate <= high) sellEpoch.push([ord.rate, epochSum])\n      if (ord.epoch) continue\n      sum += ord.qty\n      sellDepth.push([ord.rate, sum])\n      volumeReport.sellBase += ord.qty\n      volumeReport.sellQuote += ord.qty * ord.rate\n      while (sellMarkers.length && floatCompare(sellMarkers[0].rate, ord.rate)) {\n        const mark = sellMarkers.shift()\n        markers.push({\n          rate: mark.rate,\n          qty: ord.epoch ? epochSum : sum,\n          sell: ord.sell,\n          active: mark.active\n        })\n      }\n    }\n    // Add a data point going to the left so that the data doesn't end with a\n    // vertical line.\n    const sellSum = sellDepth.length ? last(sellDepth)[1] : 0\n    sellDepth.push([high, sellSum])\n    const epochSellSum = sellEpoch.length ? last(sellEpoch)[1] : 0\n    sellEpoch.push([high, epochSellSum])\n\n    // Add ~30px padding to the top of the chart.\n    const h = this.xRegion.extents.y.min\n    const growthFactor = (h + 30) / h\n    const maxY = (epochSellSum && epochBuySum ? Math.max(epochBuySum, epochSellSum) : epochSellSum || epochBuySum || 1) * growthFactor\n\n    const dataExtents = new Extents(low, high, 0, maxY)\n    this.dataExtents = dataExtents\n\n    // Draw the axis tick labels.\n    const ctx = this.ctx\n    ctx.font = '12px \\'sans\\', sans-serif'\n    ctx.fillStyle = this.theme.axisLabel\n\n    const yLabels = makeLabels(ctx, this.plotRegion.height(), dataExtents.y.min,\n      dataExtents.y.max, 50, this.lotSize, this.book.baseSymbol)\n    // Reassign the width of the y-label column to accommodate the widest text.\n    const yAxisWidth = yLabels.widest * 1.5\n    this.yRegion.extents.x.max = yAxisWidth\n    this.plotRegion.extents.x.min = yAxisWidth\n    this.xRegion.extents.x.min = yAxisWidth\n    const xLabels = makeLabels(ctx, this.plotRegion.width(), dataExtents.x.min,\n      dataExtents.x.max, 100, this.rateStep, `${this.book.quoteSymbol}/${this.book.baseSymbol}`)\n\n    // A function to be run at the end if there is legend data to display.\n    let mouseData\n\n    // Draw the grid.\n    ctx.lineWidth = 1\n    this.plotRegion.plot(dataExtents, (ctx, tools) => {\n      // first, a square around the plot area.\n      ctx.strokeStyle = this.theme.gridBorder\n      const extX = dataExtents.x\n      const extY = dataExtents.y\n      ctx.beginPath()\n      tools.dataCoords(() => {\n        ctx.moveTo(extX.min, extY.min)\n        ctx.lineTo(extX.min, extY.max)\n        ctx.lineTo(extX.max, extY.max)\n        ctx.lineTo(extX.max, extY.min)\n        ctx.lineTo(extX.min, extY.min)\n      })\n      ctx.stroke()\n      // for each x label, draw a vertical line\n      ctx.strokeStyle = this.theme.gridLines\n      xLabels.lbls.forEach(lbl => {\n        line(ctx, tools.x(lbl.val), tools.y(0), tools.x(lbl.val), tools.y(extY.max))\n      })\n      // horizontal lines for y labels.\n      yLabels.lbls.forEach(lbl => {\n        line(ctx, tools.x(extX.min), tools.y(lbl.val), tools.x(extX.max), tools.y(lbl.val))\n      })\n      // draw a line to indicate mid-gap\n      ctx.lineWidth = 2.5\n      ctx.strokeStyle = this.theme.gapLine\n      line(ctx, tools.x(midGap), tools.y(0), tools.x(midGap), tools.y(0.3 * extY.max))\n\n      ctx.font = '30px \\'demi-sans\\', sans-serif'\n      ctx.fillStyle = this.theme.value\n      const y = 0.5 * extY.max\n      ctx.fillText(formatLabelValue(midGap), tools.x(midGap), tools.y(y))\n      ctx.font = '12px \\'sans\\', sans-serif'\n      // ctx.fillText('mid-market price', tools.x(midGap), tools.y(y) + 24)\n      ctx.fillText(`${(gapWidth / midGap * 100).toFixed(2)}% spread`,\n        tools.x(midGap), tools.y(y) + 24)\n\n      // Draw zoom buttons.\n      const topCenterX = this.plotRegion.extents.midX\n      const topCenterY = tools.y(maxY * 0.9)\n      const zoomPct = dataExtents.xRange / midGap * 100\n      const zoomText = `${zoomPct.toFixed(1)}%`\n      const w = ctx.measureText(zoomText).width\n      ctx.font = '13px \\'sans\\', sans-serif'\n      ctx.fillText(zoomText, topCenterX, topCenterY + 1)\n      // define the region for the zoom button\n      const bttnSize = 20\n      const xPad = 10\n      let bttnLeft = topCenterX - w / 2 - xPad - bttnSize\n      const bttnTop = topCenterY - bttnSize / 2\n      this.zoomOutBttn.setExtents(\n        bttnLeft,\n        bttnLeft + bttnSize,\n        bttnTop,\n        bttnTop + bttnSize\n      )\n      let hover = mousePos && this.zoomOutBttn.contains(mousePos.x, mousePos.y)\n      this.zoomOutBttn.plot(new Extents(0, 1, 0, 1), (ctx, tools) => {\n        ctx.font = '12px \\'icomoon\\''\n        ctx.fillStyle = this.theme.zoom\n        if (hover) {\n          ctx.fillStyle = this.theme.zoomHover\n          ctx.font = '13px \\'icomoon\\''\n        }\n        ctx.fillText(minusChar, this.zoomOutBttn.extents.midX, this.zoomOutBttn.extents.midY)\n      })\n      bttnLeft = topCenterX + w / 2 + xPad\n      this.zoomInBttn.setExtents(\n        bttnLeft,\n        bttnLeft + bttnSize,\n        bttnTop,\n        bttnTop + bttnSize\n      )\n      hover = mousePos && this.zoomInBttn.contains(mousePos.x, mousePos.y)\n      this.zoomInBttn.plot(new Extents(0, 1, 0, 1), (ctx, tools) => {\n        ctx.font = '12px \\'icomoon\\''\n        ctx.fillStyle = this.theme.zoom\n        if (hover) {\n          ctx.fillStyle = this.theme.zoomHover\n          ctx.font = '14px \\'icomoon\\''\n        }\n        ctx.fillText(plusChar, this.zoomInBttn.extents.midX, this.zoomInBttn.extents.midY)\n      })\n\n      // Draw a dotted vertical line where the mouse is, and a dot at the level\n      // of the depth line.\n      const drawLine = (x, color) => {\n        if (x > high || x < low) return\n        ctx.save()\n        ctx.setLineDash([3, 5])\n        ctx.lineWidth = 1.5\n        ctx.strokeStyle = color\n        line(ctx, tools.x(x), tools.y(0), tools.x(x), tools.y(maxY))\n        ctx.restore()\n      }\n\n      for (const line of this.lines || []) {\n        drawLine(line.rate, line.color)\n      }\n\n      const tolerance = (high - low) * 0.005\n      const hoverMarkers = []\n      for (const marker of markers || []) {\n        const hovered = (mousePos && withinTolerance(marker.rate, tools.unx(mousePos.x), tolerance))\n        if (hovered) hoverMarkers.push(marker.rate)\n        ctx.save()\n        ctx.lineWidth = (hovered || marker.active) ? 5 : 3\n        ctx.strokeStyle = marker.sell ? this.theme.sellLine : this.theme.buyLine\n        ctx.fillStyle = marker.sell ? this.theme.sellFill : this.theme.buyFill\n        const size = (hovered || marker.active) ? 10 : 8\n        ctx.beginPath()\n        const tip = {\n          x: tools.x(marker.rate),\n          y: tools.y(marker.qty) - 8\n        }\n        const top = tip.y - (Math.sqrt(3) * size / 2) // cos(30)\n        ctx.moveTo(tip.x, tip.y)\n        ctx.lineTo(tip.x - size / 2, top)\n        ctx.lineTo(tip.x + size / 2, top)\n        ctx.closePath()\n        ctx.stroke()\n        ctx.fill()\n        ctx.restore()\n      }\n\n      // If the mouse is in the chart area, draw the crosshairs.\n      if (!mousePos) return\n      if (!this.plotRegion.contains(mousePos.x, mousePos.y)) return\n      // The mouse is in the plot region. Get the data coordinates and find the\n      // side and depth for the x value.\n      const dataX = tools.unx(mousePos.x)\n      let evalSide = sellDepth\n      let trigger = (ptX) => ptX >= dataX\n      let dotColor = this.theme.sellLine\n      if (dataX < midGap) {\n        evalSide = buyDepth\n        trigger = (ptX) => ptX <= dataX\n        dotColor = this.theme.buyLine\n      }\n      let bestDepth = evalSide[0]\n      for (let i = 0; i < evalSide.length; i++) {\n        const pt = evalSide[i]\n        if (trigger(pt[0])) break\n        bestDepth = pt\n      }\n      drawLine(dataX, this.theme.crosshairs, true)\n      mouseData = {\n        rate: dataX,\n        depth: bestDepth[1],\n        dotColor: dotColor,\n        yAxisWidth: yAxisWidth,\n        hoverMarkers: hoverMarkers\n      }\n    })\n\n    // Print the y labels.\n    this.yRegion.plot(new Extents(0, 1, 0, maxY), (ctx, tools) => {\n      const centerY = maxY / 2\n      let lastY = 0\n      let unitCenter = centerY\n      yLabels.lbls.forEach(lbl => {\n        ctx.fillText(lbl.txt, tools.x(0.5), tools.y(lbl.val))\n        if (centerY >= lastY && centerY < lbl.val) {\n          unitCenter = (lastY + lbl.val) / 2\n        }\n        lastY = lbl.val\n      })\n      ctx.fillText(this.baseTicker, tools.x(0.5), tools.y(unitCenter))\n    }, true)\n\n    // Print the x labels\n    this.xRegion.plot(new Extents(low, high, 0, 1), (ctx, tools) => {\n      const centerX = (high + low) / 2\n      let lastX = low\n      let unitCenter = centerX\n      xLabels.lbls.forEach(lbl => {\n        ctx.fillText(lbl.txt, tools.x(lbl.val), tools.y(0.5))\n        if (centerX >= lastX && centerX < lbl.val) {\n          unitCenter = (lastX + lbl.val) / 2\n        }\n        lastX = lbl.val\n      })\n      ctx.font = '11px \\'sans\\', sans-serif'\n      ctx.fillText(`${this.quoteTicker}/`, tools.x(unitCenter), tools.y(0.63))\n      ctx.fillText(this.baseTicker, tools.x(unitCenter), tools.y(0.23))\n    }, true)\n\n    // Draw the epoch lines\n    this.ctx.lineWidth = 1.5\n    ctx.setLineDash([3, 3])\n    // epoch sells\n    ctx.fillStyle = this.theme.sellFill\n    ctx.strokeStyle = this.theme.sellLine\n    this.drawDepth(sellEpoch)\n    // epoch buys\n    ctx.fillStyle = this.theme.buyFill\n    ctx.strokeStyle = this.theme.buyLine\n    this.drawDepth(buyEpoch)\n\n    // Draw the book depth.\n    this.ctx.lineWidth = 2.5\n    ctx.setLineDash([])\n    // book sells\n    ctx.fillStyle = this.theme.sellFill\n    ctx.strokeStyle = this.theme.sellLine\n    this.drawDepth(sellDepth)\n    // book buys\n    ctx.fillStyle = this.theme.buyFill\n    ctx.strokeStyle = this.theme.buyLine\n    this.drawDepth(buyDepth)\n\n    // Display the dot at the intersection of the mouse hover line and the depth\n    // line. This should be drawn after the depths.\n    if (mouseData) {\n      this.plotRegion.plot(dataExtents, (ctx, tools) => {\n        dot(ctx, tools.x(mouseData.rate), tools.y(mouseData.depth), mouseData.dotColor, 5)\n      })\n    }\n\n    // Report the book volumes.\n    this.reporters.volume(volumeReport)\n    this.reporters.mouse(mouseData)\n  }\n\n  // Draw a single side's depth chart data.\n  drawDepth (depth) {\n    const firstPt = depth[0]\n    let y = firstPt[1]\n    let x\n    this.plotRegion.plot(this.dataExtents, (ctx, tools) => {\n      tools.dataCoords(() => {\n        ctx.beginPath()\n        ctx.moveTo(firstPt[0], firstPt[1])\n        for (let i = 0; i < depth.length; i++) {\n          // Set x, but don't set y until we draw the horizontal line.\n          x = depth[i][0]\n          ctx.lineTo(x, y)\n          // If this is past the render edge, quit drawing.\n          y = depth[i][1]\n          ctx.lineTo(x, y)\n        }\n      })\n      ctx.stroke()\n      tools.dataCoords(() => {\n        ctx.lineTo(x, 0)\n        ctx.lineTo(firstPt[0], 0)\n      })\n      ctx.closePath()\n      ctx.globalAlpha = 0.25\n      ctx.fill()\n    })\n  }\n\n  gap () {\n    const [b, s] = [this.book.bestGapBuy(), this.book.bestGapSell()]\n    if (!b) {\n      if (!s) return [1, 0]\n      return [s.rate, 0]\n    } else if (!s) return [b.rate, 0]\n    return [(s.rate + b.rate) / 2, s.rate - b.rate]\n  }\n\n  setLines (lines) {\n    this.lines = lines\n  }\n\n  setMarkers (markers) {\n    this.markers = markers\n  }\n}\n\n// Extents holds a min and max in both the x and y directions, and provides\n// getters for related data.\nclass Extents {\n  constructor (xMin, xMax, yMin, yMax) {\n    this.setExtents(xMin, xMax, yMin, yMax)\n  }\n\n  setExtents (xMin, xMax, yMin, yMax) {\n    this.x = {\n      min: xMin,\n      max: xMax\n    }\n    this.y = {\n      min: yMin,\n      max: yMax\n    }\n  }\n\n  get xRange () {\n    return this.x.max - this.x.min\n  }\n\n  get midX () {\n    return (this.x.max + this.x.min) / 2\n  }\n\n  get yRange () {\n    return this.y.max - this.y.min\n  }\n\n  get midY () {\n    return (this.y.max + this.y.min) / 2\n  }\n}\n\n// Region applies an Extents to the canvas, providing utilities for coordinate\n// transformations and restricting drawing to a specified region of the canvas.\nclass Region {\n  constructor (context, extents) {\n    this.context = context\n    this.extents = extents\n  }\n\n  setExtents (xMin, xMax, yMin, yMax) {\n    this.extents.setExtents(xMin, xMax, yMin, yMax)\n  }\n\n  width () {\n    return this.extents.xRange\n  }\n\n  height () {\n    return this.extents.yRange\n  }\n\n  contains (x, y) {\n    const ext = this.extents\n    return (x < ext.x.max && x > ext.x.min &&\n      y < ext.y.max && y > ext.y.min)\n  }\n\n  // A translator provides 4 function for coordinate transformations. x and y\n  // translate data coordinates to canvas coordinates for the specified data\n  // Extents. unx and uny translate canvas coordinates to data coordinates.\n  translator (dataExtents) {\n    const region = this.extents\n    const xMin = dataExtents.x.min\n    // const xMax = dataExtents.x.max\n    const yMin = dataExtents.y.min\n    // const yMax = dataExtents.y.max\n    const yRange = dataExtents.yRange\n    const xRange = dataExtents.xRange\n    const screenMinX = region.x.min\n    const screenW = region.x.max - screenMinX\n    const screenMaxY = region.y.max\n    const screenH = screenMaxY - region.y.min\n    const xFactor = screenW / xRange\n    const yFactor = screenH / yRange\n    return {\n      x: x => (x - xMin) * xFactor + screenMinX,\n      y: y => screenMaxY - (y - yMin) * yFactor,\n      unx: x => (x - screenMinX) / xFactor + xMin,\n      uny: y => yMin - (y - screenMaxY) / yFactor\n    }\n  }\n\n  // Clear the region.\n  clear () {\n    const ext = this.extents\n    this.ctx.clearRect(ext.x.min, ext.y.min, ext.xRange, ext.yRange)\n  }\n\n  // plot allows some drawing to be performed directly in data coordinates.\n  // Most actual drawing functions like ctx.stroke and ctx.fillRect should not\n  // be called from inside the provided drawFunc, but ctx.moveTo and ctx.LineTo\n  // are fine.\n  plot (dataExtents, drawFunc, skipMask) {\n    const ctx = this.context\n    const region = this.extents\n    ctx.save() // Save the original state\n    if (!skipMask) {\n      ctx.beginPath()\n      ctx.rect(region.x.min, region.y.min, region.xRange, region.yRange)\n      ctx.clip()\n    }\n\n    // The drawFunc will be passed a set of tool that can be used to assist\n    // drawing. The tools start with the transformation functions.\n    const tools = this.translator(dataExtents)\n\n    // Create a transformation that allows drawing in data coordinates. It's\n    // not advisable to stroke or add text with this transform in place, as the\n    // result will be distorted. You can however use ctx.moveTo and ctx.lineTo\n    // with this transform in place using data coordinates, and remove the\n    // transform before stroking. The dataCoords method of the supplied tool\n    // provides this functionality.\n    const yRange = dataExtents.yRange\n    const xFactor = region.xRange / dataExtents.xRange\n    const yFactor = region.yRange / yRange\n    const xMin = dataExtents.x.min\n    const yMin = dataExtents.y.min\n    // These translation factors are complicated because the (0, 0) of the\n    // region is not necessarily the (0, 0) of the canvas.\n    const tx = (region.x.min + xMin) - xMin * xFactor\n    const ty = -region.y.min - (yRange - yMin) * yFactor\n    const setTransform = () => {\n      // Data coordinates are flipped about y. Flip the coordinates and\n      // translate top left corner to canvas (0, 0).\n      ctx.transform(1, 0, 0, -1, -xMin, yMin)\n      // Scale to data coordinates and shift into place for the region's offset\n      // on the canvas.\n      ctx.transform(xFactor, 0, 0, yFactor, tx, ty)\n    }\n    // Provide drawCoords as a tool to enable inline drawing.\n    tools.dataCoords = f => {\n      ctx.save()\n      setTransform()\n      f()\n      ctx.restore()\n    }\n\n    drawFunc(this.context, tools)\n    ctx.restore()\n  }\n}\n\n// makeLabels attempts to create the appropriate labels for the specified\n// screen size, context, and label spacing.\nfunction makeLabels (ctx, screenW, min, max, spacingGuess, step, unit) {\n  const n = screenW / spacingGuess\n  const diff = max - min\n  const tickGuess = diff / n\n  // make the tick spacing a multiple of the step\n  const tick = tickGuess + step - (tickGuess % step)\n  let x = min + tick - (min % tick)\n  const absMax = Math.max(Math.abs(max), Math.abs(min))\n  // The Math.round part is the minimum precision required to see the change in the numbers.\n  // The 2 accounts for the precision of the tick.\n  const sigFigs = Math.round(Math.log10(absMax / tick)) + 2\n  const pts = []\n  let widest = 0\n  while (x < max) {\n    x = Number(x.toPrecision(sigFigs))\n    const lbl = formatLabelValue(x)\n    widest = Math.max(widest, ctx.measureText(lbl).width)\n    pts.push({\n      val: x,\n      txt: lbl\n    })\n    x += tick\n  }\n  const unitW = ctx.measureText(unit).width\n  if (unitW > widest) widest = unitW\n  return {\n    widest: widest,\n    lbls: pts\n  }\n}\n\n// The last element of an array.\nfunction last (arr) {\n  return arr[arr.length - 1]\n}\n\n// line draws a line with the provided context.\nfunction line (ctx, x0, y0, x1, y1, skipStroke) {\n  ctx.beginPath()\n  ctx.moveTo(x0, y0)\n  ctx.lineTo(x1, y1)\n  if (!skipStroke) ctx.stroke()\n}\n\n// dot draws a circle with the provided context.\nfunction dot (ctx, x, y, color, radius) {\n  ctx.fillStyle = color\n  ctx.beginPath()\n  ctx.arc(x, y, radius, 0, PIPI)\n  ctx.fill()\n}\n\nfunction clamp (v, min, max) {\n  if (v < min) return min\n  if (v > max) return max\n  return v\n}\n\n// labelSpecs is specifications for axis tick labels.\nconst labelSpecs = {\n  minimumSignificantDigits: 4,\n  maximumSignificantDigits: 5\n}\n\n// formatLabelValue formats the provided value using the labelSpecs format.\nfunction formatLabelValue (x) {\n  return x.toLocaleString('en-us', labelSpecs)\n}\n\nfunction floatCompare (a, b) {\n  return withinTolerance(a, b, 1e-8)\n}\n\nfunction withinTolerance (a, b, tolerance) {\n  return Math.abs(a - b) < Math.abs(tolerance)\n}\n","import Doc from './doc'\n\nexport const Limit = 1\nexport const Market = 2\nexport const CANCEL = 3\n\n/* The time-in-force specifiers are a mirror of dex/order.TimeInForce. */\nexport const ImmediateTiF = 0\nexport const StandingTiF = 1\n\n/* The order statuses are a mirror of dex/order.OrderStatus. */\nexport const StatusUnknown = 0\nexport const StatusEpoch = 1\nexport const StatusBooked = 2\nexport const StatusExecuted = 3\nexport const StatusCanceled = 4\nexport const StatusRevoked = 5\n\n/* The match statuses are a mirror of dex/order.MatchStatus. */\nexport const NewlyMatched = 0\nexport const MakerSwapCast = 1\nexport const TakerSwapCast = 2\nexport const MakerRedeemed = 3\nexport const MatchComplete = 4\n\n/* The match sides are a mirror of dex/order.MatchSide. */\nexport const Maker = 0\nexport const Taker = 1\n\nexport function sellString (ord) { return ord.sell ? 'sell' : 'buy' }\nexport function typeString (ord) { return ord.type === Limit ? (ord.tif === ImmediateTiF ? 'limit (i)' : 'limit') : 'market' }\nexport function rateString (ord) { return ord.type === Market ? 'market' : Doc.formatCoinValue(ord.rate / 1e8) }\n\n/* isMarketBuy will return true if the order is a market buy order. */\nexport function isMarketBuy (ord) {\n  return ord.type === Market && !ord.sell\n}\n\n/*\n * hasLiveMatches returns true if the order has matches that have not completed\n * settlement yet.\n */\nexport function hasLiveMatches (order) {\n  if (!order.matches) return false\n  for (const match of order.matches) {\n    if (!match.revoked && match.status < MakerRedeemed) return true\n  }\n  return false\n}\n\n/* statusString converts the order status to a string */\nexport function statusString (order) {\n  const isLive = hasLiveMatches(order)\n  switch (order.status) {\n    case StatusUnknown: return 'unknown'\n    case StatusEpoch: return 'epoch'\n    case StatusBooked: return order.cancelling ? 'cancelling' : 'booked'\n    case StatusExecuted: return isLive ? 'settling' : 'executed'\n    case StatusCanceled: return isLive ? 'canceled/settling' : 'canceled'\n    case StatusRevoked: return isLive ? 'revoked/settling' : 'revoked'\n  }\n}\n\n/* settled sums the quantities of the matches that have completed. */\nexport function settled (order) {\n  if (!order.matches) return 0\n  const qty = isMarketBuy(order) ? m => m.qty * m.rate * 1e-8 : m => m.qty\n  return order.matches.reduce((settled, match) => {\n    if (match.isCancel) return settled\n    const redeemed = (match.side === Maker && match.status >= MakerRedeemed) ||\n      (match.side === Taker && match.status >= MatchComplete)\n    return redeemed ? settled + qty(match) : settled\n  }, 0)\n}\n\n/*\n * matchStatusString is a string used to create a displayable string describing\n * describing the match status.\n */\nexport function matchStatusString (status, side) {\n  switch (status) {\n    case NewlyMatched:\n      return '(0 / 4) Newly Matched'\n    case MakerSwapCast:\n      return '(1 / 4) First Swap Sent'\n    case TakerSwapCast:\n      return '(2 / 4) Second Swap Sent'\n    case MakerRedeemed:\n      if (side === Maker) {\n        return 'Match Complete'\n      }\n      return '(3 / 4) Maker Redeemed'\n    case MatchComplete:\n      return 'Match Complete'\n  }\n  return 'Unknown Order Status'\n}\n","// MessageSocket is a WebSocket manager that uses the Decred DEX Mesage format\n// for communications.\n//\n// Message request format:\n// {\n//   route: 'name',\n//   id: int,\n//   payload: anything or nothing\n// }\n//\n// Message response payload will be a result object with either a valid 'result'\n// field or an 'error' field\n//\n// Functions for external use:\n// registerRoute (route, handler) -- register a function to handle events\n// of the given type\n// request (route, payload) -- create a JSON message in the above format and\n// send it\n//\n// Based on messagesocket_service.js by Jonathan Chappelow @ dcrdata, which is\n// based on ws_events_dispatcher.js by Ismael Celis\n\nconst typeRequest = 1\n\nfunction forward (route, payload, handlers) {\n  if (!route && payload.error) {\n    const err = payload.error\n    console.error(`websocket error (code ${err.code}): ${err.message}`)\n    return\n  }\n  if (typeof handlers[route] === 'undefined') {\n    // console.log(`unhandled message for ${route}: ${payload}`)\n    return\n  }\n  // call each handler\n  for (let i = 0; i < handlers[route].length; i++) {\n    handlers[route][i](payload)\n  }\n}\n\nlet id = 0\n\nclass MessageSocket {\n  constructor () {\n    this.uri = undefined\n    this.connection = undefined\n    this.handlers = {}\n    this.queue = []\n    this.maxQlength = 5\n  }\n\n  registerRoute (route, handler) {\n    this.handlers[route] = this.handlers[route] || []\n    this.handlers[route].push(handler)\n  }\n\n  deregisterRoute (route) {\n    this.handlers[route] = []\n  }\n\n  // request sends a request-type message to the server\n  request (route, payload) {\n    if (!this.connection || this.connection.readyState !== window.WebSocket.OPEN) {\n      while (this.queue.length > this.maxQlength - 1) this.queue.shift()\n      this.queue.push([route, payload])\n      return\n    }\n    id++\n    const message = JSON.stringify({\n      route: route,\n      type: typeRequest,\n      id: id,\n      payload: payload\n    })\n\n    window.log('ws', 'sending', message)\n    this.connection.send(message)\n  }\n\n  close (reason) {\n    window.log('ws', 'close, reason:', reason, this.handlers)\n    this.handlers = {}\n    this.connection.close()\n  }\n\n  connect (uri, reloader) {\n    this.uri = uri\n    this.reloader = reloader\n    let retrys = 0\n    const go = () => {\n      window.log('ws', `connecting to ${uri}`)\n      let conn = this.connection = new window.WebSocket(uri)\n      const timeout = setTimeout(() => {\n        // readyState is still WebSocket.CONNECTING. Cancel and trigger onclose.\n        conn.close()\n      }, 500)\n\n      // unmarshal message, and forward the message to registered handlers\n      conn.onmessage = (evt) => {\n        const message = JSON.parse(evt.data)\n        forward(message.route, message.payload, this.handlers)\n      }\n\n      // Stub out standard functions\n      conn.onclose = (evt) => {\n        window.log('ws', 'onclose')\n        clearTimeout(timeout)\n        conn = this.connection = null\n        forward('close', null, this.handlers)\n        retrys++\n        // 1.2, 1.6, 2.0, 2.4, 3.1, 3.8, 4.8, 6.0, 7.5, 9.3, ...\n        const delay = Math.min(Math.pow(1.25, retrys), 10)\n        console.error(`websocket disconnected (${evt.code}), trying again in ${delay.toFixed(1)} seconds`)\n        setTimeout(() => {\n          go()\n        }, delay * 1000)\n      }\n\n      conn.onopen = () => {\n        window.log('ws', 'onopen')\n        clearTimeout(timeout)\n        if (retrys > 0) {\n          retrys = 0\n          reloader()\n        }\n        forward('open', null, this.handlers)\n        const queue = this.queue\n        this.queue = []\n        for (const [route, message] of queue) {\n          this.request(route, message)\n        }\n      }\n\n      conn.onerror = (evt) => {\n        window.log('ws', 'onerror:', evt)\n        forward('error', evt, this.handlers)\n      }\n    }\n    go()\n  }\n}\n\nconst ws = new MessageSocket()\nexport default ws\n","import Doc, { WalletIcons } from './doc'\nimport State from './state'\nimport BasePage from './basepage'\nimport OrderBook from './orderbook'\nimport { DepthChart } from './charts'\nimport { postJSON } from './http'\nimport { NewWalletForm, bindOpenWallet, bind as bindForm } from './forms'\nimport * as Order from './orderutil'\nimport ws from './ws'\n\nlet app\nconst bind = Doc.bind\n\nconst bookRoute = 'book'\nconst bookOrderRoute = 'book_order'\nconst unbookOrderRoute = 'unbook_order'\nconst updateRemainingRoute = 'update_remaining'\nconst epochOrderRoute = 'epoch_order'\nconst bookUpdateRoute = 'bookupdate'\nconst unmarketRoute = 'unmarket'\n\nconst lastMarketKey = 'selectedMarket'\nconst chartRatioKey = 'chartRatio'\nconst depthZoomKey = 'depthZoom'\n\nconst animationLength = 500\n\nconst anHour = 60 * 60 * 1000 // milliseconds\n\nconst check = document.createElement('span')\ncheck.classList.add('ico-check')\n\nexport default class MarketsPage extends BasePage {\n  constructor (application, main, data) {\n    super()\n    app = application\n    const page = this.page = Doc.parsePage(main, [\n      // Templates, loaders, chart div...\n      'marketLoader', 'marketList', 'rowTemplate', 'buyRows', 'sellRows',\n      'marketSearch', 'rightSide',\n      // Registration status\n      'registrationStatus', 'regStatusTitle', 'regStatusMessage', 'regStatusConfsDisplay',\n      'regStatusDex', 'confReq',\n      // Order form\n      'orderForm', 'priceBox', 'buyBttn', 'sellBttn', 'limitBttn', 'marketBttn',\n      'tifBox', 'submitBttn', 'qtyField', 'rateField', 'orderErr',\n      'baseWalletIcons', 'quoteWalletIcons', 'lotSize', 'rateStep', 'lotField',\n      'tifNow', 'mktBuyBox', 'mktBuyLots', 'mktBuyField', 'minMktBuy', 'qtyBox',\n      'loaderMsg', 'balanceTable', 'orderPreview',\n      // Wallet unlock form\n      'forms', 'openForm', 'uwAppPass',\n      // Order submission is verified with the user's password.\n      'verifyForm', 'vHeader', 'vSideHeader', 'vSide', 'vQty', 'vBase', 'vRate',\n      'vTotal', 'vQuote', 'vPass', 'vSideSubmit', 'vBaseSubmit', 'vSubmit', 'verifyLimit', 'verifyMarket',\n      'vmTotal', 'vmAsset', 'vmLots', 'mktBuyScore',\n      // Create wallet form\n      'walletForm',\n      // Active orders\n      'liveTemplate', 'liveList', 'liveTable',\n      // Cancel order form\n      'cancelForm', 'cancelRemain', 'cancelUnit', 'cancelPass', 'cancelSubmit',\n      // Chart and legend\n      'marketChart', 'chartResizer', 'sellBookedBase', 'sellBookedQuote',\n      'buyBookedBase', 'buyBookedQuote', 'hoverData', 'hoverPrice',\n      'hoverVolume', 'chartLegend', 'chartErrMsg',\n      // Max order section\n      'maxOrd', 'maxLbl', 'maxFromLots', 'maxFromAmt', 'maxFromTicker',\n      'maxToAmt', 'maxToTicker', 'maxAboveZero', 'maxLotBox', 'maxFromLotsLbl',\n      'maxBox'\n    ])\n    this.main = main\n    this.loaded = app.loading(this.main.parentElement)\n    this.maxLoaded = null\n    this.market = null\n    this.registrationStatus = {}\n    this.currentForm = null\n    this.openAsset = null\n    this.openFunc = null\n    this.currentCreate = null\n    this.preorderTimer = null\n    this.book = null\n    this.cancelData = null\n    this.metaOrders = {}\n    this.depthLines = {\n      hover: [],\n      input: []\n    }\n    this.activeMarkerRate = null\n    this.hovers = []\n    // 'Your Orders' list sort key and direction.\n    this.ordersSortKey = 'stamp'\n    // 1 if sorting ascendingly, -1 if sorting descendingly.\n    this.ordersSortDirection = 1\n\n    const reporters = {\n      click: p => { this.reportClick(p) },\n      volume: d => { this.reportVolume(d) },\n      mouse: d => { this.reportMousePosition(d) },\n      zoom: z => { this.reportZoom(z) }\n    }\n    this.chart = new DepthChart(page.marketChart, reporters, State.fetch(depthZoomKey))\n\n    // Set up the BalanceWidget.\n    {\n      const wgt = this.balanceWgt = new BalanceWidget(page.balanceTable)\n      const baseIcons = wgt.base.stateIcons.icons\n      const quoteIcons = wgt.quote.stateIcons.icons\n      bind(wgt.base.connect, 'click', () => { this.showOpen(this.market.base, this.walletUnlocked) })\n      bind(wgt.quote.connect, 'click', () => { this.showOpen(this.market.quote, this.walletUnlocked) })\n      bind(wgt.base.expired, 'click', () => { this.showOpen(this.market.base, this.walletUnlocked) })\n      bind(wgt.quote.expired, 'click', () => { this.showOpen(this.market.quote, this.walletUnlocked) })\n      bind(baseIcons.sleeping, 'click', () => { this.showOpen(this.market.base, this.walletUnlocked) })\n      bind(quoteIcons.sleeping, 'click', () => { this.showOpen(this.market.quote, this.walletUnlocked) })\n      bind(baseIcons.locked, 'click', () => { this.showOpen(this.market.base, this.walletUnlocked) })\n      bind(quoteIcons.locked, 'click', () => { this.showOpen(this.market.quote, this.walletUnlocked) })\n      bind(wgt.base.newWalletBttn, 'click', () => { this.showCreate(this.market.base) })\n      bind(wgt.quote.newWalletBttn, 'click', () => { this.showCreate(this.market.quote) })\n    }\n\n    // Prepare templates for the buy and sell tables and the user's order table.\n    cleanTemplates(page.rowTemplate, page.liveTemplate)\n\n    // Prepare the list of markets.\n    this.marketList = new MarketList(page.marketList)\n    for (const xc of this.marketList.xcSections) {\n      for (const mkt of xc.marketRows) {\n        bind(mkt.row, 'click', () => {\n          this.setMarket(xc.host, mkt.baseID, mkt.quoteID)\n        })\n      }\n    }\n\n    // Store the elements that need their ticker changed when the market\n    // changes.\n    this.quoteUnits = main.querySelectorAll('[data-unit=quote]')\n    this.baseUnits = main.querySelectorAll('[data-unit=base]')\n\n    // Buttons to set order type and side.\n    bind(page.buyBttn, 'click', () => {\n      swapBttns(page.sellBttn, page.buyBttn)\n      page.submitBttn.classList.remove('sellred')\n      page.submitBttn.classList.add('buygreen')\n      page.maxLbl.textContent = 'Buy'\n      this.setOrderBttnText()\n      this.setOrderVisibility()\n      this.drawChartLines()\n    })\n    bind(page.sellBttn, 'click', () => {\n      swapBttns(page.buyBttn, page.sellBttn)\n      page.submitBttn.classList.add('sellred')\n      page.submitBttn.classList.remove('buygreen')\n      page.maxLbl.textContent = 'Sell'\n      this.setOrderBttnText()\n      this.setOrderVisibility()\n      this.drawChartLines()\n    })\n    bind(page.limitBttn, 'click', () => {\n      swapBttns(page.marketBttn, page.limitBttn)\n      this.setOrderVisibility()\n      if (!page.rateField.value) return\n      this.depthLines.input = [{\n        rate: page.rateField.value,\n        color: this.isSell() ? this.chart.theme.sellLine : this.chart.theme.buyLine\n      }]\n      this.drawChartLines()\n    })\n    bind(page.marketBttn, 'click', () => {\n      swapBttns(page.limitBttn, page.marketBttn)\n      this.setOrderVisibility()\n      this.setMarketBuyOrderEstimate()\n      this.depthLines.input = []\n      this.drawChartLines()\n    })\n    bind(page.maxOrd, 'click', () => {\n      if (this.isSell()) page.lotField.value = this.market.maxSell.swap.lots\n      else page.lotField.value = this.market.maxBuys[this.adjustedRate()].swap.lots\n      this.lotChanged()\n    })\n\n    Doc.disableMouseWheel(page.rateField, page.lotField, page.qtyField, page.mktBuyField)\n\n    // Handle the full orderbook sent on the 'book' route.\n    ws.registerRoute(bookRoute, data => { this.handleBookRoute(data) })\n    // Handle the new order for the order book on the 'book_order' route.\n    ws.registerRoute(bookOrderRoute, data => { this.handleBookOrderRoute(data) })\n    // Remove the order sent on the 'unbook_order' route from the orderbook.\n    ws.registerRoute(unbookOrderRoute, data => { this.handleUnbookOrderRoute(data) })\n    // Update the remaining quantity on a booked order.\n    ws.registerRoute(updateRemainingRoute, data => { this.handleUpdateRemainingRoute(data) })\n    // Handle the new order for the order book on the 'epoch_order' route.\n    ws.registerRoute(epochOrderRoute, data => { this.handleEpochOrderRoute(data) })\n    // Bind the wallet unlock form.\n    bindOpenWallet(app, page.openForm, async () => { this.openFunc() })\n    // Create a wallet\n    this.walletForm = new NewWalletForm(app, page.walletForm, async () => { this.createWallet() })\n    // Main order form.\n    bindForm(page.orderForm, page.submitBttn, async () => { this.stepSubmit() })\n    // Order verification form.\n    bindForm(page.verifyForm, page.vSubmit, async () => { this.submitOrder() })\n    // Cancel order form.\n    bindForm(page.cancelForm, page.cancelSubmit, async () => { this.submitCancel() })\n    // Bind active orders list's header sort events.\n    page.liveTable.querySelectorAll('[data-ordercol]')\n      .forEach(th => bind(th, 'click', () => setOrdersSortCol(th.dataset.ordercol)))\n\n    const setOrdersSortCol = (key) => {\n      // First unset header's current sorted col classes.\n      unsetOrdersSortColClasses()\n      // If already sorting by key change sort direction.\n      if (this.ordersSortKey === key) {\n        this.ordersSortDirection *= -1\n      } else {\n        // Otherwise update sort key and set default direction to ascending.\n        this.ordersSortKey = key\n        this.ordersSortDirection = 1\n      }\n      this.refreshActiveOrders()\n      // Set header's new sorted col classes.\n      setOrdersSortColClasses()\n    }\n\n    const sortClassByDirection = () => {\n      if (this.ordersSortDirection === 1) return 'sorted-asc'\n      return 'sorted-dsc'\n    }\n\n    const unsetOrdersSortColClasses = () => {\n      page.liveTable.querySelectorAll('[data-ordercol]')\n        .forEach(th => th.classList.remove('sorted-asc', 'sorted-dsc'))\n    }\n\n    const setOrdersSortColClasses = () => {\n      const key = this.ordersSortKey\n      const sortCls = sortClassByDirection()\n      page.liveTable.querySelector(`[data-ordercol=${key}]`).classList.add(sortCls)\n    }\n\n    // Set default's sorted col header classes.\n    setOrdersSortColClasses()\n\n    const closePopups = () => {\n      Doc.hide(page.forms)\n      page.vPass.value = ''\n      page.cancelPass.value = ''\n    }\n\n    // If the user clicks outside of a form, it should close the page overlay.\n    bind(page.forms, 'mousedown', e => {\n      if (!Doc.mouseInElement(e, this.currentForm)) {\n        closePopups()\n      }\n    })\n\n    this.keyup = e => {\n      if (e.key === 'Escape') {\n        closePopups()\n      }\n    }\n    bind(document, 'keyup', this.keyup)\n\n    page.forms.querySelectorAll('.form-closer').forEach(el => {\n      Doc.bind(el, 'click', () => { closePopups() })\n    })\n\n    // Event listeners for interactions with the various input fields.\n    bind(page.lotField, 'change', () => { this.lotChanged() })\n    bind(page.lotField, 'keyup', () => { this.lotChanged() })\n    bind(page.qtyField, 'change', () => { this.quantityChanged(true) })\n    bind(page.qtyField, 'keyup', () => { this.quantityChanged(false) })\n    bind(page.mktBuyField, 'change', () => { this.marketBuyChanged() })\n    bind(page.mktBuyField, 'keyup', () => { this.marketBuyChanged() })\n    bind(page.rateField, 'change', () => { this.rateFieldChanged() })\n    bind(page.rateField, 'keyup', () => { this.previewQuoteAmt(true) })\n\n    // Market search input bindings.\n    bind(page.marketSearch, 'change', () => { this.filterMarkets() })\n    bind(page.marketSearch, 'keyup', () => { this.filterMarkets() })\n\n    const clearChartLines = () => {\n      this.depthLines.hover = []\n      this.drawChartLines()\n    }\n    bind(page.buyRows, 'mouseleave', clearChartLines)\n    bind(page.sellRows, 'mouseleave', clearChartLines)\n    bind(page.liveList, 'mouseleave', () => {\n      this.activeMarkerRate = null\n      this.setMarkers()\n    })\n\n    // Load the user's layout preferences.\n    const setChartRatio = r => {\n      if (r > 0.7) r = 0.7\n      else if (r < 0.25) r = 0.25\n\n      const h = r * (this.main.clientHeight - app.header.offsetHeight)\n\n      page.marketChart.style.height = `${h}px`\n\n      this.chart.resize(h)\n    }\n    const chartDivRatio = State.fetch(chartRatioKey)\n    if (chartDivRatio) {\n      setChartRatio(chartDivRatio)\n    }\n    // Bind chart resizing.\n    bind(page.chartResizer, 'mousedown', e => {\n      if (e.button !== 0) return\n      e.preventDefault()\n      let chartRatio\n      const trackMouse = ee => {\n        ee.preventDefault()\n        const box = page.rightSide.getBoundingClientRect()\n        const h = box.bottom - box.top\n        chartRatio = (ee.pageY - box.top) / h\n        setChartRatio(chartRatio)\n      }\n      bind(document, 'mousemove', trackMouse)\n      bind(document, 'mouseup', () => {\n        if (chartRatio) State.store(chartRatioKey, chartRatio)\n        Doc.unbind(document, 'mousemove', trackMouse)\n      })\n    })\n\n    // Notification filters.\n    this.notifiers = {\n      order: note => { this.handleOrderNote(note) },\n      epoch: note => { this.handleEpochNote(note) },\n      conn: note => { this.handleConnNote(note) },\n      balance: note => { this.handleBalanceNote(note) },\n      feepayment: note => { this.handleFeePayment(note) }\n    }\n\n    // Fetch the first market in the list, or the users last selected market, if\n    // it exists.\n    let selected\n    if (data && data.host && typeof data.base !== 'undefined' && typeof data.quote !== 'undefined') {\n      selected = makeMarket(data.host, parseInt(data.base), parseInt(data.quote))\n    } else {\n      selected = State.fetch(lastMarketKey)\n    }\n    if (!selected || !this.marketList.exists(selected.host, selected.base, selected.quote)) {\n      selected = this.marketList.first()\n    }\n    this.setMarket(selected.host, selected.base, selected.quote)\n\n    // Start a ticker to update time-since values.\n    this.secondTicker = setInterval(() => {\n      for (const metaOrder of Object.values(this.metaOrders)) {\n        const td = Doc.tmplElement(metaOrder.row, 'age')\n        td.textContent = Doc.timeSince(metaOrder.order.stamp)\n      }\n    }, 1000)\n\n    // set the initial state for the registration status\n    this.setRegistrationStatusVisibility()\n    this.setBalanceVisibility()\n  }\n\n  /* isSell is true if the user has selected sell in the order options. */\n  isSell () {\n    return this.page.sellBttn.classList.contains('selected')\n  }\n\n  /* isLimit is true if the user has selected the \"limit order\" tab. */\n  isLimit () {\n    return this.page.limitBttn.classList.contains('selected')\n  }\n\n  /* hasFeePending is true if the fee payment is pending */\n  hasFeePending () {\n    const dex = this.market.dex\n    return typeof dex.confs === 'number' && dex.confs < dex.confsrequired\n  }\n\n  /* assetsAreSupported is true if all the assets of the current market are\n   * supported\n   */\n  assetsAreSupported () {\n    const [b, q] = [this.market.base, this.market.quote]\n    return b && q\n  }\n\n  /*\n   * setOrderVisibility sets which form is visible based on the specified\n   * options.\n   */\n  setOrderVisibility () {\n    const page = this.page\n    if (this.isLimit()) {\n      Doc.show(page.priceBox, page.tifBox, page.qtyBox, page.maxBox)\n      Doc.hide(page.mktBuyBox)\n      this.previewQuoteAmt(true)\n    } else {\n      Doc.hide(page.tifBox, page.maxBox, page.priceBox)\n      if (this.isSell()) {\n        Doc.hide(page.mktBuyBox)\n        Doc.show(page.qtyBox)\n        this.previewQuoteAmt(true)\n      } else {\n        Doc.show(page.mktBuyBox)\n        Doc.hide(page.qtyBox)\n        this.previewQuoteAmt(false)\n      }\n    }\n  }\n\n  /* resolveOrderFormVisibility displays or hides the 'orderForm' based on\n   * a set of conditions to be met.\n   */\n  resolveOrderFormVisibility () {\n    const page = this.page\n    const feePaid = !this.hasFeePending()\n    const assetsAreSupported = this.assetsAreSupported()\n    const base = this.market.base\n    const quote = this.market.quote\n    const hasWallets = base && app.assets[base.id].wallet && quote && app.assets[quote.id].wallet\n\n    if (feePaid && assetsAreSupported && hasWallets) {\n      Doc.show(page.orderForm)\n      return\n    }\n\n    Doc.hide(page.orderForm)\n  }\n\n  /* setLoaderMsgVisibility displays a message in case a dex asset is not\n   * supported\n   */\n  setLoaderMsgVisibility () {\n    const page = this.page\n    const { base, quote } = this.market\n\n    if (this.assetsAreSupported()) {\n      // make sure to hide the loader msg\n      Doc.hide(page.loaderMsg)\n      return\n    }\n    const symbol = (!base && this.market.baseCfg.symbol) || (!quote && this.market.quoteCfg.symbol)\n\n    page.loaderMsg.textContent = `${symbol.toUpperCase()} is not supported`\n    Doc.show(page.loaderMsg)\n  }\n\n  /* setRegistrationStatusView sets the text content and class for the\n   * registration status view\n   */\n  setRegistrationStatusView (titleContent, confStatusMsg, titleClass) {\n    const page = this.page\n    page.regStatusTitle.textContent = titleContent\n    page.regStatusConfsDisplay.textContent = confStatusMsg\n    page.registrationStatus.classList.remove('completed', 'error', 'waiting')\n    page.registrationStatus.classList.add(titleClass)\n  }\n\n  /*\n   * updateRegistrationStatusView updates the view based on the current\n   * registration status\n   */\n  updateRegistrationStatusView (dexAddr, feePaid, confirmationsRequired, confirmations) {\n    const page = this.page\n\n    page.confReq.textContent = confirmationsRequired\n    page.regStatusDex.textContent = dexAddr\n\n    if (feePaid) {\n      this.setRegistrationStatusView('Registration fee payment successful!', '', 'completed')\n      return\n    }\n\n    const confStatusMsg = `${confirmations} / ${confirmationsRequired}`\n\n    this.setRegistrationStatusView('Waiting for confirmations...', confStatusMsg, 'waiting')\n  }\n\n  /*\n   * setRegistrationStatusVisibility toggles the registration status view based\n   * on the dex data.\n   */\n  setRegistrationStatusVisibility () {\n    const { page, market: { dex } } = this\n    const { confs, confsrequired } = dex\n    const feePending = this.hasFeePending()\n\n    // If dex is not connected to server, is not possible to know fee\n    // registration status.\n    if (!dex.connected) return\n\n    this.updateRegistrationStatusView(dex.host, !feePending, confsrequired, confs)\n\n    if (feePending) {\n      Doc.show(page.registrationStatus)\n    } else {\n      const toggle = () => {\n        Doc.hide(page.registrationStatus)\n        this.resolveOrderFormVisibility()\n      }\n      if (Doc.isHidden(page.orderForm)) {\n        // wait a couple of seconds before showing the form so the success\n        // message is shown to the user\n        setTimeout(toggle, 5000)\n        return\n      }\n      toggle()\n    }\n  }\n\n  setOrderBttnText () {\n    if (this.isSell()) {\n      this.page.submitBttn.textContent = `Place order to sell ${this.market.base.symbol.toUpperCase()}`\n    } else this.page.submitBttn.textContent = `Place order to buy  ${this.market.base.symbol.toUpperCase()}`\n  }\n\n  /* setMarket sets the currently displayed market. */\n  async setMarket (host, base, quote) {\n    const dex = app.user.exchanges[host]\n    // If we have not yet connected, there is no dex.assets or any other\n    // exchange data, so just put up a message and wait for the connection to be\n    // established, at which time handleConnNote will refresh and reload.\n    if (!dex.connected) {\n      this.market = { dex: dex }\n      this.page.chartErrMsg.textContent = 'Connection to dex server failed. ' +\n        'You can close dexc and try again later or wait for it to reconnect.'\n      Doc.show(this.page.chartErrMsg)\n      this.loaded()\n      this.main.style.opacity = 1\n      Doc.hide(this.page.marketLoader)\n      return\n    }\n\n    const baseCfg = dex.assets[base]\n    const quoteCfg = dex.assets[quote]\n    Doc.hide(this.page.maxOrd, this.page.chartErrMsg)\n    if (this.preorderTimer) {\n      window.clearTimeout(this.preorderTimer)\n      this.preorderTimer = null\n    }\n    this.market = {\n      dex: dex,\n      sid: marketID(baseCfg.symbol, quoteCfg.symbol), // A string market identifier used by the DEX.\n      // app.assets is a map of core.SupportedAsset type, which can be found at\n      // client/core/types.go.\n      base: app.assets[base],\n      quote: app.assets[quote],\n      // dex.assets is a map of dex.Asset type, which is defined at\n      // dex/asset.go.\n      baseCfg: dex.assets[base],\n      quoteCfg: dex.assets[quote],\n      maxSell: null,\n      maxBuys: {}\n    }\n\n    this.page.marketLoader.classList.remove('d-none')\n    ws.request('loadmarket', makeMarket(host, base, quote))\n    this.setLoaderMsgVisibility()\n    this.setRegistrationStatusVisibility()\n    this.resolveOrderFormVisibility()\n    this.setOrderBttnText()\n  }\n\n  /*\n   * reportClick is a callback used by the DepthChart when the user clicks\n   * on the chart area. The rate field is set to the x-value of the click.\n   */\n  reportClick (p) {\n    this.page.rateField.value = p.toFixed(8)\n    this.rateFieldChanged()\n  }\n\n  /*\n   * reportVolume accepts a volume report from the DepthChart and sets the\n   * values in the chart legend.\n   */\n  reportVolume (d) {\n    const page = this.page\n    page.sellBookedBase.textContent = Doc.formatCoinValue(d.sellBase)\n    page.sellBookedQuote.textContent = Doc.formatCoinValue(d.sellQuote)\n    page.buyBookedBase.textContent = Doc.formatCoinValue(d.buyBase)\n    page.buyBookedQuote.textContent = Doc.formatCoinValue(d.buyQuote)\n  }\n\n  /*\n   * reportMousePosition accepts informations about the mouse position on the\n   * chart area.\n   */\n  reportMousePosition (d) {\n    while (this.hovers.length) this.hovers.shift().classList.remove('hover')\n    const page = this.page\n    if (!d) {\n      Doc.hide(page.hoverData)\n      return\n    }\n\n    // If the user is hovered to within a small percent (based on chart width)\n    // of a user order, highlight that order's row.\n    const markers = d.hoverMarkers.map(v => Math.round(v * 1e8))\n    for (const metaOrd of Object.values(this.metaOrders)) {\n      const [row, ord] = [metaOrd.row, metaOrd.order]\n      if (ord.status !== Order.StatusBooked) continue\n      if (markers.indexOf(ord.rate) > -1) {\n        row.classList.add('hover')\n        this.hovers.push(row)\n      }\n    }\n\n    page.hoverPrice.textContent = Doc.formatCoinValue(d.rate)\n    page.hoverVolume.textContent = Doc.formatCoinValue(d.depth)\n    page.hoverVolume.style.color = d.dotColor\n    page.chartLegend.style.left = `${d.yAxisWidth}px`\n    Doc.show(page.hoverData)\n  }\n\n  /*\n   * reportZoom accepts informations about the current depth chart zoom level.\n   * This information is saved to disk so that the zoom level can be maintained\n   * across reloads.\n   */\n  reportZoom (zoom) {\n    State.store(depthZoomKey, zoom)\n  }\n\n  /*\n   * parseOrder pulls the order information from the form fields. Data is not\n   * validated in any way.\n   */\n  parseOrder () {\n    const page = this.page\n    let qtyField = page.qtyField\n    const limit = this.isLimit()\n    const sell = this.isSell()\n    const market = this.market\n    if (!limit && !sell) {\n      qtyField = page.mktBuyField\n    }\n    return {\n      host: market.dex.host,\n      isLimit: limit,\n      sell: sell,\n      base: market.base.id,\n      quote: market.quote.id,\n      qty: asAtoms(qtyField.value),\n      rate: asAtoms(page.rateField.value), // message-rate\n      tifnow: page.tifNow.checked\n    }\n  }\n\n  /**\n   * previewQuoteAmt shows quote amount when rate or quantity input are changed\n   */\n  previewQuoteAmt (show) {\n    const page = this.page\n    const order = this.parseOrder()\n    page.orderErr.textContent = ''\n    if (order.rate) {\n      if (order.sell) this.preSell()\n      else this.preBuy()\n    }\n    this.depthLines.input = []\n    if (order.rate && this.isLimit()) {\n      this.depthLines.input = [{\n        rate: order.rate / 1e8,\n        color: order.sell ? this.chart.theme.sellLine : this.chart.theme.buyLine\n      }]\n    }\n    this.drawChartLines()\n    if (!show || !order.rate || !order.qty) {\n      page.orderPreview.textContent = ''\n      this.drawChartLines()\n      return\n    }\n    const quoteAsset = app.assets[order.quote]\n    const total = Doc.formatCoinValue(order.rate / 1e8 * order.qty / 1e8)\n    page.orderPreview.textContent = `Total: ${total} ${quoteAsset.symbol.toUpperCase()}`\n  }\n\n  /**\n   * preSell populates the max order message for the largest available sell.\n   */\n  preSell () {\n    const mkt = this.market\n    const baseWallet = app.assets[mkt.base.id].wallet\n    if (baseWallet.available < mkt.baseCfg.lotSize) {\n      this.setMaxOrder(0, this.adjustedRate() / 1e8)\n      return\n    }\n    if (mkt.maxSell) {\n      this.setMaxOrder(mkt.maxSell.swap, this.adjustedRate() / 1e8)\n      return\n    }\n    // We only fetch pre-sell once per balance update, so don't delay.\n    this.schedulePreOrder('/api/maxsell', {}, 0, res => {\n      mkt.maxSell = res.maxSell\n      mkt.sellBalance = baseWallet.balance.available\n      this.setMaxOrder(res.maxSell.swap, this.adjustedRate() / 1e8)\n    })\n  }\n\n  /**\n   * preBuy populates the max order message for the largest available buy.\n   */\n  preBuy () {\n    const mkt = this.market\n    const rate = this.adjustedRate()\n    const quoteWallet = app.assets[mkt.quote.id].wallet\n    const aLot = mkt.baseCfg.lotSize * (rate / 1e8)\n    if (quoteWallet.balance.available < aLot) {\n      this.setMaxOrder(0, 1e8 / rate)\n      return\n    }\n    if (mkt.maxBuys[rate]) {\n      this.setMaxOrder(mkt.maxBuys[rate].swap, 1e8 / rate)\n      return\n    }\n    // 0 delay for first fetch after balance update or market change, otherwise\n    // meter these at 1 / sec.\n    const delay = mkt.maxBuys ? 1000 : 0\n    this.schedulePreOrder('/api/maxbuy', { rate: rate }, delay, res => {\n      mkt.maxBuys[rate] = res.maxBuy\n      mkt.buyBalance = app.assets[mkt.quote.id].wallet.balance.available\n      this.setMaxOrder(res.maxBuy.swap, 1e8 / rate)\n    })\n  }\n\n  /**\n   * schedulePreorder shows the loading icon and schedules a call to an order\n   * estimate api endpoint. If another call to schedulePreorder is made before\n   * this one is fired (after delay), this call will be canceled.\n   */\n  schedulePreOrder (path, args, delay, success) {\n    const page = this.page\n    if (!this.maxLoaded) this.maxLoaded = app.loading(page.maxOrd)\n    const [bid, qid] = [this.market.base.id, this.market.quote.id]\n    const [bWallet, qWallet] = [app.assets[bid].wallet, app.assets[qid].wallet]\n    if (!bWallet || !bWallet.running || !qWallet || !qWallet.running) return\n    if (this.preorderTimer) window.clearTimeout(this.preorderTimer)\n\n    Doc.show(page.maxOrd, page.maxLotBox)\n    Doc.hide(page.maxAboveZero)\n    page.maxFromLots.textContent = 'calculating...'\n    page.maxFromLotsLbl.textContent = ''\n    this.preorderTimer = window.setTimeout(async () => {\n      this.preorderTimer = null\n      const res = await postJSON(path, {\n        host: this.market.dex.host,\n        base: bid,\n        quote: qid,\n        ...args\n      })\n      // If a new timer is set, a change was made while fetching the pre-order.\n      // Abandon this result.\n      if (this.preorderTimer) return\n      this.maxLoaded()\n      this.maxLoaded = null\n\n      if (!app.checkResponse(res, true)) {\n        console.warn('max order estimate not available:', res)\n        page.maxFromLots.textContent = 'estimate unavailable'\n        return\n      }\n      success(res)\n    }, delay)\n  }\n\n  /* setMaxOrder sets the max order text. */\n  setMaxOrder (maxOrder, rate) {\n    const page = this.page\n    Doc.show(page.maxOrd, page.maxLotBox, page.maxAboveZero)\n    const sell = this.isSell()\n    page.maxFromLots.textContent = maxOrder.lots.toString()\n    page.maxFromLotsLbl.textContent = maxOrder.lots === 1 ? 'lot' : 'lots'\n    if (maxOrder.lots === 0) {\n      Doc.hide(page.maxAboveZero)\n      return\n    }\n    // Could add the maxOrder.estimatedFees here, but that might also be\n    // confusing.\n    page.maxFromAmt.textContent = Doc.formatCoinValue(maxOrder.value / 1e8)\n    page.maxFromTicker.textContent = sell ? this.market.base.symbol : this.market.quote.symbol.toUpperCase()\n    // Could subtract the maxOrder.redemptionFees here.\n    page.maxToAmt.textContent = Doc.formatCoinValue(maxOrder.value / 1e8 * rate)\n    page.maxToTicker.textContent = sell ? this.market.quote.symbol : this.market.base.symbol.toUpperCase()\n  }\n\n  /*\n   * validateOrder performs some basic order sanity checks, returning boolean\n   * true if the order appears valid.\n   */\n  validateOrder (order) {\n    const page = this.page\n    if (order.isLimit && !order.rate) {\n      Doc.show(page.orderErr)\n      page.orderErr.textContent = 'zero rate not allowed'\n      return false\n    }\n    if (!order.qty) {\n      Doc.show(page.orderErr)\n      page.orderErr.textContent = 'zero quantity not allowed'\n      return false\n    }\n    return true\n  }\n\n  /* handleBook accepts the data sent in the 'book' notification. */\n  handleBook (data) {\n    const [b, q] = [this.market.baseCfg, this.market.quoteCfg]\n    this.book = new OrderBook(data, b.symbol, q.symbol)\n    this.loadTable()\n    for (const order of (data.book.epoch || [])) {\n      if (order.rate > 0) this.book.add(order)\n      this.addTableOrder(order)\n    }\n    if (!this.book) {\n      this.chart.clear()\n      Doc.empty(this.page.buyRows)\n      Doc.empty(this.page.sellRows)\n      return\n    }\n    this.chart.set(this.book, b.lotSize, q.rateStep)\n  }\n\n  /*\n   * midGap returns the value in the middle of the best buy and best sell. If\n   * either one of the buy or sell sides are empty, midGap returns the best\n   * rate from the other side. If both sides are empty, midGap returns the\n   * value null.\n   */\n  midGap () {\n    const book = this.book\n    if (!book) return\n    if (book.buys && book.buys.length) {\n      if (book.sells && book.sells.length) {\n        return (book.buys[0].rate + book.sells[0].rate) / 2\n      }\n      return book.buys[0].rate\n    }\n    if (book.sells && book.sells.length) {\n      return book.sells[0].rate\n    }\n    return null\n  }\n\n  /*\n   * setMarketBuyOrderEstimate sets the \"min. buy\" display for the current\n   * market.\n   */\n  setMarketBuyOrderEstimate () {\n    const market = this.market\n    const lotSize = market.baseCfg.lotSize\n    const xc = app.user.exchanges[market.dex.host]\n    const buffer = xc.markets[market.sid].buybuffer\n    const gap = this.midGap()\n    if (gap) {\n      this.page.minMktBuy.textContent = Doc.formatCoinValue(lotSize * buffer * gap / 1e8)\n    }\n  }\n\n  /*\n   * ordersSortCompare returns sort compare function according to the active\n   * sort key and direction.\n   */\n  ordersSortCompare () {\n    switch (this.ordersSortKey) {\n      case 'stamp':\n        return (a, b) => this.ordersSortDirection * (b.stamp - a.stamp)\n      case 'rate':\n        return (a, b) => this.ordersSortDirection * (a.rate - b.rate)\n      case 'qty':\n        return (a, b) => this.ordersSortDirection * (a.qty - b.qty)\n      case 'type':\n        return (a, b) => this.ordersSortDirection *\n          Order.typeString(a).localeCompare(Order.typeString(b))\n      case 'sell':\n        return (a, b) => this.ordersSortDirection *\n          (Order.sellString(a)).localeCompare(Order.sellString(b))\n      case 'status':\n        return (a, b) => this.ordersSortDirection *\n          (Order.statusString(a)).localeCompare(Order.statusString(b))\n      case 'settled':\n        return (a, b) => this.ordersSortDirection *\n          ((Order.settled(a) * 100 / a.qty) - (Order.settled(b) * 100 / b.qty))\n      case 'filled':\n        return (a, b) => this.ordersSortDirection *\n          ((a.filled * 100 / a.qty) - (b.filled * 100 / b.qty))\n    }\n  }\n\n  /* refreshActiveOrders refreshes the user's active order list. */\n  refreshActiveOrders () {\n    const page = this.page\n    const metaOrders = this.metaOrders\n    const market = this.market\n    for (const oid in metaOrders) delete metaOrders[oid]\n    const orders = app.orders(market.dex.host, marketID(market.baseCfg.symbol, market.quoteCfg.symbol))\n    // Sort orders by sort key.\n    const compare = this.ordersSortCompare()\n    orders.sort(compare)\n\n    Doc.empty(page.liveList)\n    for (const ord of orders) {\n      const row = page.liveTemplate.cloneNode(true)\n      metaOrders[ord.id] = {\n        row: row,\n        order: ord\n      }\n      Doc.bind(row, 'mouseenter', e => {\n        this.activeMarkerRate = ord.rate\n        this.setMarkers()\n      })\n      updateUserOrderRow(row, ord)\n      if (ord.type === Order.Limit && (ord.tif === Order.StandingTiF && ord.status < Order.StatusExecuted)) {\n        const icon = Doc.tmplElement(row, 'cancelBttn')\n        Doc.show(icon)\n        bind(icon, 'click', e => {\n          e.stopPropagation()\n          this.showCancel(row, ord.id)\n        })\n      }\n      const side = Doc.tmplElement(row, 'side')\n      side.classList.add(ord.sell ? 'sellcolor' : 'buycolor')\n      const link = Doc.tmplElement(row, 'link')\n      link.href = `order/${ord.id}`\n      app.bindInternalNavigation(row)\n      page.liveList.appendChild(row)\n      app.bindTooltips(row)\n    }\n    this.setMarkers()\n  }\n\n  /* setMarkers sets the depth chart markers for booked orders. */\n  setMarkers () {\n    const markers = {\n      buys: [],\n      sells: []\n    }\n    for (const mo of Object.values(this.metaOrders)) {\n      const ord = mo.order\n      if (ord.rate && ord.status === Order.StatusBooked) {\n        if (ord.sell) {\n          markers.sells.push({\n            rate: ord.rate / 1e8,\n            active: ord.rate === this.activeMarkerRate\n          })\n        } else {\n          markers.buys.push({\n            rate: ord.rate / 1e8,\n            active: ord.rate === this.activeMarkerRate\n          })\n        }\n      }\n    }\n    this.chart.setMarkers(markers)\n    if (this.book) this.chart.draw()\n  }\n\n  /* handleBookRoute is the handler for the 'book' notification, which is sent\n   * in response to a new market subscription. The data received will contain\n   * the entire order book.\n   */\n  handleBookRoute (note) {\n    app.log('book', 'handleBookRoute:', note)\n    const mktBook = note.payload\n    const market = this.market\n    const page = this.page\n    const host = market.dex.host\n    const [b, q] = [market.baseCfg, market.quoteCfg]\n    if (mktBook.base !== b.id || mktBook.quote !== q.id) return\n    this.refreshActiveOrders()\n    this.handleBook(mktBook)\n    page.marketLoader.classList.add('d-none')\n    this.marketList.select(host, b.id, q.id)\n\n    State.store(lastMarketKey, {\n      host: note.host,\n      base: mktBook.base,\n      quote: mktBook.quote\n    })\n\n    page.lotSize.textContent = Doc.formatCoinValue(market.baseCfg.lotSize / 1e8)\n    page.rateStep.textContent = market.quoteCfg.rateStep / 1e8\n    this.baseUnits.forEach(el => { el.textContent = b.symbol.toUpperCase() })\n    this.quoteUnits.forEach(el => { el.textContent = q.symbol.toUpperCase() })\n    this.balanceWgt.setWallets(host, b.id, q.id)\n    this.setMarketBuyOrderEstimate()\n    this.refreshActiveOrders()\n    if (this.loaded) {\n      this.loaded()\n      this.loaded = null\n      Doc.animate(250, progress => {\n        this.main.style.opacity = progress\n      })\n    }\n  }\n\n  /* handleBookOrderRoute is the handler for 'book_order' notifications. */\n  handleBookOrderRoute (data) {\n    app.log('book', 'handleBookOrderRoute:', data)\n    if (data.host !== this.market.dex.host || data.marketID !== this.market.sid) return\n    const order = data.payload\n    if (order.rate > 0) this.book.add(order)\n    this.addTableOrder(order)\n    this.chart.draw()\n  }\n\n  /* handleUnbookOrderRoute is the handler for 'unbook_order' notifications. */\n  handleUnbookOrderRoute (data) {\n    app.log('book', 'handleUnbookOrderRoute:', data)\n    if (data.host !== this.market.dex.host || data.marketID !== this.market.sid) return\n    const order = data.payload\n    this.book.remove(order.token)\n    this.removeTableOrder(order)\n    this.chart.draw()\n  }\n\n  /*\n   * handleUpdateRemainingRoute is the handler for 'update_remaining'\n   * notifications.\n   */\n  handleUpdateRemainingRoute (data) {\n    app.log('book', 'handleUpdateRemainingRoute:', data)\n    if (data.host !== this.market.dex.host || data.marketID !== this.market.sid) return\n    const update = data.payload\n    this.book.updateRemaining(update.token, update.qty)\n    this.updateTableOrder(update)\n    this.chart.draw()\n  }\n\n  /* handleEpochOrderRoute is the handler for 'epoch_order' notifications. */\n  handleEpochOrderRoute (data) {\n    app.log('book', 'handleEpochOrderRoute:', data)\n    if (data.host !== this.market.dex.host || data.marketID !== this.market.sid) return\n    const order = data.payload\n    if (order.rate > 0) this.book.add(order) // No cancels or market orders\n    if (order.qty > 0) this.addTableOrder(order) // No cancel orders\n    this.chart.draw()\n  }\n\n  /* showForm shows a modal form with a little animation. */\n  async showForm (form) {\n    this.currentForm = form\n    const page = this.page\n    Doc.hide(page.openForm, page.verifyForm, page.walletForm, page.cancelForm)\n    form.style.right = '10000px'\n    Doc.show(page.forms, form)\n    const shift = (page.forms.offsetWidth + form.offsetWidth) / 2\n    await Doc.animate(animationLength, progress => {\n      form.style.right = `${(1 - progress) * shift}px`\n    }, 'easeOutHard')\n    form.style.right = '0'\n  }\n\n  /* showOpen shows the form to unlock a wallet. */\n  async showOpen (asset, f) {\n    const page = this.page\n    this.openAsset = asset\n    this.openFunc = f\n    page.openForm.setAsset(app.assets[asset.id])\n    this.showForm(page.openForm)\n    page.uwAppPass.focus()\n  }\n\n  /* showVerify shows the form to accept the currently parsed order information\n   * and confirm submission of the order to the dex.\n   */\n  showVerify () {\n    const page = this.page\n    const order = this.parseOrder()\n    const isSell = order.sell\n    const baseAsset = app.assets[order.base]\n    const quoteAsset = app.assets[order.quote]\n    const toAsset = isSell ? quoteAsset : baseAsset\n    const fromAsset = isSell ? baseAsset : quoteAsset\n\n    page.vQty.textContent = Doc.formatCoinValue(order.qty / 1e8)\n    page.vSideHeader.textContent = isSell ? 'Sell' : 'Buy'\n    page.vSideSubmit.textContent = page.vSideHeader.textContent\n    page.vBaseSubmit.textContent = baseAsset.symbol.toUpperCase()\n    if (order.isLimit) {\n      Doc.show(page.verifyLimit)\n      Doc.hide(page.verifyMarket)\n      page.vRate.textContent = Doc.formatCoinValue(order.rate / 1e8)\n      page.vQuote.textContent = quoteAsset.symbol.toUpperCase()\n      page.vTotal.textContent = Doc.formatCoinValue(order.rate / 1e8 * order.qty / 1e8)\n      page.vBase.textContent = baseAsset.symbol.toUpperCase()\n      page.vSide.textContent = isSell ? 'sell' : 'buy'\n    } else {\n      Doc.hide(page.verifyLimit)\n      Doc.show(page.verifyMarket)\n      page.vSide.textContent = 'trade'\n      page.vBase.textContent = fromAsset.symbol.toUpperCase()\n      const gap = this.midGap()\n      if (gap) {\n        const received = order.sell ? order.qty * gap : order.qty / gap\n        const lotSize = this.market.baseCfg.lotSize\n        const lots = order.sell ? order.qty / lotSize : received / lotSize\n        // TODO: Some kind of adjustment to align with lot sizes for market buy?\n        page.vmTotal.textContent = Doc.formatCoinValue(received / 1e8)\n        page.vmAsset.textContent = toAsset.symbol.toUpperCase()\n        page.vmLots.textContent = lots.toFixed(1)\n      } else {\n        Doc.hide(page.verifyMarket)\n      }\n    }\n    // Visually differentiate between buy/sell orders.\n    const buyBtnClass = 'buygreen'\n    const sellBtnClass = 'sellred'\n    if (isSell) {\n      page.vHeader.classList.add(sellBtnClass)\n      page.vHeader.classList.remove(buyBtnClass)\n      page.vSubmit.classList.add(sellBtnClass)\n      page.vSubmit.classList.remove(buyBtnClass)\n    } else {\n      page.vHeader.classList.add(buyBtnClass)\n      page.vHeader.classList.remove(sellBtnClass)\n      page.vSubmit.classList.add(buyBtnClass)\n      page.vSubmit.classList.remove(sellBtnClass)\n    }\n    this.showForm(page.verifyForm)\n    page.vPass.focus()\n  }\n\n  async submitCancel () {\n    // this will be the page.cancelSubmit button (evt.currentTarget)\n    const page = this.page\n    const cancelData = this.cancelData\n    const order = cancelData.order\n    const req = {\n      orderID: order.id,\n      pw: page.cancelPass.value\n    }\n    page.cancelPass.value = ''\n    const res = await postJSON('/api/cancel', req)\n    if (!app.checkResponse(res)) return\n    Doc.hide(cancelData.bttn, page.forms)\n    order.cancelling = true\n  }\n\n  /* showCancel shows a form to confirm submission of a cancel order. */\n  showCancel (row, orderID) {\n    const order = this.metaOrders[orderID].order\n    const page = this.page\n    const remaining = order.qty - order.filled\n    page.cancelRemain.textContent = Doc.formatCoinValue(remaining / 1e8)\n    const symbol = Order.isMarketBuy(order) ? this.market.quote.symbol : this.market.base.symbol\n    page.cancelUnit.textContent = symbol.toUpperCase()\n    this.showForm(page.cancelForm)\n    page.cancelPass.focus()\n    this.cancelData = {\n      bttn: Doc.tmplElement(row, 'cancelBttn'),\n      order: order\n    }\n  }\n\n  /* showCreate shows the new wallet creation form. */\n  showCreate (asset) {\n    const page = this.page\n    this.currentCreate = asset\n    this.walletForm.setAsset(asset)\n    this.showForm(page.walletForm)\n    this.walletForm.loadDefaults()\n  }\n\n  /*\n   * stepSubmit will examine the current state of wallets and step the user\n   * through the process of order submission.\n   * NOTE: I expect this process will be streamlined soon such that the wallets\n   * will attempt to be unlocked in the order submission process, negating the\n   * need to unlock ahead of time.\n   */\n  stepSubmit () {\n    const page = this.page\n    const market = this.market\n    Doc.hide(page.orderErr)\n    if (!this.validateOrder(this.parseOrder())) return\n    const baseWallet = app.walletMap[market.base.id]\n    const quoteWallet = app.walletMap[market.quote.id]\n    if (!baseWallet) {\n      page.orderErr.textContent = `No ${market.base.symbol} wallet`\n      Doc.show(page.orderErr)\n      return\n    }\n    if (!quoteWallet) {\n      page.orderErr.textContent = `No ${market.quote.symbol} wallet`\n      Doc.show(page.orderErr)\n      return\n    }\n    this.showVerify()\n  }\n\n  /*\n   * handleFeePayment is the handler for the 'feepayment' notification type.\n   * This is used to update the registration status of the current exchange.\n   */\n  handleFeePayment (note) {\n    const dexAddr = note.dex\n    if (dexAddr !== this.market.dex.host) return\n    // update local dex\n    this.market.dex = app.exchanges[dexAddr]\n    this.setRegistrationStatusVisibility()\n  }\n\n  /*\n   * handleOrderNote is the handler for the 'order'-type notification, which are\n   * used to update a user's order's status.\n   */\n  handleOrderNote (note) {\n    const order = note.order\n    const metaOrder = this.metaOrders[order.id]\n    // If metaOrder doesn't exist for the given order it means it was\n    // created via dexcctl and the GUI isn't aware of it.\n    // Call refreshActiveOrders to grab the order.\n    if (!metaOrder) return this.refreshActiveOrders()\n    const oldStatus = metaOrder.status\n    metaOrder.order = order\n    const bttn = Doc.tmplElement(metaOrder.row, 'cancelBttn')\n    if (note.subject === 'Missed cancel') {\n      Doc.show(bttn)\n    }\n    if (order.filled === order.qty) {\n      // Remove the cancellation button.\n      Doc.hide(bttn)\n    }\n    updateUserOrderRow(metaOrder.row, order)\n    // Only reset markers if there is a change, since the chart is redrawn.\n    if ((oldStatus === Order.StatusEpoch && order.status === Order.StatusBooked) ||\n      (oldStatus === Order.StatusBooked && order.status > Order.StatusBooked)) this.setMarkers()\n  }\n\n  /*\n   * handleEpochNote handles notifications signalling the start of a new epoch.\n   */\n  handleEpochNote (note) {\n    app.log('book', 'handleEpochNote:', note)\n    if (note.host !== this.market.dex.host || note.marketID !== this.market.sid) return\n    if (this.book) {\n      this.book.setEpoch(note.epoch)\n      this.chart.draw()\n    }\n    this.clearOrderTableEpochs(note.epoch)\n    for (const metaOrder of Object.values(this.metaOrders)) {\n      const order = metaOrder.order\n      const alreadyMatched = note.epoch > order.epoch\n      const statusTD = Doc.tmplElement(metaOrder.row, 'status')\n      switch (true) {\n        case order.type === Order.Limit && order.status === Order.StatusEpoch && alreadyMatched:\n          statusTD.textContent = order.tif === Order.ImmediateTiF ? 'executed' : 'booked'\n          order.status = order.tif === Order.ImmediateTiF ? Order.StatusExecuted : Order.StatusBooked\n          break\n        case order.type === Order.Market && order.status === Order.StatusEpoch:\n          // Technically don't know if this should be 'executed' or 'settling'.\n          statusTD.textContent = 'executed'\n          order.status = Order.StatusExecuted\n          break\n      }\n    }\n  }\n\n  setBalanceVisibility () {\n    if (this.market.dex.connected) {\n      Doc.show(this.page.balanceTable)\n      Doc.show(this.page.orderForm)\n    } else {\n      Doc.hide(this.page.balanceTable)\n      Doc.hide(this.page.orderForm)\n    }\n  }\n\n  /* handleBalanceNote handles notifications updating a wallet's balance. */\n  handleBalanceNote (note) {\n    this.setBalanceVisibility()\n    // if connection to dex server fails, it is not possible to retrieve\n    // markets.\n    if (!this.market.dex.connected) return\n    this.balanceWgt.updateAsset(note.assetID)\n    // If there's a balance update, refresh the max order section.\n    const mkt = this.market\n    const avail = note.balance.available\n    switch (note.assetID) {\n      case mkt.base.id:\n        // If we're not showing the max order panel yet, don't do anything.\n        if (!mkt.maxSell) break\n        if (typeof mkt.sellBalance === 'number' && mkt.sellBalance !== avail) mkt.maxSell = null\n        if (this.isSell()) this.preSell()\n        break\n      case mkt.quote.id:\n        if (!Object.keys(mkt.maxBuys).length) break\n        if (typeof mkt.buyBalance === 'number' && mkt.buyBalance !== avail) mkt.maxBuys = {}\n        if (!this.isSell()) this.preBuy()\n    }\n  }\n\n  /*\n   * submitOrder is attached to the affirmative button on the order validation\n   * form. Clicking the button is the last step in the order submission process.\n   */\n  async submitOrder () {\n    const page = this.page\n    const market = this.market\n    Doc.hide(page.forms)\n    const order = this.parseOrder()\n    const pw = page.vPass.value\n    page.vPass.value = ''\n    const req = {\n      order: order,\n      pw: pw\n    }\n    if (!this.validateOrder(order)) return\n    const res = await postJSON('/api/trade', req)\n    if (!app.checkResponse(res)) return\n    // If the wallets are not open locally, they must have been opened during\n    // ordering. Grab updated info.\n    const baseWallet = app.walletMap[market.base.id]\n    const quoteWallet = app.walletMap[market.quote.id]\n    if (!baseWallet.open || !quoteWallet.open) {\n      this.balanceWgt.updateAsset(market.base.id)\n      this.balanceWgt.updateAsset(market.quote.id)\n    }\n    this.refreshActiveOrders()\n    this.chart.draw()\n  }\n\n  /*\n   * createWallet is attached to successful submission of the wallet creation\n   * form. createWallet is only called once the form is submitted and a success\n   * response is received from the client.\n   */\n  async createWallet () {\n    const user = await app.fetchUser()\n    const asset = user.assets[this.currentCreate.id]\n    Doc.hide(this.page.forms)\n    this.balanceWgt.updateAsset(asset.id)\n    this.resolveOrderFormVisibility()\n  }\n\n  /*\n   * walletUnlocked is attached to successful submission of the wallet unlock\n   * form. walletUnlocked is only called once the form is submitted and a\n   * success response is received from the client.\n   */\n  async walletUnlocked () {\n    Doc.hide(this.page.forms)\n    await app.fetchUser()\n    this.balanceWgt.updateAsset(this.openAsset.id)\n  }\n\n  /* lotChanged is attached to the keyup and change events of the lots input. */\n  lotChanged () {\n    const page = this.page\n    const lots = parseInt(page.lotField.value)\n    if (lots <= 0) {\n      page.lotField.value = 0\n      page.qtyField.value = ''\n      return\n    }\n    const lotSize = this.market.baseCfg.lotSize\n    page.lotField.value = lots\n    page.qtyField.value = (lots * lotSize / 1e8)\n    this.previewQuoteAmt(true)\n  }\n\n  /*\n   * quantityChanged is attached to the keyup and change events of the quantity\n   * input.\n   */\n  quantityChanged (finalize) {\n    const page = this.page\n    const order = this.parseOrder()\n    if (order.qty <= 0) {\n      page.lotField.value = 0\n      page.qtyField.value = ''\n      return\n    }\n    const lotSize = this.market.baseCfg.lotSize\n    const lots = Math.floor(order.qty / lotSize)\n    const adjusted = lots * lotSize\n    page.lotField.value = lots\n    if (!order.isLimit && !order.sell) return\n    if (finalize) page.qtyField.value = (adjusted / 1e8)\n    this.previewQuoteAmt(true)\n  }\n\n  /*\n   * marketBuyChanged is attached to the keyup and change events of the quantity\n   * input for the market-buy form.\n   */\n  marketBuyChanged () {\n    const page = this.page\n    const qty = asAtoms(page.mktBuyField.value)\n    const gap = this.midGap()\n    if (!gap || !qty) {\n      page.mktBuyLots.textContent = '0'\n      page.mktBuyScore.textContent = '0'\n      return\n    }\n    const lotSize = this.market.baseCfg.lotSize\n    const received = qty / gap\n    page.mktBuyLots.textContent = (received / lotSize).toFixed(1)\n    page.mktBuyScore.textContent = Doc.formatCoinValue(received / 1e8)\n  }\n\n  /*\n   * rateFieldChanged is attached to the keyup and change events of the rate\n   * input.\n   */\n  rateFieldChanged () {\n    const order = this.parseOrder()\n    if (order.rate <= 0) {\n      this.depthLines.input = []\n      this.drawChartLines()\n      this.page.rateField.value = 0\n      return\n    }\n    // Truncate to rate step. If it is a market buy order, do not adjust.\n    const adjusted = this.adjustedRate()\n    const v = (adjusted / 1e8)\n    this.page.rateField.value = v\n    this.depthLines.input = [{\n      rate: v,\n      color: order.sell ? this.chart.theme.sellLine : this.chart.theme.buyLine\n    }]\n    this.drawChartLines()\n    this.previewQuoteAmt(true)\n  }\n\n  /*\n   * adjustedRate is the current rate field rate, rounded down to a\n   * multiple of rateStep.\n   */\n  adjustedRate () {\n    const v = this.page.rateField.value\n    if (!v) return null\n    const rate = asAtoms(v)\n    const rateStep = this.market.quoteCfg.rateStep\n    return rate - (rate % rateStep)\n  }\n\n  /* loadTable reloads the table from the current order book information. */\n  loadTable () {\n    this.loadTableSide(true)\n    this.loadTableSide(false)\n  }\n\n  /* loadTables loads the order book side into its table. */\n  loadTableSide (sell) {\n    const bookSide = sell ? this.book.sells : this.book.buys\n    const tbody = sell ? this.page.sellRows : this.page.buyRows\n    const cssClass = sell ? 'sellcolor' : 'buycolor'\n    Doc.empty(tbody)\n    if (!bookSide || !bookSide.length) return\n    bookSide.forEach(order => { tbody.appendChild(this.orderTableRow(order, cssClass)) })\n  }\n\n  /* addTableOrder adds a single order to the appropriate table. */\n  addTableOrder (order) {\n    const tbody = order.sell ? this.page.sellRows : this.page.buyRows\n    const cssClass = order.sell ? 'sellcolor' : 'buycolor'\n    let row = tbody.firstChild\n    // Handle market order differently.\n    if (order.rate === 0) {\n      // This is a market order.\n      if (!row || row.order.rate !== 0) {\n        row = this.orderTableRow(order, cssClass)\n        tbody.insertBefore(row, tbody.firstChild)\n      }\n      row.addQty(order.qty)\n      return\n    }\n    // Must be a limit order. Sort by rate. Skip the market order row.\n    if (row && row.order.rate === 0) row = row.nextSibling\n    const tr = this.orderTableRow(order, cssClass)\n    while (row) {\n      if ((order.rate < row.order.rate) === order.sell) {\n        tbody.insertBefore(tr, row)\n        return\n      }\n      row = row.nextSibling\n    }\n    tbody.appendChild(tr)\n  }\n\n  /* removeTableOrder removes a single order from its table. */\n  removeTableOrder (order) {\n    const token = order.token\n    for (const tbody of [this.page.sellRows, this.page.buyRows]) {\n      for (const tr of Array.from(tbody.children)) {\n        if (tr.order.token === token) {\n          tr.remove()\n          return\n        }\n      }\n    }\n  }\n\n  /* updateTableOrder looks for the order in the table and updates the qty */\n  updateTableOrder (update) {\n    const token = update.token\n    for (const tbody of [this.page.sellRows, this.page.buyRows]) {\n      for (const tr of Array.from(tbody.children)) {\n        if (tr.order.token === token) {\n          const td = tr.querySelector('[data-type=qty]')\n          td.innerText = update.qty.toFixed(8)\n          return\n        }\n      }\n    }\n  }\n\n  /*\n   * clearOrderTableEpochs removes immediate-tif orders whose epoch has expired.\n   */\n  clearOrderTableEpochs (newEpoch) {\n    this.clearOrderTableEpochSide(this.page.sellRows)\n    this.clearOrderTableEpochSide(this.page.buyRows)\n  }\n\n  /*\n   * clearOrderTableEpochs removes immediate-tif orders whose epoch has expired\n   * for a single side.\n   */\n  clearOrderTableEpochSide (tbody, newEpoch) {\n    for (const tr of Array.from(tbody.children)) {\n      if (tr.order.epoch && tr.order.epoch !== newEpoch) tr.remove()\n    }\n  }\n\n  /*\n   * orderTableRow creates a new <tr> element to insert into an order table.\n   */\n  orderTableRow (order, cssClass) {\n    const tr = this.page.rowTemplate.cloneNode(true)\n    tr.qty = order.qty\n    tr.order = order\n    const rate = order.rate\n    bind(tr, 'click', () => {\n      this.reportClick(rate)\n    })\n    let qtyTD\n    tr.querySelectorAll('td').forEach(td => {\n      switch (td.dataset.type) {\n        case 'qty':\n          qtyTD = td\n          td.innerText = order.qty.toFixed(8)\n          break\n        case 'rate':\n          if (order.rate === 0) {\n            td.innerText = 'market'\n          } else {\n            td.innerText = order.rate.toFixed(8)\n            td.classList.add(cssClass)\n            // Draw a line on the chart on hover.\n            Doc.bind(tr, 'mouseenter', e => {\n              const chart = this.chart\n              this.depthLines.hover = [{\n                rate: order.rate,\n                color: order.sell ? chart.theme.sellLine : chart.theme.buyLine\n              }]\n              this.drawChartLines()\n            })\n          }\n          break\n        case 'epoch':\n          if (order.epoch) td.appendChild(check.cloneNode())\n          break\n      }\n    })\n    tr.addQty = (qty) => {\n      tr.qty += qty\n      qtyTD.innerText = tr.qty.toFixed(8)\n    }\n    return tr\n  }\n\n  /* handleConnNote handles the 'conn' notification.\n   */\n  async handleConnNote (note) {\n    this.marketList.setConnectionStatus(note)\n    if (note.connected) {\n      // Having been disconnected from a DEX server, anything may have changed,\n      // or this may be the first opportunity to get the server's config, so\n      // fetch it all before reloading the markets page.\n      await app.fetchUser()\n      app.loadPage('markets')\n    }\n  }\n\n  /*\n   * filterMarkets sets the display of markets in the markets list based on the\n   * value of the search input.\n   */\n  filterMarkets () {\n    const filterTxt = this.page.marketSearch.value\n    const filter = filterTxt ? mkt => mkt.name.includes(filterTxt) : () => true\n    this.marketList.setFilter(filter)\n  }\n\n  /* drawChartLines draws the hover and input lines on the chart. */\n  drawChartLines () {\n    this.chart.setLines([...this.depthLines.hover, ...this.depthLines.input])\n    this.chart.draw()\n  }\n\n  /*\n   * unload is called by the Application when the user navigates away from\n   * the /markets page.\n   */\n  unload () {\n    ws.request(unmarketRoute, {})\n    ws.deregisterRoute(bookRoute)\n    ws.deregisterRoute(bookUpdateRoute)\n    ws.deregisterRoute(epochOrderRoute)\n    ws.deregisterRoute(bookOrderRoute)\n    ws.deregisterRoute(unbookOrderRoute)\n    this.chart.unattach()\n    Doc.unbind(document, 'keyup', this.keyup)\n    clearInterval(this.secondTicker)\n  }\n}\n\n/*\n *  MarketList represents the list of exchanges and markets on the left side of\n * markets view. The MarketList provides utilities for adjusting the visibility\n * and sort order of markets.\n */\nclass MarketList {\n  constructor (div) {\n    this.selected = null\n    const xcTmpl = Doc.tmplElement(div, 'xc')\n    cleanTemplates(xcTmpl)\n    this.xcSections = []\n    for (const dex of Object.values(app.user.exchanges)) {\n      this.xcSections.push(new ExchangeSection(xcTmpl, dex))\n    }\n    // Initial sort is alphabetical.\n    for (const xc of this.sortedSections()) {\n      div.appendChild(xc.box)\n    }\n  }\n\n  /*\n   * sortedSections returns a list of ExchangeSection sorted alphabetically by\n   * host.\n   */\n  sortedSections () {\n    return [...this.xcSections].sort((a, b) => a.host < b.host ? -1 : 1)\n  }\n\n  /*\n   * xcSection is a getter for the ExchangeSection for a specified host.\n   */\n  xcSection (host) {\n    for (const xc of this.xcSections) {\n      if (xc.host === host) return xc\n    }\n    return null\n  }\n\n  /* exists will be true if the specified market exists. */\n  exists (host, baseID, quoteID) {\n    const xc = this.xcSection(host)\n    if (!xc) return false\n    for (const mkt of xc.marketRows) {\n      if (mkt.baseID === baseID && mkt.quoteID === quoteID) return true\n    }\n    return false\n  }\n\n  /* first gets the first market from the first exchange, alphabetically. */\n  first () {\n    const firstXC = this.sortedSections()[0]\n    const firstMkt = firstXC.first()\n    // Cannot find markets if server connection failed.\n    if (!firstMkt) return makeMarket(firstXC.host)\n    return makeMarket(firstXC.host, firstMkt.baseID, firstMkt.quoteID)\n  }\n\n  /* select sets the specified market as selected. */\n  select (host, baseID, quoteID) {\n    if (this.selected) this.selected.row.classList.remove('selected')\n    this.selected = this.xcSection(host).marketRow(baseID, quoteID)\n    this.selected.row.classList.add('selected')\n  }\n\n  /* setConnectionStatus sets the visibility of the disconnected icon based\n   * on the core.ConnEventNote.\n   */\n  setConnectionStatus (note) {\n    this.xcSection(note.host).setConnected(note.connected)\n  }\n\n  /*\n   * setFilter sets the visibility of market rows based on the provided filter.\n   */\n  setFilter (filter) {\n    for (const xc of this.xcSections) {\n      xc.setFilter(filter)\n    }\n  }\n}\n\n/*\n * ExchangeSection is a top level section of the MarketList.\n */\nclass ExchangeSection {\n  constructor (tmpl, dex) {\n    this.dex = dex\n    this.host = dex.host\n    const box = tmpl.cloneNode(true)\n    this.box = box\n    const header = Doc.tmplElement(box, 'header')\n    this.disconnectedIcon = Doc.tmplElement(header, 'disconnected')\n    if (dex.connected) Doc.hide(this.disconnectedIcon)\n    header.append(dex.host)\n\n    this.marketRows = []\n    this.rows = Doc.tmplElement(box, 'mkts')\n    const rowTmpl = Doc.tmplElement(this.rows, 'mktrow')\n    this.rows.removeChild(rowTmpl)\n    // If disconnected is not possible to get the markets from the server.\n    if (!dex.markets) return\n\n    for (const mkt of Object.values(dex.markets)) {\n      this.marketRows.push(new MarketRow(rowTmpl, mkt))\n    }\n    for (const market of this.sortedMarkets()) {\n      this.rows.appendChild(market.row)\n    }\n  }\n\n  /*\n   * sortedMarkets is the list of MarketRow sorted alphabetically by the base\n   * symbol first, quote symbol second.\n   */\n  sortedMarkets () {\n    return [...this.marketRows].sort((a, b) => a.name < b.name ? -1 : 1)\n  }\n\n  /*\n   * first returns the first market in the alphabetically-sorted list of\n   * markets.\n   */\n  first () {\n    return this.sortedMarkets()[0]\n  }\n\n  /*\n   * marketRow gets the MarketRow for the specified market.\n   */\n  marketRow (baseID, quoteID) {\n    for (const mkt of this.marketRows) {\n      if (mkt.baseID === baseID && mkt.quoteID === quoteID) return mkt\n    }\n    return null\n  }\n\n  /* setConnected sets the visiblity of the disconnected icon. */\n  setConnected (isConnected) {\n    if (isConnected) Doc.hide(this.disconnectedIcon)\n    else Doc.show(this.disconnectedIcon)\n  }\n\n  /*\n   * setFilter sets the visibility of market rows based on the provided filter.\n   */\n  setFilter (filter) {\n    for (const mkt of this.marketRows) {\n      if (filter(mkt)) Doc.show(mkt.row)\n      else Doc.hide(mkt.row)\n    }\n  }\n}\n\n/*\n * MarketRow represents one row in the MarketList. A MarketRow is a subsection\n * of the ExchangeSection.\n */\nclass MarketRow {\n  constructor (tmpl, mkt) {\n    this.name = mkt.name\n    this.baseID = mkt.baseid\n    this.quoteID = mkt.quoteid\n    const row = tmpl.cloneNode(true)\n    this.row = row\n    Doc.tmplElement(row, 'baseicon').src = Doc.logoPath(mkt.basesymbol)\n    Doc.tmplElement(row, 'quoteicon').src = Doc.logoPath(mkt.quotesymbol)\n    row.append(`${mkt.basesymbol.toUpperCase()}-${mkt.quotesymbol.toUpperCase()}`)\n  }\n}\n\n/*\n * BalanceWidget is a display of balance information. Because the wallet can be\n * in any number of states, and because every exchange has different funding\n * coin confirmation requirements, the BalanceWidget displays a number of state\n * indicators and buttons, as well as tabulated balance data with rows for\n * locked and immature balance.\n */\nclass BalanceWidget {\n  constructor (table) {\n    const els = Doc.parsePage(table, [\n      'baseAvail', 'quoteAvail', 'baseNewWalletRow', 'quoteNewWalletRow',\n      'baseNewButton', 'quoteNewButton', 'baseLocked', 'quoteLocked',\n      'baseImmature', 'quoteImmature', 'baseImg', 'quoteImg',\n      'quoteUnsupported', 'baseUnsupported', 'baseExpired', 'quoteExpired',\n      'baseConnect', 'quoteConnect', 'baseSpinner', 'quoteSpinner',\n      'baseWalletState', 'quoteWalletState'\n    ])\n    this.base = {\n      id: 0,\n      cfg: null,\n      logo: els.baseImg,\n      avail: els.baseAvail,\n      newWalletRow: els.baseNewWalletRow,\n      newWalletBttn: els.baseNewButton,\n      locked: els.baseLocked,\n      immature: els.baseImmature,\n      unsupported: els.baseUnsupported,\n      expired: els.baseExpired,\n      connect: els.baseConnect,\n      spinner: els.baseSpinner,\n      iconBox: els.baseWalletState,\n      stateIcons: new WalletIcons(els.baseWalletState)\n    }\n    this.quote = {\n      id: 0,\n      cfg: null,\n      logo: els.quoteImg,\n      avail: els.quoteAvail,\n      newWalletRow: els.quoteNewWalletRow,\n      newWalletBttn: els.quoteNewButton,\n      locked: els.quoteLocked,\n      immature: els.quoteImmature,\n      unsupported: els.quoteUnsupported,\n      expired: els.quoteExpired,\n      connect: els.quoteConnect,\n      spinner: els.quoteSpinner,\n      iconBox: els.quoteWalletState,\n      stateIcons: new WalletIcons(els.quoteWalletState)\n    }\n    this.dex = null\n  }\n\n  /*\n   * setWallet sets the balance widget to display data for specified market.\n   */\n  setWallets (host, baseID, quoteID) {\n    this.dex = app.user.exchanges[host]\n    this.base.id = baseID\n    this.base.cfg = this.dex.assets[baseID]\n    this.quote.id = quoteID\n    this.quote.cfg = this.dex.assets[quoteID]\n    this.updateWallet(this.base)\n    this.updateWallet(this.quote)\n  }\n\n  /*\n   * updateWallet updates the displayed wallet information based on the\n   * core.Wallet state.\n   */\n  updateWallet (side) {\n    const asset = app.assets[side.id]\n    // Just hide everything to start.\n    Doc.hide(\n      side.newWalletRow, side.avail, side.immature, side.locked,\n      side.expired, side.unsupported, side.connect, side.spinner, side.iconBox\n    )\n    side.logo.src = Doc.logoPath(side.cfg.symbol)\n    // Handle an unsupported asset.\n    if (!asset) {\n      Doc.show(side.unsupported)\n      return\n    }\n    Doc.show(side.iconBox)\n    const wallet = asset.wallet\n    side.stateIcons.readWallet(wallet)\n    // Handle no wallet configured.\n    if (!wallet) {\n      Doc.show(side.newWalletRow)\n      return\n    }\n    const bal = wallet.balance\n    // Handle not connected and no balance known for the DEX.\n    if (!bal && !wallet.running) {\n      Doc.show(side.connect)\n      return\n    }\n    // If there is no balance, but the wallet is connected, show the loading\n    // icon while we fetch an update.\n    if (!bal) {\n      this.fetchBalance(side.id)\n      Doc.show(side.spinner)\n      return\n    }\n    // We have a wallet and a DEX-specific balance. Set all of the fields.\n    Doc.show(side.avail, side.immature, side.locked)\n    side.avail.textContent = Doc.formatCoinValue(bal.available / 1e8)\n    side.locked.textContent = Doc.formatCoinValue((bal.locked + bal.contractlocked) / 1e8)\n    side.immature.textContent = Doc.formatCoinValue(bal.immature / 1e8)\n    // If the current balance update time is older than an hour, show the\n    // expiration icon. Request a balance update, if possible.\n    const expired = new Date().getTime() - new Date(bal.stamp).getTime() > anHour\n    if (expired) {\n      Doc.show(side.expired)\n      if (wallet.running) this.fetchBalance(side.id)\n    } else Doc.hide(side.expired)\n  }\n\n  /*\n   * updateAsset updates the info for one side of the existing market. If the\n   * specified asset ID is not one of the current market's base or quote assets,\n   * it is silently ignored.\n   */\n  updateAsset (assetID) {\n    if (assetID === this.base.id) this.updateWallet(this.base)\n    else if (assetID === this.quote.id) this.updateWallet(this.quote)\n  }\n\n  /*\n   * fetchBalance requests a balance update from the API. The API response does\n   * include the balance, but we're ignoring it, since a balance update\n   * notification is received via the Application anyways.\n   */\n  async fetchBalance (assetID) {\n    const res = await postJSON('/api/balance', { assetID: assetID })\n    if (!app.checkResponse(res)) {\n      console.error('failed to fetch balance for asset ID', assetID)\n    }\n  }\n}\n\n/* makeMarket creates a market object that specifies basic market details. */\nfunction makeMarket (host, base, quote) {\n  return {\n    host: host,\n    base: base,\n    quote: quote\n  }\n}\n\n/* marketID creates a DEX-compatible market name from the ticker symbols. */\nexport function marketID (b, q) { return `${b}_${q}` }\n\n/* asAtoms converts the float string to atoms. */\nfunction asAtoms (s) {\n  return Math.round(parseFloat(s) * 1e8)\n}\n\n/* swapBttns changes the 'selected' class of the buttons. */\nfunction swapBttns (before, now) {\n  before.classList.remove('selected')\n  now.classList.add('selected')\n}\n\n/*\n * updateDataCol sets the textContent of descendent template element.\n */\nfunction updateDataCol (tr, col, s) {\n  Doc.tmplElement(tr, col).textContent = s\n}\n\n/*\n * updateUserOrderRow sets the td contents of the user's order table row.\n */\nfunction updateUserOrderRow (tr, ord) {\n  updateDataCol(tr, 'type', Order.typeString(ord))\n  updateDataCol(tr, 'side', Order.sellString(ord))\n  updateDataCol(tr, 'age', Doc.timeSince(ord.stamp))\n  updateDataCol(tr, 'rate', Doc.formatCoinValue(ord.rate / 1e8))\n  updateDataCol(tr, 'qty', Doc.formatCoinValue(ord.qty / 1e8))\n  updateDataCol(tr, 'filled', `${(ord.filled / ord.qty * 100).toFixed(1)}%`)\n  updateDataCol(tr, 'settled', `${(Order.settled(ord) / ord.qty * 100).toFixed(1)}%`)\n  updateDataCol(tr, 'status', Order.statusString(ord))\n}\n\n/*\n * cleanTemplates removes the elements from the DOM and deletes the id\n * attribute.\n */\nfunction cleanTemplates (...tmpls) {\n  tmpls.forEach(tmpl => {\n    tmpl.remove()\n    tmpl.removeAttribute('id')\n  })\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport * as Order from './orderutil'\nimport { postJSON } from './http'\n\nlet app\n\nconst orderBatchSize = 50\n\nexport default class OrdersPage extends BasePage {\n  constructor (application, main) {\n    super()\n    app = application\n    this.main = main\n    // if offset is '', there are no more orders available to auto-load for\n    // never-ending scrolling.\n    this.offset = ''\n    this.loading = false\n    const page = this.page = Doc.parsePage(main, [\n      'rowTmpl', 'tableBody', 'hostFilter', 'assetFilter', 'statusFilter',\n      'orderLoader', 'ordersTable'\n    ])\n    this.orderTmpl = page.rowTmpl\n    this.orderTmpl.remove()\n\n    // filterState will store arrays of strings. The assets and statuses\n    // sub-filters will need to be converted to ints for JSON encoding.\n    const filterState = this.filterState = {\n      hosts: [],\n      assets: [],\n      statuses: []\n    }\n\n    const search = new URLSearchParams(window.location.search)\n    const readFilter = (form, filterKey) => {\n      const v = search.get(filterKey)\n      if (!v || v.length === 0) return\n      const subFilter = v.split(',')\n      if (v) {\n        filterState[filterKey] = subFilter\n      }\n      form.querySelectorAll('input').forEach(bttn => {\n        if (subFilter.indexOf(bttn.value) >= 0) bttn.checked = true\n      })\n    }\n    readFilter(page.hostFilter, 'hosts')\n    readFilter(page.assetFilter, 'assets')\n    readFilter(page.statusFilter, 'statuses')\n\n    const applyButtons = []\n    const monitorFilter = (form, filterKey) => {\n      const applyBttn = form.querySelector('.apply-bttn')\n      applyButtons.push(applyBttn)\n      Doc.bind(applyBttn, 'click', () => {\n        this.submitFilter()\n        applyButtons.forEach(bttn => Doc.hide(bttn))\n      })\n      form.querySelectorAll('input').forEach(bttn => {\n        Doc.bind(bttn, 'change', () => {\n          const subFilter = parseSubFilter(form)\n          if (compareSubFilter(subFilter, filterState[filterKey])) {\n            // Same as currently loaded. Hide the apply button.\n            Doc.hide(applyBttn)\n          } else {\n            Doc.show(applyBttn)\n          }\n        })\n      })\n    }\n\n    monitorFilter(page.hostFilter, 'hosts')\n    monitorFilter(page.assetFilter, 'assets')\n    monitorFilter(page.statusFilter, 'statuses')\n\n    Doc.bind(this.main, 'scroll', () => {\n      if (this.loading) return\n      const belowBottom = page.ordersTable.offsetHeight - this.main.offsetHeight - this.main.scrollTop\n      if (belowBottom < 0) {\n        this.nextPage()\n      }\n    })\n\n    this.submitFilter()\n  }\n\n  /* setOrders empties the order table and appends the specified orders. */\n  setOrders (orders) {\n    Doc.empty(this.page.tableBody)\n    this.appendOrders(orders)\n  }\n\n  /* appendOrders appends orders to the orders table. */\n  appendOrders (orders) {\n    const tbody = this.page.tableBody\n    for (const ord of orders) {\n      const tr = this.orderTmpl.cloneNode(true)\n      const set = (tmplID, s) => { Doc.tmplElement(tr, tmplID).textContent = s }\n      const mktID = `${ord.baseSymbol.toUpperCase()}-${ord.quoteSymbol.toUpperCase()}`\n      set('host', `${mktID} @ ${ord.host}`)\n      let from, to, fromQty\n      let toQty = ''\n      if (ord.sell) {\n        [from, to] = [ord.baseSymbol, ord.quoteSymbol]\n        fromQty = Doc.formatCoinValue(ord.qty / 1e8)\n        if (ord.type === Order.Limit) {\n          toQty = Doc.formatCoinValue(ord.qty / 1e8 * ord.rate / 1e8)\n        }\n      } else {\n        [from, to] = [ord.quoteSymbol, ord.baseSymbol]\n        if (ord.type === Order.Market) {\n          fromQty = Doc.formatCoinValue(ord.qty / 1e8)\n        } else {\n          fromQty = Doc.formatCoinValue(ord.qty / 1e8 * ord.rate / 1e8)\n          toQty = Doc.formatCoinValue(ord.qty / 1e8)\n        }\n      }\n\n      set('fromQty', fromQty)\n      Doc.tmplElement(tr, 'fromLogo').src = Doc.logoPath(from)\n      set('fromSymbol', from)\n      set('toQty', toQty)\n      Doc.tmplElement(tr, 'toLogo').src = Doc.logoPath(to)\n      set('toSymbol', to)\n      set('type', `${Order.typeString(ord)} ${Order.sellString(ord)}`)\n      set('rate', Order.rateString(ord))\n      set('status', Order.statusString(ord))\n      set('filled', `${(ord.filled / ord.qty * 100).toFixed(1)}%`)\n      set('settled', `${(Order.settled(ord) / ord.qty * 100).toFixed(1)}%`)\n      const dateTime = new Date(ord.stamp).toLocaleString()\n      set('time', `${Doc.timeSince(ord.stamp)} ago, ${dateTime}`)\n      const link = Doc.tmplElement(tr, 'link')\n      link.href = `order/${ord.id}`\n      app.bindInternalNavigation(tr)\n      tbody.appendChild(tr)\n    }\n    if (orders.length === orderBatchSize) {\n      this.offset = orders[orders.length - 1].id\n    } else {\n      this.offset = ''\n    }\n  }\n\n  /* submitFilter submits the current filter and reloads the order table. */\n  async submitFilter () {\n    const page = this.page\n    this.offset = ''\n    const filterState = this.filterState\n    filterState.hosts = parseSubFilter(page.hostFilter)\n    filterState.assets = parseSubFilter(page.assetFilter)\n    filterState.statuses = parseSubFilter(page.statusFilter)\n\n    const url = new URL(window.location)\n    const search = new URLSearchParams(url.search)\n    search.delete('offset')\n\n    const setQuery = (k) => {\n      const subFilter = filterState[k]\n      if (subFilter.length === 0) {\n        search.delete(k)\n      } else {\n        search.set(k, subFilter.join(','))\n      }\n    }\n    setQuery('hosts')\n    setQuery('assets')\n    setQuery('statuses')\n\n    url.search = search.toString()\n    window.history.replaceState({ page: 'orders' }, '', url)\n\n    this.setOrders(await this.fetchOrders())\n  }\n\n  /* fetchOrders fetches orders using the current filter. */\n  async fetchOrders () {\n    const loaded = app.loading(this.main)\n    const res = await postJSON('/api/orders', this.currentFilter())\n    loaded()\n    return res.orders\n  }\n\n  /*\n   * currentFilter converts the local filter type (which is all strings) to the\n   * server's filter type.\n   */\n  currentFilter () {\n    const filterState = this.filterState\n    return {\n      hosts: filterState.hosts,\n      assets: filterState.assets.map(s => parseInt(s)),\n      statuses: filterState.statuses.map(s => parseInt(s)),\n      n: orderBatchSize,\n      offset: this.offset\n    }\n  }\n\n  /*\n   * nextPage resubmits the filter with the offset set to the last loaded order.\n   */\n  async nextPage () {\n    if (this.offset === '' || this.loading) return\n    this.loading = true\n    Doc.show(this.page.orderLoader)\n    const orders = await this.fetchOrders()\n    this.loading = false\n    Doc.hide(this.page.orderLoader)\n    this.appendOrders(orders)\n  }\n}\n\n/*\n * parseSubFilter parses a bool-map from the checkbox inputs in the specified\n * ancestor element.\n */\nfunction parseSubFilter (form) {\n  const entries = []\n  form.querySelectorAll('input').forEach(box => {\n    if (box.checked) entries.push(box.value)\n  })\n  return entries\n}\n\n/* compareSubFilter compares the two filter arrays for unordered equivalence. */\nfunction compareSubFilter (filter1, filter2) {\n  if (filter1.length !== filter2.length) return false\n  for (const entry of filter1) {\n    if (filter2.indexOf(entry) === -1) return false\n  }\n  return true\n}\n","import Doc from './doc'\nimport BasePage from './basepage'\nimport * as Order from './orderutil'\nimport { bind as bindForm } from './forms'\nimport { postJSON } from './http'\n\nconst Mainnet = 0\nconst Testnet = 1\n// const Regtest = 3\n\nconst animationLength = 500\n\nlet app, net\n\nexport default class OrderPage extends BasePage {\n  constructor (application, main) {\n    super()\n    app = application\n    const stampers = main.querySelectorAll('[data-stamp]')\n    net = parseInt(main.dataset.net)\n    // Find the order\n    this.orderID = main.dataset.oid\n    this.order = app.order(this.orderID)\n    // app.order can only access active orders. If the order is not active,\n    // we'll need to get the data from the database.\n    if (!this.order) this.fetchOrder()\n    const page = this.page = Doc.parsePage(main, [\n      'cancelBttn', 'cancelRemain', 'cancelUnit', 'cancelForm', 'forms',\n      'cancelSubmit', 'cancelPass', 'status', 'matchBox', 'matchesLabel'\n    ])\n\n    if (page.cancelBttn) {\n      Doc.bind(page.cancelBttn, 'click', () => {\n        this.showForm(page.cancelForm)\n      })\n    }\n\n    // If the user clicks outside of a form, it should close the page overlay.\n    Doc.bind(page.forms, 'mousedown', e => {\n      if (!Doc.mouseInElement(e, this.currentForm)) {\n        Doc.hide(page.forms)\n        page.cancelPass.value = ''\n      }\n    })\n\n    // Cancel order form\n    bindForm(page.cancelForm, page.cancelSubmit, async () => { this.submitCancel() })\n\n    main.querySelectorAll('[data-explorer-id]').forEach(link => {\n      setCoinHref(link)\n    })\n\n    const setStamp = () => {\n      for (const span of stampers) {\n        span.textContent = Doc.timeSince(parseInt(span.dataset.stamp))\n      }\n    }\n    setStamp()\n\n    this.secondTicker = setInterval(() => {\n      setStamp()\n    }, 10000) // update every 10 seconds\n\n    this.notifiers = {\n      order: note => { this.handleOrderNote(note) },\n      match: note => { this.handleMatchNote(note) }\n    }\n  }\n\n  unload () {\n    clearInterval(this.secondTicker)\n  }\n\n  /* fetchOrder fetches the order from the client. */\n  async fetchOrder () {\n    const res = await postJSON('/api/order', this.orderID)\n    if (!app.checkResponse(res)) return\n    this.order = res.order\n  }\n\n  /* showCancel shows a form to confirm submission of a cancel order. */\n  showCancel () {\n    const order = this.order\n    const page = this.page\n    const remaining = order.qty - order.filled\n    page.cancelRemain.textContent = Doc.formatCoinValue(remaining / 1e8)\n    const symbol = Order.isMarketBuy(order) ? this.market.quote.symbol : this.market.base.symbol\n    page.cancelUnit.textContent = symbol.toUpperCase()\n    this.showForm(page.cancelForm)\n  }\n\n  /* showForm shows a modal form with a little animation. */\n  async showForm (form) {\n    this.currentForm = form\n    const page = this.page\n    Doc.hide(page.cancelForm)\n    form.style.right = '10000px'\n    Doc.show(page.forms, form)\n    const shift = (page.forms.offsetWidth + form.offsetWidth) / 2\n    await Doc.animate(animationLength, progress => {\n      form.style.right = `${(1 - progress) * shift}px`\n    }, 'easeOutHard')\n    form.style.right = '0px'\n  }\n\n  /* submitCancel submits a cancellation for the order. */\n  async submitCancel () {\n    // this will be the page.cancelSubmit button (evt.currentTarget)\n    const page = this.page\n    const order = this.order\n    const req = {\n      orderID: order.id,\n      pw: page.cancelPass.value\n    }\n    page.cancelPass.value = ''\n    const loaded = app.loading(page.cancelForm)\n    const res = await postJSON('/api/cancel', req)\n    loaded()\n    if (!app.checkResponse(res)) return\n    page.status.textContent = 'cancelling'\n    Doc.hide(page.forms)\n    order.cancelling = true\n  }\n\n  /*\n   * handleOrderNote is the handler for the 'order'-type notification, which are\n   * used to update an order's status.\n   */\n  handleOrderNote (note) {\n    const order = note.order\n    const bttn = this.page.cancelBttn\n    if (bttn && order.id === this.orderID) {\n      if (bttn && order.status > Order.StatusBooked) Doc.hide(bttn)\n      this.page.status.textContent = Order.statusString(order)\n    }\n    for (const m of order.matches || []) this.processMatch(m)\n  }\n\n  /* handleMatchNote handles a 'match' notification. */\n  handleMatchNote (note) {\n    if (note.orderID !== this.orderID) return\n    this.processMatch(note.match)\n  }\n\n  /*\n   * processMatch synchronizes a match's card with a match received in a\n   * 'order' or 'match' notification.\n   */\n  processMatch (m) {\n    let card\n    for (const div of Array.from(this.page.matchBox.querySelectorAll('.match-card'))) {\n      if (div.dataset.matchID === m.matchID) {\n        card = div\n        break\n      }\n    }\n    if (!card) {\n      // TO DO: Create a new card from template.\n      return\n    }\n\n    const setCoin = (divName, linkName, coin) => {\n      if (!coin) return\n      Doc.show(Doc.tmplElement(card, divName))\n      const coinLink = Doc.tmplElement(card, linkName)\n      coinLink.textContent = coin.stringID\n      coinLink.dataset.explorerCoin = coin.stringID\n      setCoinHref(coinLink)\n    }\n\n    setCoin('swap', 'swapCoin', m.swap)\n    setCoin('counterSwap', 'counterSwapCoin', m.counterSwap)\n    setCoin('redeem', 'redeemCoin', m.redeem)\n    setCoin('counterRedeem', 'counterRedeemCoin', m.counterRedeem)\n    setCoin('refund', 'refundCoin', m.refund)\n\n    const swapSpan = Doc.tmplElement(card, 'swapMsg')\n    const cSwapSpan = Doc.tmplElement(card, 'counterSwapMsg')\n\n    if (inCounterSwapCast(m)) {\n      cSwapSpan.textContent = confirmationString(m.counterSwap)\n      Doc.hide(Doc.tmplElement(card, 'swapMsg'))\n      Doc.show(cSwapSpan)\n    } else if (inSwapCast(m)) {\n      swapSpan.textContent = confirmationString(m.swap)\n      Doc.hide(Doc.tmplElement(card, 'counterSwapMsg'))\n      Doc.show(swapSpan)\n    } else {\n      Doc.hide(swapSpan, cSwapSpan)\n    }\n\n    Doc.tmplElement(card, 'status').textContent = Order.matchStatusString(m.status, m.side)\n  }\n}\n\n/*\n * confirmationString is a string describing the state of confirmations for a\n * coin\n * */\nfunction confirmationString (coin) {\n  if (!coin.confs) return ''\n  return `${coin.confs.count} / ${coin.confs.required} confirmations`\n}\n\n/*\n * inCounterSwapCast will be true if we are waiting on confirmations for the\n * counterparty's swap.\n */\nfunction inCounterSwapCast (m) {\n  return (m.side === Order.Taker && m.status === Order.MakerSwapCast) || (m.side === Order.Maker && m.status === Order.TakerSwapCast)\n}\n\n/*\n * inCounterSwapCast will be true if we are waiting on confirmations for our own\n * swap.\n */\nfunction inSwapCast (m) {\n  return (m.side === Order.Maker && m.status === Order.MakerSwapCast) || (m.side === Order.Taker && m.status === Order.TakerSwapCast)\n}\n\n/*\n * setCoinHref sets the hyperlink element's href attribute based on its\n * data-explorer-id and data-explorer-coin values.\n */\nfunction setCoinHref (link) {\n  const assetExplorer = CoinExplorers[parseInt(link.dataset.explorerId)]\n  if (!assetExplorer) return\n  const formatter = assetExplorer[net]\n  if (!formatter) return\n  link.classList.remove('plainlink')\n  link.classList.add('subtlelink')\n  link.href = formatter(link.dataset.explorerCoin)\n}\n\nconst CoinExplorers = {\n  42: { // dcr\n    [Mainnet]: cid => {\n      const [txid, vout] = cid.split(':')\n      return `https://explorer.dcrdata.org/tx/${txid}/out/${vout}`\n    },\n    [Testnet]: cid => {\n      const [txid, vout] = cid.split(':')\n      return `https://testnet.dcrdata.org/tx/${txid}/out/${vout}`\n    }\n  },\n  0: { // btc\n    [Mainnet]: cid => `https://bitaps.com/${cid.split(':')[0]}`,\n    [Testnet]: cid => `https://tbtc.bitaps.com/${cid.split(':')[0]}`\n  },\n  2: { // ltc\n    [Mainnet]: cid => `https://ltc.bitaps.com/${cid.split(':')[0]}`,\n    [Testnet]: cid => `https://tltc.bitaps.com/${cid.split(':')[0]}`\n  }\n}\n","import Doc from './doc'\nimport State from './state'\nimport RegistrationPage from './register'\nimport LoginPage from './login'\nimport WalletsPage from './wallets'\nimport SettingsPage from './settings'\nimport MarketsPage from './markets'\nimport OrdersPage from './orders'\nimport OrderPage from './order'\nimport { getJSON, postJSON } from './http'\nimport * as ntfn from './notifications'\nimport ws from './ws'\n\nconst idel = Doc.idel // = element by id\nconst bind = Doc.bind\nconst unbind = Doc.unbind\n\nconst notificationRoute = 'notify'\nconst loggersKey = 'loggers'\nconst recordersKey = 'recorders'\nconst noteCacheSize = 100\n\n/* constructors is a map to page constructors. */\nconst constructors = {\n  login: LoginPage,\n  register: RegistrationPage,\n  markets: MarketsPage,\n  wallets: WalletsPage,\n  settings: SettingsPage,\n  orders: OrdersPage,\n  order: OrderPage\n}\n\n// unathedPages are pages that don't require authorization to load.\n// These are endpoints outside of the requireLogin block in webserver.New.\nconst unauthedPages = ['register', 'login', 'settings']\n\n// Application is the main javascript web application for the Decred DEX client.\nexport default class Application {\n  constructor () {\n    this.notes = []\n    this.pokes = []\n    // The \"user\" is a large data structure that contains nearly all state\n    // information, including exchanges, markets, wallets, and orders.\n    this.user = {\n      accounts: {},\n      wallets: {}\n    }\n    this.commitHash = process.env.COMMITHASH\n    this.showPopups = State.getCookie('popups') === '1'\n    console.log('Decred DEX Client App, Build', this.commitHash.substring(0, 7))\n\n    // Loggers can be enabled by setting a truthy value to the loggerID using\n    // enableLogger. Settings are stored across sessions. See docstring for the\n    // log method for more info.\n    this.loggers = State.fetch(loggersKey) || {}\n    window.enableLogger = (loggerID, state) => {\n      if (state) this.loggers[loggerID] = true\n      else delete this.loggers[loggerID]\n      State.store(loggersKey, this.loggers)\n      return `${loggerID} logger ${state ? 'enabled' : 'disabled'}`\n    }\n    // Enable logging from anywhere.\n    window.log = (...a) => { this.log(...a) }\n\n    // Recorders can record log messages, and then save them to file on request.\n    const recorderKeys = State.fetch(recordersKey) || []\n    this.recorders = {}\n    for (const loggerID of recorderKeys) {\n      console.log('recording', loggerID)\n      this.recorders[loggerID] = []\n    }\n    window.recordLogger = (loggerID, on) => {\n      if (on) this.recorders[loggerID] = []\n      else delete this.recorders[loggerID]\n      State.store(recordersKey, Object.keys(this.recorders))\n      return `${loggerID} recorder ${on ? 'enabled' : 'disabled'}`\n    }\n    window.dumpLogger = loggerID => {\n      const record = this.recorders[loggerID]\n      if (!record) return `no recorder for logger ${loggerID}`\n      const a = document.createElement('a')\n      a.href = `data:application/octet-stream;base64,${window.btoa(JSON.stringify(record, null, 4))}`\n      a.download = `${loggerID}.json`\n      document.body.appendChild(a)\n      a.click()\n      setTimeout(() => {\n        document.body.removeChild(a)\n      }, 0)\n    }\n  }\n\n  /**\n   * Start the application. This is the only thing done from the index.js entry\n   * point. Read the id = main element and attach handlers.\n   */\n  async start () {\n    // Handle back navigation from the browser.\n    bind(window, 'popstate', (e) => {\n      const page = e.state.page\n      if (!page && page !== '') return\n      this.loadPage(page, e.state.data, true)\n    })\n    // The main element is the interchangeable part of the page that doesn't\n    // include the header. Main should define a data-handler attribute\n    // associated with  one of the available constructors.\n    this.main = idel(document, 'main')\n    const handler = this.main.dataset.handler\n    // Don't fetch the user until we know what page we're on.\n    await this.fetchUser()\n    // The application is free to respond with a page that differs from the\n    // one requested in the omnibox, e.g. routing though a login page. Set the\n    // current URL state based on the actual page.\n    const url = new URL(window.location)\n    if (handlerFromPath(url.pathname) !== handler) {\n      url.pathname = `/${handler}`\n      url.search = ''\n      window.history.replaceState({ page: handler }, '', url)\n    }\n    // Attach stuff.\n    this.attachHeader()\n    this.attachCommon(this.header)\n    this.attach()\n    // Load recent notifications from Window.localStorage.\n    const notes = State.fetch('notifications')\n    this.setNotes(notes || [])\n    // Connect the websocket and register the notification route.\n    ws.connect(getSocketURI(), this.reconnected)\n    ws.registerRoute(notificationRoute, note => {\n      this.notify(note)\n    })\n  }\n\n  /*\n   * reconnected is called by the websocket client when a reconnection is made.\n   */\n  reconnected () {\n    window.location.reload() // This triggers another websocket disconnect/connect (!)\n    // a fetchUser() and loadPage(window.history.state.page) might work\n  }\n\n  /*\n   * Fetch and save the user, which is the primary core state that must be\n   * maintained by the Application.\n   */\n  async fetchUser () {\n    const user = await getJSON('/api/user')\n    // If it's not a page that requires auth, skip the error notification.\n    const skipNote = unauthedPages.indexOf(this.main.dataset.handler) > -1\n    if (!this.checkResponse(user, skipNote)) return\n    this.user = user\n    this.assets = user.assets\n    this.exchanges = user.exchanges\n    this.walletMap = {}\n    for (const [assetID, asset] of Object.entries(user.assets)) {\n      if (asset.wallet) {\n        this.walletMap[assetID] = asset.wallet\n      }\n    }\n    this.updateMenuItemsDisplay()\n    return user\n  }\n\n  /* Load the page from the server. Insert and bind the DOM. */\n  async loadPage (page, data, skipPush) {\n    // Close some menus and tooltips.\n    this.tooltip.style.left = '-10000px'\n    Doc.hide(this.page.noteBox, this.page.profileBox)\n    // Parse the request.\n    const url = new URL(`/${page}`, window.location.origin)\n    const requestedHandler = handlerFromPath(page)\n    // Fetch and parse the page.\n    const response = await window.fetch(url)\n    if (!response.ok) return false\n    const html = await response.text()\n    const doc = Doc.noderize(html)\n    const main = idel(doc, 'main')\n    const delivered = main.dataset.handler\n    // Append the request to the page history.\n    if (!skipPush) {\n      const path = delivered === requestedHandler ? url.toString() : `/${delivered}`\n      window.history.pushState({ page: page, data: data }, delivered, path)\n    }\n    // Insert page and attach handlers.\n    document.title = doc.title\n    this.main.replaceWith(main)\n    this.main = main\n    this.attach(data)\n    return true\n  }\n\n  /* attach binds the common handlers and calls the page constructor. */\n  attach (data) {\n    const handlerID = this.main.dataset.handler\n    if (!handlerID) {\n      console.error('cannot attach to content with no specified handler')\n      return\n    }\n    this.attachCommon(this.main)\n    if (this.loadedPage) this.loadedPage.unload()\n    const constructor = constructors[handlerID]\n    if (constructor) this.loadedPage = new constructor(this, this.main, data)\n    else this.loadedPage = null\n\n    // Bind the tooltips.\n    this.bindTooltips(this.main)\n  }\n\n  bindTooltips (ancestor) {\n    ancestor.querySelectorAll('[data-tooltip]').forEach(el => {\n      bind(el, 'mouseenter', () => {\n        this.tooltip.textContent = el.dataset.tooltip\n        const lyt = Doc.layoutMetrics(el)\n        let left = lyt.centerX - this.tooltip.offsetWidth / 2\n        if (left < 0) left = 5\n        if (left + this.tooltip.offsetWidth > document.body.offsetWidth) {\n          left = document.body.offsetWidth - this.tooltip.offsetWidth - 5\n        }\n        this.tooltip.style.left = `${left}px`\n        this.tooltip.style.top = `${lyt.bodyTop - this.tooltip.offsetHeight - 5}px`\n      })\n      bind(el, 'mouseleave', () => {\n        this.tooltip.style.left = '-10000px'\n      })\n    })\n  }\n\n  /* attachHeader attaches the header element, which unlike the main element,\n   * isn't replaced during page navigation.\n   */\n  attachHeader () {\n    this.header = idel(document.body, 'header')\n    this.popupNotes = idel(document.body, 'popupNotes')\n    this.popupTmpl = Doc.tmplElement(this.popupNotes, 'note')\n    this.popupTmpl.remove()\n    this.tooltip = idel(document.body, 'tooltip')\n    const pg = this.page = Doc.parsePage(this.header, [\n      'noteIndicator', 'noteList', 'noteTmpl', 'marketsMenuEntry',\n      'walletsMenuEntry', 'noteMenuEntry', 'loader', 'profileMenuEntry',\n      'profileIndicator', 'profileSignout', 'innerNoteIcon', 'innerProfileIcon',\n      'noteBox', 'profileBox', 'pokeCat', 'noteCat', 'pokeBox', 'pokeList',\n      'pokeTmpl'\n    ])\n    delete pg.noteTmpl.id\n    pg.noteTmpl.remove()\n    delete pg.pokeTmpl.id\n    pg.pokeTmpl.remove()\n    pg.loader.remove()\n    pg.loader.style.backgroundColor = 'rgba(0, 0, 0, 0.5)'\n    Doc.show(pg.loader)\n\n    bind(pg.noteMenuEntry, 'click', async () => {\n      Doc.hide(pg.pokeList)\n      Doc.show(pg.noteList)\n      this.ackNotes()\n      pg.noteCat.classList.add('active')\n      pg.pokeCat.classList.remove('active')\n      this.showDropdown(pg.noteMenuEntry, pg.noteBox)\n      Doc.hide(pg.noteIndicator)\n      for (const note of this.notes) {\n        if (note.acked) {\n          note.el.classList.remove('firstview')\n        }\n      }\n      this.setNoteTimes(pg.noteList)\n      this.setNoteTimes(pg.pokeList)\n      this.storeNotes()\n    })\n\n    bind(pg.profileMenuEntry, 'click', () => {\n      this.showDropdown(pg.profileMenuEntry, pg.profileBox)\n    })\n\n    bind(pg.innerNoteIcon, 'click', () => { Doc.hide(pg.noteBox) })\n    bind(pg.innerProfileIcon, 'click', () => { Doc.hide(pg.profileBox) })\n\n    bind(pg.profileSignout, 'click', async e => await this.signOut())\n\n    bind(pg.pokeCat, 'click', () => {\n      this.setNoteTimes(pg.pokeList)\n      pg.pokeCat.classList.add('active')\n      pg.noteCat.classList.remove('active')\n      Doc.hide(pg.noteList)\n      Doc.show(pg.pokeList)\n      this.ackNotes()\n    })\n\n    bind(pg.noteCat, 'click', () => {\n      this.setNoteTimes(pg.noteList)\n      pg.noteCat.classList.add('active')\n      pg.pokeCat.classList.remove('active')\n      Doc.hide(pg.pokeList)\n      Doc.show(pg.noteList)\n      this.ackNotes()\n    })\n  }\n\n  /*\n   * showDropdown sets the position and visibility of the specified dropdown\n   * dialog according to the position of its icon button.\n   */\n  showDropdown (icon, dialog) {\n    const ico = icon.getBoundingClientRect()\n    Doc.hide(this.page.noteBox, this.page.profileBox)\n    Doc.show(dialog)\n    dialog.style.right = `${window.innerWidth - ico.left - ico.width + 11}px`\n    dialog.style.top = `${ico.top - 9}px`\n\n    const hide = e => {\n      if (!Doc.mouseInElement(e, dialog)) {\n        Doc.hide(dialog)\n        unbind(document, 'click', hide)\n        if (dialog === this.page.noteBox && Doc.isDisplayed(this.page.noteList)) {\n          this.ackNotes()\n        }\n      }\n    }\n    bind(document, 'click', hide)\n  }\n\n  ackNotes () {\n    const acks = []\n    for (const note of this.notes) {\n      if (note.acked) {\n        note.el.classList.remove('firstview')\n      } else {\n        note.acked = true\n        if (note.id && note.severity > ntfn.POKE) acks.push(note.id)\n      }\n    }\n    if (acks.length) ws.request('acknotes', acks)\n    Doc.hide(this.page.noteIndicator)\n  }\n\n  setNoteTimes (noteList) {\n    for (const el of Array.from(noteList.children)) {\n      el.querySelector('span.note-time').textContent = Doc.timeSince(el.note.stamp)\n    }\n  }\n\n  /*\n   * bindInternalNavigation hijacks navigation by click on any local links that\n   * are descendents of ancestor.\n   */\n  bindInternalNavigation (ancestor) {\n    const pageURL = new URL(window.location)\n    ancestor.querySelectorAll('a').forEach(a => {\n      if (!a.href) return\n      const url = new URL(a.href)\n      if (url.origin === pageURL.origin) {\n        const token = url.pathname.substring(1)\n        const params = {}\n        if (url.search) {\n          url.searchParams.forEach((v, k) => {\n            params[k] = v\n          })\n        }\n        Doc.bind(a, 'click', e => {\n          e.preventDefault()\n          this.loadPage(token, params)\n        })\n      }\n    })\n  }\n\n  /*\n   * storeNotes stores the list of notifications in Window.localStorage. The\n   * actual stored list is stripped of information not necessary for display.\n   */\n  storeNotes () {\n    State.store('notifications', this.notes.map(n => {\n      return {\n        subject: n.subject,\n        details: n.details,\n        severity: n.severity,\n        stamp: n.stamp,\n        id: n.id,\n        acked: n.acked\n      }\n    }))\n  }\n\n  /*\n   * updateMenuItemsDisplay should be called when the user has signed in or out,\n   * and when the user registers a DEX.\n   */\n  updateMenuItemsDisplay () {\n    const pg = this.page\n    if (!pg) {\n      // initial page load, header elements not yet attached but menu items\n      // would already be hidden/displayed as appropriate.\n      return\n    }\n    if (!this.user.authed) {\n      Doc.hide(pg.noteMenuEntry, pg.walletsMenuEntry, pg.marketsMenuEntry, pg.profileMenuEntry)\n      return\n    }\n    Doc.show(pg.noteMenuEntry, pg.walletsMenuEntry, pg.profileMenuEntry)\n    if (Object.keys(this.user.exchanges).length > 0) {\n      Doc.show(pg.marketsMenuEntry)\n    } else {\n      Doc.hide(pg.marketsMenuEntry)\n    }\n  }\n\n  /* attachCommon scans the provided node and handles some common bindings. */\n  attachCommon (node) {\n    this.bindInternalNavigation(node)\n  }\n\n  /*\n   * updateExchangeRegistration updates the information for the exchange\n   * registration payment\n   */\n  updateExchangeRegistration (dexAddr, isPaid, confs) {\n    const dex = this.exchanges[dexAddr]\n\n    if (isPaid) {\n      // setting the null value in the 'confs' field indicates that the fee\n      // payment was completed\n      dex.confs = null\n      return\n    }\n\n    dex.confs = confs\n  }\n\n  /*\n   * handleFeePaymentNote is the handler for the 'feepayment'-type notification, which\n   * is used to update the dex registration status.\n   */\n  handleFeePaymentNote (note) {\n    switch (note.subject) {\n      case 'regupdate':\n        this.updateExchangeRegistration(note.dex, false, note.confirmations)\n        break\n      case 'Account registered':\n        this.updateExchangeRegistration(note.dex, true)\n        break\n      default:\n        break\n    }\n  }\n\n  /*\n   * setNotes sets the current notification cache and populates the notification\n   * display.\n   */\n  setNotes (notes) {\n    this.log('notes', 'setNotes', notes)\n    this.notes = []\n    Doc.empty(this.page.noteList)\n    for (let i = 0; i < notes.length; i++) {\n      this.prependNoteElement(notes[i], true)\n    }\n    this.storeNotes()\n  }\n\n  /*\n   * notify is the top-level handler for notifications received from the client.\n   * Notifications are propagated to the loadedPage.\n   */\n  notify (note) {\n    // Handle type-specific updates.\n    this.log('notes', 'notify', note)\n    switch (note.type) {\n      case 'order': {\n        const order = note.order\n        const mkt = this.user.exchanges[order.host].markets[order.market]\n        // Updates given order in market's orders list if it finds it.\n        // Returns a bool which indicates if order was found.\n        const updateOrder = (mkt, ord) => {\n          for (const i in mkt.orders || []) {\n            if (mkt.orders[i].id === ord.id) {\n              mkt.orders[i] = ord\n              return true\n            }\n          }\n          return false\n        }\n        // If the notification order already exists we update it.\n        // In case market's orders list is empty or the notification order isn't\n        // part of it we add it manually as this means the order was\n        // just placed.\n        if (!mkt.orders) mkt.orders = [order]\n        else if (!updateOrder(mkt, order)) mkt.orders.push(order)\n        break\n      }\n      case 'balance': {\n        const wallet = this.user.assets &&\n          this.user.assets[note.assetID].wallet\n        if (wallet) wallet.balance = note.balance\n        break\n      }\n      case 'feepayment':\n        this.handleFeePaymentNote(note)\n        break\n      case 'walletstate':\n      case 'walletconfig': {\n        // assets can be null if failed to connect to dex server.\n        if (!this.assets) return\n        const wallet = note.wallet\n        this.assets[wallet.assetID].wallet = wallet\n        this.walletMap[wallet.assetID] = wallet\n        const balances = this.main.querySelectorAll(`[data-balance-target=\"${wallet.assetID}\"]`)\n        balances.forEach(el => { el.textContent = (wallet.balance.available / 1e8).toFixed(8) })\n        break\n      }\n      case 'match': {\n        const ord = this.order(note.orderID)\n        if (ord) updateMatch(ord, note.match)\n        break\n      }\n      case 'conn': {\n        const dex = this.user.exchanges[note.host]\n        if (dex) dex.connected = note.connected\n      }\n    }\n\n    // Inform the page.\n    if (this.loadedPage) this.loadedPage.notify(note)\n    // Discard data notifications.\n    if (note.severity < ntfn.POKE) return\n    // Poke notifications have their own display.\n    if (this.showPopups) {\n      const span = this.popupTmpl.cloneNode(true)\n      Doc.tmplElement(span, 'text').textContent = `${note.subject}: ${note.details}`\n      const indicator = Doc.tmplElement(span, 'indicator')\n      if (note.severity === ntfn.POKE) {\n        Doc.hide(indicator)\n      } else setSeverityClass(indicator, note.severity)\n      const pn = this.popupNotes\n      pn.appendChild(span)\n      // These take up screen space. Only show max 5 at a time.\n      while (pn.children.length > 5) pn.removeChild(pn.firstChild)\n      setTimeout(async () => {\n        await Doc.animate(500, progress => {\n          span.style.opacity = 1 - progress\n        })\n        span.remove()\n      }, 6000)\n    }\n    // Success and higher severity go to the bell dropdown.\n    if (note.severity === ntfn.POKE) this.prependPokeElement(note)\n    else this.prependNoteElement(note)\n  }\n\n  /*\n   * log prints to the console if a logger has been enabled. Loggers are created\n   * implicitly by passing a loggerID to log. i.e. you don't create a logger,\n   * you just log to it. Loggers are enabled by invoking a global function,\n   * enableLogger(loggerID, onOffBoolean), from the browser's js console. Your\n   * choices are stored across sessions. Some common and useful loggers are\n   * listed below, but this list is not meant to be comprehensive.\n   *\n   * LoggerID   Description\n   * --------   -----------\n   * notes      Notifications of all levels.\n   * book       Order book feed.\n   * ws.........Websocket connection status changes.\n   */\n  log (loggerID, ...msg) {\n    if (this.loggers[loggerID]) console.log(`${nowString()}[${loggerID}]:`, ...msg)\n    if (this.recorders[loggerID]) {\n      this.recorders[loggerID].push({\n        time: nowString(),\n        msg: msg\n      })\n    }\n  }\n\n  prependPokeElement (note) {\n    this.pokes.push(note)\n    while (this.pokes.length > noteCacheSize) this.pokes.shift()\n    const el = this.makePoke(note)\n    this.prependListElement(this.page.pokeList, note, el)\n  }\n\n  prependNoteElement (note, skipSave) {\n    this.notes.push(note)\n    while (this.notes.length > noteCacheSize) this.notes.shift()\n    const noteList = this.page.noteList\n    const el = this.makeNote(note)\n    this.prependListElement(noteList, note, el)\n    if (!skipSave) this.storeNotes()\n    // Set the indicator color.\n    if (this.notes.length === 0 || (Doc.isDisplayed(this.page.noteBox) && Doc.isDisplayed(noteList))) return\n    let unacked = 0\n    const severity = this.notes.reduce((s, note) => {\n      if (!note.acked) unacked++\n      if (!note.acked && note.severity > s) return note.severity\n      return s\n    }, ntfn.IGNORE)\n    const ni = this.page.noteIndicator\n    setSeverityClass(ni, severity)\n    if (unacked) {\n      ni.textContent = (unacked > noteCacheSize - 1) ? `${noteCacheSize - 1}+` : unacked\n      Doc.show(ni)\n    } else Doc.hide(ni)\n  }\n\n  prependListElement (noteList, note, el) {\n    note.el = el\n    el.note = note\n    noteList.prepend(el)\n    while (noteList.children.length > noteCacheSize) noteList.removeChild(noteList.lastChild)\n    this.setNoteTimes(noteList)\n  }\n\n  /*\n   * makeNote constructs a single notification element for the drop-down\n   * notification list.\n   */\n  makeNote (note) {\n    const el = this.page.noteTmpl.cloneNode(true)\n    if (note.severity > ntfn.POKE) {\n      const cls = note.severity === ntfn.SUCCESS ? 'good' : note.severity === ntfn.WARNING ? 'warn' : 'bad'\n      el.querySelector('div.note-indicator').classList.add(cls)\n    }\n\n    el.querySelector('div.note-subject').textContent = note.subject\n    el.querySelector('div.note-details').textContent = note.details\n    return el\n  }\n\n  makePoke (note) {\n    const el = this.page.pokeTmpl.cloneNode(true)\n    const d = new Date(note.stamp)\n    Doc.tmplElement(el, 'dateTime').textContent = `${d.toLocaleDateString()}, ${d.toLocaleTimeString()}`\n    Doc.tmplElement(el, 'details').textContent = `${note.subject}: ${note.details}`\n    return el\n  }\n\n  /*\n   * loading appends the loader to the specified element and displays the\n   * loading icon. The loader will block all interaction with the specified\n   * element until Application.loaded is called.\n   */\n  loading (el) {\n    const loader = this.page.loader.cloneNode(true)\n    el.appendChild(loader)\n    return () => { loader.remove() }\n  }\n\n  /* orders retrieves a list of orders for the specified dex and market. */\n  orders (host, mktID) {\n    let o = this.user.exchanges[host].markets[mktID].orders\n    if (!o) {\n      o = []\n      this.user.exchanges[host].markets[mktID].orders = o\n    }\n    return o\n  }\n\n  /* order attempts to locate an order by order ID. */\n  order (oid) {\n    for (const xc of Object.values(this.user.exchanges)) {\n      for (const market of Object.values(xc.markets)) {\n        if (!market.orders) continue\n        for (const ord of market.orders) {\n          if (ord.id === oid) return ord\n        }\n      }\n    }\n  }\n\n  /*\n   * checkResponse checks the response object as returned from the functions in\n   * the http module. If the response indicates that the request failed, a\n   * message will be displayed in the drop-down notifications and false will be\n   * returned.\n   */\n  checkResponse (resp, skipNote) {\n    if (!resp.requestSuccessful || !resp.ok) {\n      if (this.user.inited && !skipNote) this.notify(ntfn.make('API error', resp.msg, ntfn.ERROR))\n      return false\n    }\n    return true\n  }\n\n  /**\n   * signOut call to /api/logout, if response with no errors occurred clear all\n   * store, remove auth, darkMode cookies and reload the page, otherwise will\n   * show a notification\n   */\n  async signOut () {\n    const res = await postJSON('/api/logout')\n    if (!this.checkResponse(res)) {\n      Doc.hide(this.page.profileBox)\n      return\n    }\n    State.clearAllStore()\n    State.removeAuthCK()\n    window.location.href = '/login'\n  }\n}\n\n/* getSocketURI returns the websocket URI for the client. */\nfunction getSocketURI () {\n  const protocol = (window.location.protocol === 'https:') ? 'wss' : 'ws'\n  return `${protocol}://${window.location.host}/ws`\n}\n\n/*\n * severityClassMap maps a notification severity level to a CSS class that\n * assigns a background color.\n */\nconst severityClassMap = {\n  [ntfn.SUCCESS]: 'good',\n  [ntfn.ERROR]: 'bad',\n  [ntfn.WARNING]: 'warn'\n}\n\n/* handlerFromPath parses the handler name from the path. */\nfunction handlerFromPath (path) {\n  return path.replace(/^\\//, '').split('/')[0].split('?')[0].split('#')[0]\n}\n\n/* nowString creates a string formatted like HH:MM:SS.xxx */\nfunction nowString () {\n  const stamp = new Date()\n  const h = stamp.getHours().toString().padStart(2, '0')\n  const m = stamp.getMinutes().toString().padStart(2, '0')\n  const s = stamp.getSeconds().toString().padStart(2, '0')\n  const ms = stamp.getMilliseconds().toString().padStart(3, '0')\n  return `${h}:${m}:${s}.${ms}`\n}\n\nfunction setSeverityClass (el, severity) {\n  el.classList.remove('bad', 'warn', 'good')\n  el.classList.add(severityClassMap[severity])\n}\n\n/* updateMatch updates the match in or adds the match to the order. */\nfunction updateMatch (order, match) {\n  for (const i in order.matches) {\n    const m = order.matches[i]\n    if (m.matchID === match.matchID) {\n      order.matches[i] = match\n      return\n    }\n  }\n  order.matches = order.matches || []\n  order.matches.push(match)\n}\n","import Application from './js/app'\nimport './css/application.scss'\nconst app = new Application()\napp.start()\n"],"sourceRoot":""}